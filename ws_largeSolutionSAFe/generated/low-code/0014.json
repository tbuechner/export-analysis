{
    "type": "cf.cplace.platform.ChangeListener",
    "code": "/**\n * @author Rakshit Midha\n * @description Calculates Flow Time metric\n */\n\n//--------------------------------------------------------------------------------------//\n//                                       LOG AND DEBUG                                  //\n//--------------------------------------------------------------------------------------//\ncplace.setLogName('changelistener-calculate-flow-time-metric');\n\n\n//--------------------------------------------------------------------------------------//\n//                                       CONFIGURATION                                  //\n//--------------------------------------------------------------------------------------//\n\nconst CAPABILITY = {\n  TYPE: 'cf.cplace.solution.safe.capability',\n  ATTR: {\n    'ACTUAL_START_DATE': 'cf.cplace.solution.safe.actualStartDate',\n    'ACTUAL_END_DATE': 'cf.cplace.solution.safe.actualEndDate',\n    'FLOW_TIME': 'cf.cplace.solution.safe.flowTime'\n  }\n};\n\n//--------------------------------------------------------------------------------------//\n//                                       INITIALIZATION                                 //\n//--------------------------------------------------------------------------------------//\n\nfunction main(){\nconst capability = changeEvent.getEntity();\n\nconst flowMetric = calculateFlowTimeMetric(capability);\n\nif (flowMetric !== -1) {\n  setFlowTime(capability, flowMetric);\n}\n}\nmain();\n\nfunction calculateFlowTimeMetric(capability) {\n  const actualStartDate = capability.get(CAPABILITY.ATTR.ACTUAL_START_DATE);\n  const actualEndDate = capability.get(CAPABILITY.ATTR.ACTUAL_END_DATE);\n\n  if (!actualStartDate || !actualEndDate) {\n    return -1;\n  }\n\n  if (actualStartDate.equals(actualEndDate)) {\n    return 0;\n  }\n\n  if (actualEndDate.isAfter(actualStartDate)) {\n    return Days.daysBetween(actualStartDate.withTimeAtStartOfDay(), actualEndDate.withTimeAtStartOfDay()).getDays();\n  }\n  \n  return -1;\n}\n\nfunction setFlowTime(capability, flowMetric) {\n  const attributes = {};\n  attributes[CAPABILITY.ATTR.FLOW_TIME] = flowMetric;\n\n  cplace.actions().updatePage(capability, {customAttributes: attributes});\n  capability.registerAttributeForRefresh(CAPABILITY.ATTR.FLOW_TIME);\n}",
    "attributes": [
        "cf.cplace.solution.safe.actualEndDate",
        "cf.cplace.solution.safe.actualStartDate"
    ],
    "type_name": "cf.cplace.solution.safe.capability",
    "counter": 14
}
{
    "type": "custom_attribute",
    "code": "var cycle = embeddingPage;\nvar meetings = cycle.getIncomingPages('cf.cplace.solution.okr.meeting', 'cf.cplace.solution.okr.cycle');\nvar workshop;\ncplace.each(meetings, function(meeting) {\n  if (meeting.get('cf.cplace.solution.okr.meetingType') == \"Workshop\") {\n    workshop = meeting;\n  };\n})\n\nvar cycleNames = [];\nvar counterArray = [];\nvar row = 0;\nvar values = [];\nvar sortedPages = []\nvar seriesCyclePhase = [];\nvar seriesInputPhase = [];\nvar seriesWorkshop = [];\nvar seriesStrategy = [];\nvar lang = cplace.utils().getCurrentUser().getUserLanguage();\n\nvar messages = {\n  inputPhase: {\n    en: 'Input Phase ',\n    de: 'Input-Phase '\n  },\n  cyclePhase: {\n    en: 'Cycle Implementation Phase ',\n    de: 'Cycle Umsetzungs-Phase '\n  },\n  workshop: {\n    en: 'Workshop ',\n    de: 'Workshop '\n  },\n  strategy: {\n    en: 'Strategy Update ',\n    de: 'Strategie Update '\n  }\n};\n\n\nvar cycleName = cycle.getName();\nvar cycleStart = cycle.get('cf.cplace.solution.okr.start');\nvar cycleEnd = cycle.get('cf.cplace.solution.okr.end');\nvar workshopDate;\nif (workshop) {\n  workshopDate = workshop.get('cf.cplace.solution.okr.date');  \n}\n\nif (cycleStart && cycleEnd && workshop) {\n\n  cycleNames.push(cycleName);\n  seriesCyclePhase.push({\n    x: cycleStart.getMillis(),\n    x2: cycleEnd.getMillis(),\n    y: row,\n    color: '#006ae5',\n    dataLabels: {\n      format: messages.cyclePhase[lang] + cycleName\n    },\n    name: messages.cyclePhase[lang] + cycleName\n  });\n  seriesInputPhase.push({\n    x: workshopDate.minusDays(21).getMillis(),\n    x2: workshopDate.getMillis(),\n    color: '#151821',\n    y: row,\n    dataLabels: {\n      format: messages.inputPhase[lang]\n    },\n    name: messages.inputPhase[lang] + cycleName\n  });\n  seriesWorkshop.push({\n    x: workshopDate.getMillis(),\n    y: row,\n    date: cycleStart.toString(\"MMM/dd\"),\n    dataLabels: {\n      format: messages.workshop[lang]\n    },\n    color: '#a5ffd6',\n    name: messages.inputPhase[lang]\n  })\n  seriesStrategy.push({\n    x: cycleEnd.minusDays(28).getMillis(),\n    y: row,\n    date: cycleStart.toString(\"MMM/dd\"),\n    color: '#a5ffd6',\n    dataLabels: {\n      format: messages.strategy[lang]\n    },\n    name: messages.strategy[lang]\n  })\n\n\n}\n\nvar chart = {\n  chart: {\n    type: 'xrange',\n    zoomType: 'x',\n\tbackgroundColor: '#F2F4FA',\n  },\n  legend: {\n    enabled: false\n  },\n  title: {\n    text: ''\n  },\n  xAxis: {\n    type: 'datetime',\n    plotLines: [{\n      value: new Date().setHours(0),\n      dashStyle: 'dash',\n      width: 2,\n      zIndex: 5,\n    }],\n    lineColor: '#F2F4FA',\n    tickLength: 1,\n  },\n  yAxis: {\n    title: '',\n    labels: {\n      enabled: false\n    },\n    gridLineColor: 'rgba(255,255,255,0)',\n    lineColor: '#F2F4FA',\n    categories: cycleNames,\n    reversed: true,\n    max: 0\n  },\n  plotOptions: {\n    series: {\n      borderRadius: 5,\n      dataLabels: {\n        enabled: true\n      }\n    }\n  },\n  series: [{\n    name: '',\n    data: seriesCyclePhase,\n    dataLabels: {\n      enabled: true\n    }\n  }, {\n    name: '',\n    data: seriesInputPhase,\n    dataLabels: {\n      enabled: true\n    }\n  }, {\n    type: 'scatter',\n    stickyTracking: false,\n    marker: {\n      enabled: true,\n      symbol: 'diamond',\n      lineColor: 'white',\n      lineWidth: 1,\n      radius: 13\n    },\n    data: seriesWorkshop\n  }, {\n    type: 'scatter',\n    stickyTracking: false,\n    marker: {\n      enabled: true,\n      symbol: 'diamond',\n      lineColor: 'white',\n      lineWidth: 1,\n      radius: 13\n    },\n    data: seriesStrategy\n  }],\n  tooltip: {\n    enabled: false\n  }\n};\nreturn chart",
    "attributes": null,
    "type_name": null,
    "counter": 18
}
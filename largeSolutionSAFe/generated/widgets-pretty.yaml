- rows:
  - columns:
    - proportion: 4
      widgets:
      - attributes:
        - name: content
          value: 'r<p style="text-align: center"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2VsaTRhbXNjd2hrdGdlNHFneXBhY212NHEiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5kYXRhU291cmNlIiwidmFsdWVzIjpbeyJzdHJpbmciOiJzZWFyY2gifV19LHsibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5pbmNsdWRlQWxsU2VhcmNoUmVzdWx0cyIsInZhbHVlcyI6W3siYm9vbGVhbiI6ZmFsc2V9XX0seyJuYW1lIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0V2lkZ2V0LnNjcmlwdCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1widmVyc2lvblwiOjEsXCJzY3JpcHRcIjpcIlwvKipcXG4gKiBTb2x1dGlvbiAtPiBTb2x1dGlvbiBUcmFpbiBFbmdpbmVlciBbMC4uMV1cXG4gKiBTb2x1dGlvbiAtPiBTb2x1dGlvbiBUcmFpbiBBcmNoaXRlY3QgWzAuLjFdXFxuICogU29sdXRpb24gLT4gU29sdXRpb24gTWFuYWdlbWVudCBbMC4uMV1cXG4gKiBcXG4gKlwvXFxuXFxuY29uc3QgU09MVVRJT04gPSB7XFxuICAgIFRZUEU6ICdjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zb2x1dGlvbicsXFxuICAgIEFUVFI6IHtcXG4gICAgICAgIFNUX0VOR0lORUVSOiAnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25UcmFpbkVuZ2luZWVyJyxcXG4gICAgICAgIFNUX0FSQ0hJVEVDVDogJ2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uVHJhaW5BcmNoaXRlY3QnLFxcbiAgICAgICAgU09MX01BTkFHRU1FTlQ6ICdjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zb2x1dGlvbk1hbmFnZW1lbnQnXFxuICAgIH1cXG59XFxuXFxuY29uc3QgVEhVTUJOQUlMX1NJWkUgPSAnNjBweCc7XFxuXFxuXFxuXC9cL2ZpbmQgYWxsIHJlbGV2YW50IHJvbGVzIFwvIHJlc3BvbnNpYmxlc1xcblxcbmxldCBzb2x1dGlvbiA9IGVtYmVkZGluZ1BhZ2U7XFxuXFxubGV0IHVzZXJzID0gW107XFxuXFxubGV0IHN0ZSA9IHNvbHV0aW9uLmdldChTT0xVVElPTi5BVFRSLlNUX0VOR0lORUVSKTtcXG5sZXQgc3RhID0gc29sdXRpb24uZ2V0KFNPTFVUSU9OLkFUVFIuU1RfQVJDSElURUNUKTtcXG5sZXQgc29sTWFuID0gc29sdXRpb24uZ2V0KFNPTFVUSU9OLkFUVFIuU09MX01BTkFHRU1FTlQpO1xcblxcblxcbmlmIChzdGUpIHtcXG4gICAgYWRkVXNlcihzdGUsIFxcXCJTb2x1dGlvbiBUcmFpbiBFbmdpbmVlclxcXCIpXFxufVxcbmlmIChzdGEpIHtcXG4gICAgYWRkVXNlcihzdGEsIFxcXCJTb2x1dGlvbiBUcmFpbiBBcmNoaXRlY3RcXFwiKVxcbn1cXG5pZiAoc29sTWFuKSB7XFxuICAgIGFkZFVzZXIoc29sTWFuLCBcXFwiU29sdXRpb24gTWFuYWdlbWVudFxcXCIpXFxufVxcblxcblwvXC91c2Vycy5zb3J0KCh1c2VyMSwgdXNlcjIpID0-IHVzZXIxLm5hbWUgPiB1c2VyMi5uYW1lID8gMSA6IC0xKTtcXG5cXG5cXG5sZXQgb3V0cHV0ID0gJyc7XFxuXFxuXFxuZm9yIChsZXQgaSA9IDA7IGkgPCB1c2Vycy5sZW5ndGg7IGkrKykge1xcbiAgb3V0cHV0ICs9IGdlbmVyYXRlVXNlck1hcmt1cE5ldyh1c2Vyc1tpXSk7XFxufVxcblxcbnJldHVybiAnPGRpdiBzdHlsZT1cXFwiZGlzcGxheTpmbGV4O2ZsZXgtZmxvdzpyb3cgd3JhcDtcXFwiPicgKyBvdXRwdXQgKyAnPFwvZGl2Pic7XFxuXFxuXFxuZnVuY3Rpb24gYWRkVXNlcihtZW1iZXIsIHRpdGxlKSB7XFxuICAgIHVzZXJzLnB1c2goe1xcbiAgICAgICAgbmFtZTogbWVtYmVyLmdldE5hbWUoKSxcXG4gICAgICAgIGlkOiBtZW1iZXIuZ2V0SWQoKS5zcGxpdCgnXC8nKS5wb3AoKSxcXG4gICAgICAgIHVybDogbWVtYmVyLmdldFVybCgpLFxcbiAgICAgICAgdGl0bGU6IHRpdGxlXFxuICAgIH0pXFxufVxcblxcbmZ1bmN0aW9uIGdldFRlbmFudE5hbWUocGFnZSl7XFxuIGxldCB1cmw9ZW1iZWRkaW5nUGFnZS5nZXRVcmwoKS5zcGxpdCgnXC9wYWdlc1wvJylbMF07XFxuIGxldCB0ZW5hbnROYW1lPSB1cmwuc3BsaXQoJ1wvJylbM107XFxuICByZXR1cm4gdGVuYW50TmFtZTtcXG59XFxuXFxuZnVuY3Rpb24gZ2VuZXJhdGVVc2VyTWFya3VwICh1c2VyKSB7XFxuICAgIHJldHVybiAnPGRpdiBzdHlsZT1cXFwibWFyZ2luOjhweDt0ZXh0LWFsaWduOiBjZW50ZXI7XFxcIj4nXFxuICAgICAgICArICc8aW1nIGNsYXNzPVxcXCJjcGxhY2UtcGVyc29uX19pbWFnZVxcXCIgc3R5bGU9XFxcIm1hcmdpbjogNXB4XFxcIiBzcmM9XFxcIlwvcGVyc29uXC9kb3dubG9hZFRodW1ibmFpbD9pZD0nICsgdXNlci5pZCArICdcXFwiIHdpZHRoPVxcXCInICsgVEhVTUJOQUlMX1NJWkUgKyAnXFxcIiBoZWlnaHQ9XFxcIicgKyBUSFVNQk5BSUxfU0laRSArICdcXFwiIHRpdGxlPVxcXCInICsgdXNlci5uYW1lICsgJ1xcXCJcLz4nXFxuICAgICAgICArICc8ZGl2IHN0eWxlPVxcXCJmb250LXNpemU6IDlwdDttYXJnaW46M3B4O1xcXCI-JyArIHVzZXIubmFtZSArICc8XC9kaXY-J1xcbiAgICAgICAgKyAnPGRpdiBzdHlsZT1cXFwiZm9udC1zaXplOiA4cHQ7bWFyZ2luOjNweDtcXFwiPicgKyB1c2VyLnRpdGxlICsgJzxcL2Rpdj4nXFxuICAgICAgKyAnPFwvZGl2Pic7XFxuICB9XFxuXFxuXC9cLzxpbWcgY2xhc3M9XFxcImN1c3RvbS1wcm9maWxlLWltYWdlXFxcIiBzcmM9JysgdGVuYW50VXJsICsncGVyc29uXC9kb3dubG9hZFRodW1ibmFpbD9pZD0nICsgdXNlckhyZWYgKyAnPidcXG5cXG5mdW5jdGlvbiBnZW5lcmF0ZVVzZXJNYXJrdXBOZXcgKHVzZXIpIHtcXG4gICAgcmV0dXJuICc8ZGl2IHN0eWxlPVxcXCJtYXJnaW46OHB4O3RleHQtYWxpZ246IGNlbnRlcjtcXFwiPidcXG4gICAgICAgICsgJzxpbWcgY2xhc3M9XFxcImNwbGFjZS1wZXJzb25fX2ltYWdlXFxcIiBzdHlsZT1cXFwibWFyZ2luOiA1cHg7aGVpZ2h0OjYwcHg7d2lkdGg6NjBweFxcXCIgc3JjPVxcXCJcLycrZ2V0VGVuYW50TmFtZShlbWJlZGRpbmdQYWdlKSsnXC9wZXJzb25cL2Rvd25sb2FkVGh1bWJuYWlsP2lkPScgKyB1c2VyLmlkICsgJ1xcXCIgd2lkdGg9XFxcIicgKyBUSFVNQk5BSUxfU0laRSArICdcXFwiIGhlaWdodD1cXFwiJyArIFRIVU1CTkFJTF9TSVpFICsgJ1xcXCIgdGl0bGU9XFxcIicgKyB1c2VyLm5hbWUgKyAnXFxcIlwvPidcXG4gICAgICAgICsgJzxkaXYgc3R5bGU9XFxcImZvbnQtc2l6ZTogMTBwdDttYXJnaW46M3B4O1xcXCI-JyArIHVzZXIubmFtZSArICc8XC9kaXY-J1xcbiAgICAgICAgKyAnPGRpdiBzdHlsZT1cXFwiZm9udC1zaXplOiA5cHQ7bWFyZ2luOjNweDtcXFwiPicgKyB1c2VyLnRpdGxlICsgJzxcL2Rpdj4nXFxuICAgICAgKyAnPFwvZGl2Pic7XFxuICB9XCIsXCJ1cGdyYWRlQWNrXCI6dHJ1ZSxcImRlc2NyaXB0aW9uXCI6XCJcIn0ifV19LHsibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC50YWJsZVNlbGVjdGlvbk9ubHkiLCJ2YWx1ZXMiOlt7ImJvb2xlYW4iOmZhbHNlfV19LHsibmFtZSI6InNvcnRPcmRlciIsInZhbHVlcyI6W3sic3RyaW5nIjoiQXVmc3RlaWdlbmQifV19XX0</embeddedwidget></p>'
        - name: height
          value: d180
        - name: localizedWidgetTitle
          value: m{"de":"Verantwortliche","en":"Responsibles"}
        collapsed: false
        id: id_pn504ux7rxcnyebsffwcehkwf
        widgetType: cf.platform.richString
    - proportion: 4
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_d4lwyyvb8paelrptlx5uekatz\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_d4lwyyvb8paelrptlx5uekatz\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"content\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Beschreibung","en":"Description"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d180
        collapsed: false
        id: _jbdk5mktxcz8a4f9f7yyc2yxb
        widgetType: cf.cplace.platform.attributesGroup
    - proportion: 4
      widgets:
      - attributes:
        - name: content
          value: "r<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t<tbody>\n\
            \t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 25%\">\n\t\t\t\
            <h4><span style=\"font-size: 26px\"><span style=\"color: rgb(61, 143,\
            \ 140)\"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2tzbmMxbDJ4ZGZ1OTk0NTk3ZnNqbzVvNWIiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJ0eXBlc1wiOltcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFnaWxlUmVsZWFzZVRyYWluXCJdfSx7XCJjdXN0b21PdXRnb2luZ1N1YlNlYXJjaFwiOlwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUucHJvZ3JhbVwiLFwic2VhcmNoXCI6e1wiZmlsdGVyc1wiOlt7XCJjb250ZW50VHlwZXNcIjpbXCJwYWdlXCJdfSx7XCJ0eXBlc1wiOltcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnByb2dyYW1cIl19LHtcInJlbGF0aXZlQ3VzdG9tUmVmZXJlbmNlXCI6XCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zb2x1dGlvblwiLFwicmVmZXJlbmNlT3BlcmF0b3JcIjpcImVtYmVkZGluZ0N1c3RvbUVudGl0eVwifV19fV19In1dfV19</embeddedwidget></span></span></h4>\n\
            \t\t\t</td>\n\t\t\t<td style=\"text-align: center; width: 25%\">\n\t\t\
            \t<h4><span style=\"font-size: 26px\"><span style=\"color: rgb(61, 143,\
            \ 140)\"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2NpYW5udjVkMXRjeTBsdXNkdGV0ZnU0YWYiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJ0eXBlc1wiOltcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnRlYW1cIl19LHtcImN1c3RvbU91dGdvaW5nU3ViU2VhcmNoXCI6XCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5hZ2lsZVJlbGVhc2VUcmFpblwiLFwic2VhcmNoXCI6e1wiZmlsdGVyc1wiOlt7XCJjb250ZW50VHlwZXNcIjpbXCJwYWdlXCJdfSx7XCJ0eXBlc1wiOltcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFnaWxlUmVsZWFzZVRyYWluXCJdfSx7XCJjdXN0b21PdXRnb2luZ1N1YlNlYXJjaFwiOlwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUucHJvZ3JhbVwiLFwic2VhcmNoXCI6e1wiZmlsdGVyc1wiOlt7XCJjb250ZW50VHlwZXNcIjpbXCJwYWdlXCJdfSx7XCJ0eXBlc1wiOltcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnByb2dyYW1cIl19LHtcInJlbGF0aXZlQ3VzdG9tUmVmZXJlbmNlXCI6XCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zb2x1dGlvblwiLFwicmVmZXJlbmNlT3BlcmF0b3JcIjpcImVtYmVkZGluZ0N1c3RvbUVudGl0eVwifV19fV19fV19In1dfV19</embeddedwidget></span></span></h4>\n\
            \t\t\t</td>\n\t\t\t<td style=\"text-align: center; width: 25%\">\n\t\t\
            \t<h4><span style=\"font-size: 26px\"><span style=\"color: rgb(61, 143,\
            \ 140)\"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2g3NmxvdnBmdXJqZ2V3aGMybGU2dHFhYnkiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJyZWxhdGl2ZVNwYWNlXCI6XCJ0cnVlXCJ9LHtcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVwiXX0se1wicmVsYXRpdmVDdXN0b21SZWZlcmVuY2VcIjpcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uLnJlZmVyZW5jZVwiLFwicmVmZXJlbmNlT3BlcmF0b3JcIjpcImVtYmVkZGluZ0N1c3RvbUVudGl0eVwifV19In1dfV19</embeddedwidget></span></span></h4>\n\
            \t\t\t</td>\n\t\t\t<td style=\"text-align: center; width: 25%\">\n\t\t\
            \t<h4><span style=\"font-size: 26px\"><span style=\"color: rgb(61, 143,\
            \ 140)\"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3J1aGYzdDl4dHBjdDl2ZTdzNW5vMHpiNTciLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJ0eXBlc1wiOltcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmZlYXR1cmVcIl19LHtcImN1c3RvbU91dGdvaW5nU3ViU2VhcmNoXCI6XCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XCIsXCJzZWFyY2hcIjp7XCJmaWx0ZXJzXCI6W3tcImNvbnRlbnRUeXBlc1wiOltcInBhZ2VcIl19LHtcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVwiXX0se1wicmVsYXRpdmVDdXN0b21SZWZlcmVuY2VcIjpcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uLnJlZmVyZW5jZVwiLFwicmVmZXJlbmNlT3BlcmF0b3JcIjpcImVtYmVkZGluZ0N1c3RvbUVudGl0eVwifV19fV19In1dfV19</embeddedwidget></span></span></h4>\n\
            \t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center\"\
            >\n\t\t\t<h5><span style=\"color: rgb(61, 143, 140)\">ARTs</span></h5>\n\
            \t\t\t</td>\n\t\t\t<td style=\"text-align: center\">\n\t\t\t<h5><span\
            \ style=\"color: rgb(61, 143, 140)\">Teams</span></h5>\n\t\t\t</td>\n\t\
            \t\t<td style=\"text-align: center\">\n\t\t\t<h5><span style=\"color:\
            \ rgb(61, 143, 140)\">Capabilities</span></h5>\n\t\t\t</td>\n\t\t\t<td\
            \ style=\"text-align: center; width: 127px\">\n\t\t\t<h5><span style=\"\
            color: rgb(61, 143, 140)\">Features</span></h5>\n\t\t\t</td>\n\t\t</tr>\n\
            \t</tbody>\n</table>"
        - name: height
          value: d180
        - name: localizedWidgetTitle
          value: m{"de":"Statistik","en":"Statistics"}
        collapsed: false
        id: _zc0o57ii4xba2t7dy4q80p7is
        widgetType: cf.platform.richString
  - columns:
    - proportion: 4
      widgets:
      - attributes:
        - name: content
          value: 'r<p><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzNhNnBkNmx4bnFubjUzN3VwZjMzOG9kM3oiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0uc2luZ2xlQXR0cmlidXRlIiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLnBsYXRmb3JtLmluUGxhY2VFZGl0aW5nIiwidmFsdWVzIjpbeyJib29sZWFuIjp0cnVlfV19LHsibmFtZSI6ImNmLnBsYXRmb3JtLnF1b3RlZEF0dHJpYnV0ZU5hbWUiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IidjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jdXJyZW50UGknIn1dfSx7Im5hbWUiOiJjZi5wbGF0Zm9ybS5yZWxvYWRBZnRlckNoYW5nZSIsInZhbHVlcyI6W3siYm9vbGVhbiI6ZmFsc2V9XX0seyJuYW1lIjoiY2YucGxhdGZvcm0uc2luZ2xlQ29sdW1uIiwidmFsdWVzIjpbeyJib29sZWFuIjp0cnVlfV19LHsibmFtZSI6ImNmLnBsYXRmb3JtLnVzZVBhcmVudCIsInZhbHVlcyI6W3siYm9vbGVhbiI6ZmFsc2V9XX0seyJuYW1lIjoiY2YucGxhdGZvcm0ud2l0aExhYmVsIiwidmFsdWVzIjpbeyJib29sZWFuIjp0cnVlfV19LHsibmFtZSI6ImNmLnBsYXRmb3JtLndpdGhWYWx1ZSIsInZhbHVlcyI6W3siYm9vbGVhbiI6dHJ1ZX1dfV19</embeddedwidget></p>


            <div class="current-pi">

            <div class="cplace-ckeditor-img-full-maxwidth" style="background-color:
            rgb(119, 222, 166); border-radius: 4px; border: 1px solid transparent;
            color: rgb(60, 118, 61); font-size: 14px; margin-bottom: 20px; padding:
            10px; text-align: center"><span style="color: rgb(0, 0, 0)"><strong><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2x6cWNoYzhxMmJzY3c5bnFuZGw5MDl0bGMiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJjcGxhY2Uuc2V0TG9nTmFtZSgnQ3VycmVudCBQSScpO1xcblwvXC9Db25maWd1cmF0aW9uc1xcbmNvbnN0IFBJX0RBU0hCT0FSRCA9IHtcXG4gICAgVFlQRTonY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY3VycmVudFBpRGFzaGJvYXJkJyxcXG4gICAgQVRUUjp7XFxuICAgICAgUEFSRU5UOidjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5wYXJlbnQnXFxuICAgIH1cXG4gIH1cXG4gIFxcbiAgbGV0IGZpbmFsbGluaz0nJztcXG4gIGxldCBsaW5rLCBuYW1lO1xcbiAgbGV0IHBpRGFzaGJvYXJkU2VhcmNoID0gbmV3IFNlYXJjaCgpXFxuICAgIC5hZGQoRmlsdGVycy5zcGFjZShlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSkpXFxuICAgIC5hZGQoRmlsdGVycy50eXBlKFBJX0RBU0hCT0FSRC5UWVBFKSlcXG4gICAgLmFkZChGaWx0ZXJzLmN1c3RvbUF0dHJpYnV0ZU5vbmVtcHR5KFBJX0RBU0hCT0FSRC5BVFRSLlBBUkVOVCkpXFxuICAgIC5maW5kQWxsUGFnZXMoKTtcXG5cXG5sZXQgcmVzdWx0ID0gSXRlcmFibGVzLmdldEZpcnN0KHBpRGFzaGJvYXJkU2VhcmNoLCBudWxsKTtcXG5cXG5pZiAocmVzdWx0KSB7XFxuICAgIGxpbmsgPSByZXN1bHQuZ2V0VXJsKCk7XFxuICAgIG5hbWUgPSByZXN1bHQuZ2V0TmFtZSgpO1xcbn1cXG4gIFxcbnJldHVybiAnPGEgaHJlZj1cXFwiJytsaW5rKydcXFwiY2xhc3M9XFxcImN1cnJlbnQtY29sb3JcXFwiPk9wZW4gQ3VycmVudCBQSSBEYXNoYm9hcmQ8XC9hPic7XCIsXCJ1cGdyYWRlQWNrXCI6dHJ1ZSxcImRlc2NyaXB0aW9uXCI6XCJcIn0ifV19XX0</embeddedwidget></strong></span></div>

            </div>'
        - name: height
          value: d230
        - name: localizedWidgetTitle
          value: m{"de":"Laufendes PI","en":"Current PI"}
        collapsed: false
        id: _eh9bbcn3sdx2kbxv7k27a649t
        widgetType: cf.platform.richString
    - proportion: 8
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * HIGHCHART\\n * @customType\
            \ cf.cplace.solution.safe.solution\\n * @layout default layout\\n * @author\
            \ Christopher W\xF6lfle <christopher.woelfle@cplace.com>\\n * @version\
            \ 1.0\\n * @description Displays the PI statistics\\n */\\n\\n/**\\n *\
            \ Identifier: highchart-programIncrement-progress\\n * Type of chart:\
            \ multi pie chart\\n * Type of search pages: cf.cplace.solution.safe.team,\
            \ cf.cplace.solution.safe.story\\n * Functionality: visualizes different\
            \ kinds of kpis\\n *\\n * INSTRUCTIONS TO ADD CHARTS\\n * 1. Increase\
            \ TOTAL_NUMBER_OF_KPIS +1\\n * 2. Define Following Values\\n *      -\
            \ CX_TITLE\\n *      - CX_ACTUAL\\n *      - CX_ACTUAL_PERCENTAGE\\n *\
            \      - CX_DISPLAY_NUMBER\\n *      - CX_DISPLAY_TEXT\\n *      - CX_COLOR\\\
            n * 3. Create chart\\n *      - createChart(CX_TITLE, CX_ACTUAL_PERCENTAGE,\
            \ CX_DISPLAY_NUMBER, CX_DISPLAY_TEXT, CX_COLOR) {\\n *\\n *\\n * @author\
            \ Lukas Scheiring (cF)\\n * Last edited: 18.08.2022\\n */\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       LOG AND DEBUG              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            nconst DEBUG = false;\\ncplace.setLogName(\\\"highchart-programStartPage-statistics\\\
            \");\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       CONFIGURATION              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n//CHART COLOURS\\nconst COLOURS = {\\n    TEXT_COLOR: \\\"#003653\\\
            \",\\n    BACKGROUND_COLOR: \\\"#ffffff\\\",\\n    GREY: \\\"gray\\\"\
            ,\\n    RED: \\\"#f30000\\\",\\n    DARK_RED: \\\"#9e0000\\\",\\n    YELLOW:\
            \ \\\"#ffc700\\\",\\n    GREEN: \\\"#5ab500\\\",\\n    BLUE: \\\"#A6CAD8\\\
            \",\\n};\\n\\n//CHART SETTINGS\\nconst TOTAL_NUMBER_OF_KPIS = 5;\\nconst\
            \ Y_POSITION = \\\"40%\\\";\\n\\n//LANGUAGE SETTINGS\\nconst NAMINGS =\
            \ {\\n    de: {\\n        CHART_TITLE: \\\"\\\",\\n    },\\n    en: {\\\
            n        CHART_TITLE: \\\"\\\",\\n    },\\n};\\n\\n//PLACEHOLDER\\nconst\
            \ PROGRAM_INCREMENT = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n    ATTR: {\\n        TITLE: \\\"cf.cplace.solution.safe.title\\\
            \",\\n        SOLUTION: \\\"cf.cplace.solution.safe.solution\\\",\\n \
            \       START_DATE: \\\"cf.cplace.solution.safe.startDate\\\",\\n    \
            \    END_DATE: \\\"cf.cplace.solution.safe.endDate\\\",\\n        PREDECESSOR:\
            \ \\\"cf.cplace.solution.safe.predecessor\\\",\\n        PERIOD_STATUS:\
            \ \\\"cf.cplace.solution.safe.periodStatus\\\",\\n        CAPACITY: \\\
            \"cf.cplace.solution.safe.capacity\\\"\\n    },\\n});\\n\\nconst CAPABILITY\
            \ = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.capability\\\
            \",\\n    ATTR: {\\n        ACTUAL_START_DATE: \\\"cf.cplace.solution.safe.actualStartDate\\\
            \",\\n        ACTUAL_END_DATE: \\\"cf.cplace.solution.safe.actualEndDate\\\
            \",\\n        PROGRAM_INCREMENT: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n        STATE: \\\"cf.cplace.solution.safe.state\\\"\\n    },\\\
            n    ENUM: {\\n        STATE: {\\n            DONE: \\\"#85 - Done\\\"\
            \\n        }\\n    }\\n});\\n\\nconst CONFIDENCE_VOTE = /** @type {const}\
            \ */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.confidenceVote\\\",\\\
            n    ATTR: {\\n        PROGRAMM_INCREMENT: \\\"cf.cplace.solution.safe.confidenceVote.PI\\\
            \",\\n        RESULT: \\\"cf.cplace.solution.safe.confidenceVote.result\\\
            \",\\n        ONE_FINGER: \\\"cf.cplace.solution.safe.confidenceVote.oneFinger\\\
            \",\\n        TWO_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.twoFingers\\\
            \",\\n        THREE_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.threeFingers\\\
            \",\\n        FOUR_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.fourFingers\\\
            \",\\n        FIVE_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.fiveFingers\\\
            \",\\n    },\\n});\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       INITIALIZATION             \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            nlog(\\\"Start...\\\");\\nlet currentUser = cplace.utils().getCurrentUser();\\\
            nconst userLanguage = currentUser.getUserLanguage();\\n\\n/** @type {Page<'cf.cplace.solution.safe.solution'>}\
            \ */\\nlet solution = embeddingPage;\\n\\nlet programIncrement = solution.get(\\\
            \"cf.cplace.solution.safe.currentPi\\\");\\n\\nlet chartIndex = 0;\\n\\\
            n//Container\\nlet capabilities = [];\\n/** @type {Page<'cf.cplace.solution.safe.confidenceVote'>\
            \ | undefined} */\\nlet confidenceVote;\\n\\nlet series = [];\\nlet yAxis\
            \ = [];\\nlet pane = [];\\n\\n//Dates\\nlet piStartDate = programIncrement.get(PROGRAM_INCREMENT.ATTR.START_DATE).withTimeAtStartOfDay();\\\
            nlet piEndDate = programIncrement.get(PROGRAM_INCREMENT.ATTR.END_DATE).withTimeAtStartOfDay();\\\
            nlet today = new DateTime().withTimeAtStartOfDay();\\n\\n//KPIs\\nlet\
            \ totalDaysOfPI = Days.daysBetween(piStartDate, piEndDate).getDays();\\\
            nlet passedDaysOfPI = getPassedDays(piStartDate, piEndDate, today, totalDaysOfPI);\\\
            n\\nlet totalCapacity = programIncrement.get(PROGRAM_INCREMENT.ATTR.CAPACITY);\\\
            nlet velocityOfLastPI = 0;\\nlet totalCapabilities = 0;\\nlet capabilitiesDone\
            \ = 0;\\nlet confidenceVoteAverage = 0;\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       PROCESSING STAGE           \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n// Group pages\\ncplace.each(pages, (page) => {\\n    switch (page.getBuiltinFeatureValue(\\\
            \"customType\\\")) {\\n        case CAPABILITY.TYPE:\\n            capabilities.push(page);\\\
            n            break;\\n        case CONFIDENCE_VOTE.TYPE:\\n          \
            \  confidenceVote = page;\\n            break;\\n        default:\\n \
            \           break;\\n    }\\n});\\n\\ntotalCapabilities = capabilities.length\\\
            nvelocityOfLastPI = calculateVelocityOfLastPi(programIncrement);\\nconfidenceVoteAverage\
            \ = calculateConfidenceVoteAverage(confidenceVote);\\n\\ncapabilitiesDone\
            \ = capabilities.filter(\\n    (/** @type {Page<'cf.cplace.solution.safe.capability'>}\
            \ */ c) =>\\n        c.get(CAPABILITY.ATTR.STATE) === CAPABILITY.ENUM.STATE.DONE\\\
            n).length;\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       KPIs & CHART               \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n//KPI 1 - Story Points done\\nconst C1_TITLE = \\\"Done Capabilities\
            \ Last PI\\\";\\nconst C1_ACTUAL_VALUE = velocityOfLastPI || 0;\\nconst\
            \ C1_DISPLAY_NUMBER = C1_ACTUAL_VALUE;\\nconst C1_DISPLAY_TEXT = \\\"\
            <b>VELOCITY LAST PI</b><br>\\\";\\nconst C1_COLOR = COLOURS.GREEN;\\n\\\
            ncreateChart(C1_TITLE, C1_ACTUAL_VALUE, C1_DISPLAY_NUMBER, C1_DISPLAY_TEXT,\
            \ C1_COLOR);\\n\\n// KPI 2 - Done Capabilities\\nconst C2_TITLE = \\\"\
            Done Capabilities\\\";\\nconst C2_ACTUAL_PERCENTAGE = Math.round((capabilitiesDone\
            \ / totalCapabilities) * 100) || 0;\\nconst C2_DISPLAY_NUMBER = C2_ACTUAL_PERCENTAGE\
            \ + \\\"%\\\";\\nconst C2_DISPLAY_TEXT = \\\"<b>DONE CAPABILITIES</b><br>\\\
            \" + capabilitiesDone + \\\"/\\\" + totalCapabilities;\\nconst C2_COLOR\
            \ = COLOURS.GREEN;\\n\\ncreateChart(C2_TITLE, C2_ACTUAL_PERCENTAGE, C2_DISPLAY_NUMBER,\
            \ C2_DISPLAY_TEXT, C2_COLOR);\\n\\n// KPI 3 - Load vs Capacity\\nconst\
            \ C3_TITLE = \\\"Load vs. Capacity\\\";\\nconst C3_ACTUAL_PERCENTAGE =\
            \ (totalCapacity && Math.round((totalCapabilities / totalCapacity) * 100))\
            \ || 0;\\nconst C3_DISPLAY_NUMBER = C3_ACTUAL_PERCENTAGE + \\\"%\\\";\\\
            nconst C3_DISPLAY_TEXT = \\\"<b>LOAD VS. CAPACITY</b><br>\\\" + totalCapabilities\
            \ + \\\"/\\\" + totalCapacity;\\n\\nlet c3_color = COLOURS.GREEN;\\nif\
            \ (Math.round((totalCapabilities / totalCapacity) * 100) >= 90) {\\n \
            \   c3_color = COLOURS.YELLOW;\\n    if (Math.round((totalCapabilities\
            \ / totalCapacity) * 100) > 100) {\\n        c3_color = COLOURS.RED;\\\
            n    }\\n}\\n\\ncreateChart(C3_TITLE, C3_ACTUAL_PERCENTAGE, C3_DISPLAY_NUMBER,\
            \ C3_DISPLAY_TEXT, c3_color);\\n\\n// KPI 4 - passed days\\nconst C4_TITLE\
            \ = \\\"Days passed\\\";\\nconst C4_ACTUAL_PERCENTAGE = Math.round((passedDaysOfPI\
            \ / totalDaysOfPI) * 100) || 0;\\nconst C4_DISPLAY_NUMBER = C4_ACTUAL_PERCENTAGE\
            \ + \\\"%\\\";\\nconst C4_DISPLAY_TEXT = \\\"<b>DAYS PASSED</b><br>\\\"\
            \ + passedDaysOfPI + \\\"/\\\" + totalDaysOfPI;\\nconst C4_COLOR = COLOURS.GREEN;\\\
            n\\ncreateChart(C4_TITLE, C4_ACTUAL_PERCENTAGE, C4_DISPLAY_NUMBER, C4_DISPLAY_TEXT,\
            \ C4_COLOR);\\n\\n// KPI 5 - Confidence Vote\\nconst C5_TITLE = \\\"Average\
            \ Confidence Vote\\\";\\nconst C5_ACTUAL_PERCENTAGE = Math.round((confidenceVoteAverage\
            \ / 5) * 100) || 0;\\nconst C5_DISPLAY_NUMBER = confidenceVoteAverage.toFixed(1);\\\
            nconst C5_DISPLAY_TEXT = \\\"<b>AVG. CONFIDENCE VOTE</b><br>\\\";\\nconst\
            \ C5_COLOR = getConvidenceVoteColors(confidenceVoteAverage);\\n\\ncreateChart(C5_TITLE,\
            \ C5_ACTUAL_PERCENTAGE, C5_DISPLAY_NUMBER, C5_DISPLAY_TEXT, C5_COLOR);\\\
            n\\nlog(\\\"End...\\\");\\n\\n// @ts-ignore\\nreturn {\\n    chart: {\\\
            n        type: \\\"solidgauge\\\",\\n    },\\n\\n    title: {\\n     \
            \   text: NAMINGS[userLanguage].CHART_TITLE,\\n    },\\n    series: series,\\\
            n    yAxis: yAxis,\\n    pane: pane,\\n    tooltip: {\\n        enabled:\
            \ false,\\n    },\\n    plotOptions: {\\n        solidgauge: {\\n    \
            \        enableMouseTracking: false,\\n        },\\n    },\\n};\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       BUSINESS FUNCTIONS         \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\nfunction createChart(title, actualRel, displayNumber, displayText,\
            \ color) {\\n    series.push(getSeriesObject(title, actualRel, displayNumber,\
            \ chartIndex, color));\\n    yAxis.push(getYAxisObject(displayText, chartIndex,\
            \ 0, 100));\\n    pane.push(getPaneObject(getXAxisPosition(chartIndex),\
            \ Y_POSITION));\\n    chartIndex++;\\n}\\n\\nfunction getXAxisPosition(kpiIndex)\
            \ {\\n    return (120 * (kpiIndex + 1)) / (TOTAL_NUMBER_OF_KPIS + 1) -\
            \ 10 + \\\"%\\\";\\n}\\n\\nfunction getPassedDays(piStartDate, piEndDate,\
            \ today, totalDaysOfPI) {\\n    if (today.isBefore(piStartDate)) {\\n\
            \        return 0;\\n    }\\n    if (piEndDate.isBefore(today)) {\\n \
            \       return totalDaysOfPI;\\n    }\\n    // @ts-ignore\\n    return\
            \ Days.daysBetween(piStartDate, today).getDays();\\n}\\n\\nfunction getSeriesObject(title,\
            \ actual, label, index, color) {\\n    return {\\n        name: title,\\\
            n        data: [\\n            {\\n                name: title,\\n   \
            \             color: color,\\n                y: actual,\\n          \
            \      innerRadius: \\\"80%\\\",\\n                radius: \\\"100%\\\"\
            ,\\n                dataLabels: {\\n                    format: '<span\
            \ style=\\\"font-size:24px;font-wight: bold\\\">' + label + \\\"</span>\\\
            \",\\n                    borderWidth: 0,\\n                    color:\
            \ COLOURS.GREY,\\n                    verticalAlign: \\\"middle\\\",\\\
            n                    useHTML: true,\\n                },\\n          \
            \  },\\n        ],\\n        yAxis: index,\\n    };\\n}\\n\\nfunction\
            \ getYAxisObject(axisTitle, index, min, max) {\\n    return {\\n     \
            \   min: min,\\n        max: max,\\n        pane: index,\\n        title:\
            \ {\\n            text: axisTitle,\\n            useHTML: true,\\n   \
            \         y: 110,\\n        },\\n        labels: {\\n            enabled:\
            \ false,\\n        },\\n        /*stops: [\\n            [0.1, COLOURS.GREEN],\
            \ // green\\n            [0.9, COLOURS.YELLOW], // yellow\\n         \
            \   [0.99, COLOURS.RED] // red\\n        ],*/\\n        lineWidth: 0,\\\
            n        tickWidth: 0,\\n        tickAmount: 0,\\n        minorTickWidth:\
            \ 0,\\n    };\\n}\\n\\nfunction getPaneObject(xPosition, yPosition) {\\\
            n    return {\\n        center: [xPosition, yPosition],\\n        size:\
            \ \\\"50%\\\",\\n        startAngle: 0,\\n        endAngle: 360,\\n  \
            \      background: {\\n            backgroundColor: \\\"#EEE\\\",\\n \
            \           borderColor: null,\\n            innerRadius: \\\"80%\\\"\
            ,\\n            outerRadius: \\\"100%\\\",\\n            shape: \\\"arc\\\
            \",\\n        },\\n    };\\n}\\n\\nfunction getConvidenceVoteColors(value)\
            \ {\\n    if (value <= 2) {\\n        return COLOURS.RED;\\n    } else\
            \ if (value <= 3) {\\n        return COLOURS.YELLOW;\\n    } else {\\\
            n        return COLOURS.GREEN;\\n    }\\n}\\n\\n/**\\n * Calculates the\
            \ average confidence vote\\n * @param {Page<'cf.cplace.solution.safe.confidenceVote'>\
            \ | undefined | null} confidenceVote\\n */\\nfunction calculateConfidenceVoteAverage(confidenceVote)\
            \ {\\n    if (!confidenceVote) {\\n        return 0;\\n    }\\n    const\
            \ oneFinger = confidenceVote.get(CONFIDENCE_VOTE.ATTR.ONE_FINGER);\\n\
            \    const twoFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.TWO_FINGERS);\\\
            n    const threeFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.THREE_FINGERS);\\\
            n    const fourFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.FOUR_FINGERS);\\\
            n    const fiveFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.FIVE_FINGERS);\\\
            n    const totalFingers = oneFinger + 2 * twoFingers + 3 * threeFingers\
            \ + 4 * fourFingers + 5 * fiveFingers;\\n    const numberOfConvidenceVotes\
            \ = oneFinger + twoFingers + threeFingers + fourFingers + fiveFingers;\\\
            n\\n    return totalFingers / numberOfConvidenceVotes;\\n}\\n\\n/**\\\
            n * Calculate the velocity of last PI as number of capabilities that were\
            \ done in the last PI\\n * @param {Page<'cf.cplace.solution.safe.programIncrement'>}\
            \ currentPi\\n */\\nfunction calculateVelocityOfLastPi(currentPi) {\\\
            n    let lastPI = currentPi.get(PROGRAM_INCREMENT.ATTR.PREDECESSOR);\\\
            n    if (!lastPI) {\\n        return 0;\\n    }\\n    const velocity =\
            \ Array.from(lastPI.getIncomingPages(CAPABILITY.TYPE, CAPABILITY.ATTR.PROGRAM_INCREMENT)).filter(\\\
            n        (/** @type {Page<'cf.cplace.solution.safe.capability'>} */ c)\
            \ =>\\n            c.get(CAPABILITY.ATTR.STATE) === CAPABILITY.ENUM.STATE.DONE\\\
            n    ).length;\\n    return velocity;\\n}\\n// //--------------------------------------------------------------------------------------//\\\
            n// //                                       HELPER FUNCTIONS        \
            \                       //\\n// //--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n * Log to cplace\\n * @param {any} text\\n */\\nfunction log(text)\
            \ {\\n    if (!DEBUG) {\\n        return;\\n    }\\n    let logOutput\
            \ = typeof text !== \\\"string\\\" ? JSON.stringify(text) : text;\\n\\\
            n    cplace.log(logOutput);\\n}\",\"upgradeAck\":true,\"description\"\
            :\"\"}"
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"or":[{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"ca_cf.cplace.solution.safe.currentPi"}]},{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.confidenceVote"]},{"relativeCustomReference":"cf.cplace.solution.safe.confidenceVote.PI","referenceOperator":"ca_cf.cplace.solution.safe.currentPi"}]}]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: height
          value: d230
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"Current PI Statistics","en":"Current PI Statistics"}
        collapsed: false
        id: _e356pfn2lz98oybao7jlhjj54
        widgetType: cf.cplace.visualizations.scriptingHighcharts
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * HIGHCHART\\n * @customType\
            \ cf.cplace.solution.safe.solution\\n * @layout default layout\\n * @author\
            \ Christopher W\xF6lfle <christopher.woelfle@cplace.com>\\n * @version\
            \ 1.0\\n * @description Displays the timeline with Programm Increments,\
            \ Safe Events and Safe Milestones. Chart is zoomable and draggable\\n\
            \ */\\n\\n// set the distinguishing log name\\ncplace.setLogName(\\\"\
            Highcharts - Timeline Overview\\\");\\n\\n/***** Start configuration *****/\\\
            nconst chartBackgroundColor = \\\"#FFFFFF\\\";\\nconst lineColor = \\\"\
            #303038\\\";\\n\\nconst piColor = \\\"#dddddd\\\";\\nconst safeMilestoneColor\
            \ = \\\"#3D8F8C\\\";\\nconst eventColor = \\\"#366C81\\\";\\n\\nconst\
            \ milestonePlotBandColor = \\\"#E2F3F2\\\";\\nconst eventPlotBandColor\
            \ = \\\"#E2EEF3\\\";\\nconst todayPlotline = \\\"lightgrey\\\";\\n\\nconst\
            \ showMonthsBeforeToday = 3;\\nconst showMonthsAfterToday = 9;\\n/*****\
            \ End configuration *****/\\n\\nconst MILESTONE = {\\n    TYPE: \\\"cf.milestone\\\
            \",\\n    ATTR: {\\n        SCHEDULE: \\\"containingSchedule\\\",\\n \
            \       DATE: \\\"date\\\",\\n        FEATURE_DEPENDENCY: \\\"cf.cplace.solution.safe.dependency\\\
            \",\\n        TASKCLASS: \\\"activityClass\\\",\\n    },\\n};\\nconst\
            \ FEATURE = {\\n    TYPE: \\\"cf.cplace.solution.safe.feature\\\",\\n\
            \    ATTR: {\\n        PROGRAM: \\\"cf.cplace.solution.safe.program\\\"\
            ,\\n    },\\n};\\nconst SCHEDULE = {\\n    TYPE: \\\"cf.schedule\\\",\\\
            n    ATTR: {},\\n};\\nconst TASK_CLASS = {\\n    TYPE: \\\"cf.activityClass\\\
            \",\\n    ATTR: {\\n        COLOR: \\\"barColor\\\",\\n        BORDERCOLOR:\
            \ \\\"borderColor\\\",\\n        SHAPE: \\\"milestoneShape\\\",\\n   \
            \ },\\n};\\nconst SAFE_MILESTONE = {\\n    TYPE: \\\"cf.cplace.solution.safe.safeMilestone\\\
            \",\\n    ATTR: {\\n        DATE: \\\"cf.cplace.solution.safe.date\\\"\
            ,\\n    },\\n};\\nconst PI = {\\n    TYPE: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n    ATTR: {\\n        START: \\\"cf.cplace.solution.safe.startDate\\\
            \",\\n        END: \\\"cf.cplace.solution.safe.endDate\\\",\\n    },\\\
            n};\\nconst EVENT = {\\n    TYPE: \\\"cf.cplace.solution.safe.event\\\"\
            ,\\n    ATTR: {\\n        START_DATE: \\\"cf.cplace.solution.safe.startDate\\\
            \",\\n        END_DATE: \\\"cf.cplace.solution.safe.endDate\\\",\\n  \
            \      SOLUTION: \\\"cf.cplace.solution.safe.solution\\\",\\n    },\\\
            n};\\n\\nfunction main() {\\n    /** @type {ChartContext} */\\n    const\
            \ context = {\\n        today: new Date(),\\n        start: getStartDate(showMonthsBeforeToday),\\\
            n        end: getEndDate(showMonthsAfterToday),\\n        solution: embeddingPage,\\\
            n        schedules: [],\\n        programIncrements: [],\\n        events:\
            \ [],\\n        safeMilestones: [],\\n        series: [],\\n        plotlines:\
            \ [],\\n        categories: [\\\"<b>Program Increments</b>\\\", \\\"<b>Events</b>\\\
            \", \\\"<b>SAFe Milestones</b>\\\"],\\n        yIndex: 0,\\n    };\\n\\\
            n    categorizeData(pages, context);\\n    createPiSeries(context);\\\
            n    createEventSeries(context);\\n    createMilestoneSeries(context);\\\
            n    //create plotline between SAFe parts and schedules\\n    //ctx.plotLines.push(createPlotline(yIndex\
            \ - 0.5, 1.25));\\n    createScheduleSeries(context);\\n\\n    return\
            \ createChartConfig(context);\\n}\\n\\n/**\\n * Sort pages by their type\
            \ and them to the context\\n * @param {Page[]} pages\\n * @param {ChartContext}\
            \ ctx\\n */\\nfunction categorizeData(pages, ctx) {\\n    cplace.each(pages,\
            \ (page) => {\\n        let type = page.getBuiltinFeatureValue(\\\"customType\\\
            \");\\n        if (type === SCHEDULE.TYPE) {\\n            ctx.schedules.push(page);\\\
            n        } else if (type === PI.TYPE) {\\n            ctx.programIncrements.push(page);\\\
            n        } else if (type === SAFE_MILESTONE.TYPE) {\\n            ctx.safeMilestones.push(page);\\\
            n        } else if (type === EVENT.TYPE) {\\n            ctx.events.push(page);\\\
            n        }\\n    });\\n}\\n\\n/**\\n * Create pi series\\n * @param {ChartContext}\
            \ ctx\\n */\\nfunction createPiSeries(ctx) {\\n    const piData = [];\\\
            n    cplace.each(ctx.programIncrements, (pi) => {\\n        piData.push(createDataItem(pi.getName(),\
            \ pi.get(PI.ATTR.START), pi.get(PI.ATTR.END), ctx.yIndex, piColor));\\\
            n    });\\n    ctx.yIndex++;\\n    ctx.series.push({\\n        name: \\\
            \"Program Increments\\\",\\n        showInLegend: false,\\n          tooltip:\
            \ {\\n            headerFormat: \\\"\\\",\\n            pointFormat: \\\
            \"<b>{point.name}</b><br/>Start: {point.x: %Y-%m-%d}<br/> End: {point.x2:\
            \ %Y-%m-%d}\\\",\\n            useHTML: true,\\n        },\\n        data:\
            \ piData,\\n        dataLabels: {\\n            enabled: true,\\n    \
            \        format: \\\"<b>{point.name}</b>\\\",\\n        },\\n        states:\
            \ {\\n            inactive: {\\n                opacity: 1,\\n       \
            \     },\\n        },\\n    });\\n    return piData;\\n}\\n\\n/**\\n *\
            \ Create event series\\n * @param {ChartContext} ctx\\n */\\nfunction\
            \ createEventSeries(ctx) {\\n    let eventData = [];\\n    cplace.each(ctx.events,\
            \ (event) => {\\n        eventData.push(\\n            createDataItem(\\\
            n                event.getName(),\\n                event.get(EVENT.ATTR.START_DATE),\\\
            n                event.get(EVENT.ATTR.END_DATE),\\n                ctx.yIndex,\\\
            n                eventColor\\n            )\\n        );\\n    });\\n\
            \    ctx.yIndex++;\\n    ctx.series.push({\\n        name: \\\"Events\\\
            \",\\n        showInLegend: false,\\n          tooltip: {\\n         \
            \   headerFormat: \\\"\\\",\\n            pointFormat: \\\"<b>{point.name}</b><br/>Start:\
            \ {point.x: %Y-%m-%d}<br/> End: {point.x2: %Y-%m-%d}\\\",\\n         \
            \   useHTML: true,\\n        },\\n        data: eventData,\\n        dataLabels:\
            \ {\\n            enabled: true,\\n            format: \\\"<b>{point.name}</b>\\\
            \",\\n        },\\n        states: {\\n            inactive: {\\n    \
            \            opacity: 1,\\n            },\\n        },\\n    });\\n}\\\
            n\\n/**\\n * Create safe milestone series\\n * @param {ChartContext} ctx\\\
            n */\\nfunction createMilestoneSeries(ctx) {\\n    let safeMilestoneData\
            \ = [];\\n    cplace.each(ctx.safeMilestones, (safeMilestone) => {\\n\
            \        safeMilestoneData.push(\\n            createMilestoneDataItem(\\\
            n                safeMilestone.getName(),\\n                safeMilestone.get(SAFE_MILESTONE.ATTR.DATE),\\\
            n                ctx.yIndex,\\n                safeMilestoneColor,\\n\
            \                safeMilestoneColor\\n            )\\n        );\\n  \
            \  });\\n    ctx.yIndex++;\\n    ctx.series.push(createMilestoneSerie(\\\
            \"SAFe Milestones\\\", safeMilestoneData));\\n}\\n/**\\n * Create Chart\
            \ configuration\\n * @param {ChartContext} ctx\\n * @returns\\n */\\nfunction\
            \ createChartConfig(ctx) {\\n    return {\\n        chart: {\\n      \
            \      type: \\\"xrange\\\",\\n            backgroundColor: chartBackgroundColor,\\\
            n            panning: true,\\n            panKey: \\\"shift\\\",\\n  \
            \          zoomType: \\\"x\\\",\\n        },\\n        title: {\\n   \
            \         text: \\\"\\\",\\n        },\\n        yAxis: {\\n         \
            \   title: {\\n                text: \\\"\\\",\\n            },\\n   \
            \         categories: ctx.categories,\\n            reversed: true,\\\
            n            type: \\\"category\\\",\\n            plotBands: [\\n   \
            \             {\\n                    color: eventPlotBandColor,\\n  \
            \                  from: 0.5,\\n                    to: 1.5,\\n      \
            \              borderColor: \\\"white\\\",\\n                    borderWidth:\
            \ 2,\\n                    zIndex: 0,\\n                },\\n        \
            \        {\\n                    color: milestonePlotBandColor,\\n   \
            \                 from: 1.5,\\n                    to: 2.5,\\n       \
            \             borderColor: \\\"white\\\",\\n                    borderWidth:\
            \ 2,\\n                    zIndex: 0,\\n                },\\n        \
            \    ],\\n        },\\n        xAxis: {\\n            type: \\\"datetime\\\
            \",\\n            min: Date.UTC(ctx.start.getFullYear(), ctx.start.getMonth(),\
            \ ctx.start.getDate(), 0, 0, 0, 0),\\n            max: Date.UTC(ctx.end.getFullYear(),\
            \ ctx.end.getMonth(), ctx.end.getDate(), 23, 59, 59, 59),\\n         \
            \   plotLines: [\\n                {\\n                    dashStyle:\
            \ \\\"dash\\\",\\n                    color: todayPlotline,\\n       \
            \             width: 2,\\n                    value: Date.UTC(ctx.today.getFullYear(),\
            \ ctx.today.getMonth(), ctx.today.getDate(), 0, 0, 0, 0),\\n         \
            \           zIndex: 1,\\n                },\\n                ...ctx.plotlines,\\\
            n            ],\\n        },\\n        tooltip: {\\n            enabled:\
            \ true,\\n        },\\n        series: ctx.series,\\n    };\\n}\\n\\n/**\\\
            n * Create schedule series\\n * @param {ChartContext} ctx\\n */\\nfunction\
            \ createScheduleSeries(ctx) {\\n    cplace.each(ctx.schedules, (schedule)\
            \ => {\\n        let relevantSchedule = false;\\n        let scheduleData\
            \ = [];\\n        let milestones = schedule.getIncomingPages(MILESTONE.TYPE,\
            \ MILESTONE.ATTR.SCHEDULE);\\n        cplace.each(milestones, (milestone)\
            \ => {\\n            let featureDependency = milestone.get(MILESTONE.ATTR.FEATURE_DEPENDENCY);\\\
            n            let isProgramRelevant = false;\\n            cplace.each(featureDependency,\
            \ (feature) => {\\n                let featureProgram = feature.get(FEATURE.ATTR.PROGRAM);\\\
            n                if (featureProgram && featureProgram.getId() === ctx.solution.getId())\
            \ {\\n                    isProgramRelevant = true;\\n               \
            \ }\\n            });\\n            if (isProgramRelevant) {\\n      \
            \          relevantSchedule = true;\\n                scheduleData.push(createScheduleMilestoneDataItem(milestone,\
            \ ctx.yIndex));\\n            }\\n        });\\n        if (relevantSchedule)\
            \ {\\n            ctx.categories.push(createCategory(schedule));\\n  \
            \          ctx.series.push(createMilestoneSerieSchedule(schedule.getName(),\
            \ scheduleData));\\n            ctx.yIndex++;\\n        }\\n    });\\\
            n}\\n\\n//FUNCTIONS\\nfunction createDataItem(name, start, end, y, color)\
            \ {\\n    let startDate = new Date(start);\\n    let endDate = new Date(end);\\\
            n    return {\\n        name: name,\\n        x: Date.UTC(startDate.getFullYear(),\
            \ startDate.getMonth(), startDate.getDate(), 0, 0, 0, 0),\\n        x2:\
            \ Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate(),\
            \ 23, 59, 59, 99),\\n        y: y,\\n        color: color,\\n    };\\\
            n}\\n\\nfunction getMilestoneShape(milestoneShape) {\\n    if (milestoneShape\
            \ === \\\"Diamond\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Arrow Up\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Arrow Down\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Up\\\") return \\\"triangle\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Down\\\") return \\\"triangle-down\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Left\\\") return \\\"triangle\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Right\\\") return \\\"triangle\\\";\\n    if (milestoneShape\
            \ === \\\"Circle\\\") return \\\"circle\\\";\\n    if (milestoneShape\
            \ === \\\"Square\\\") return \\\"square\\\";\\n    if (milestoneShape\
            \ === \\\"Star\\\") return \\\"diamond\\\";\\n    if (milestoneShape ===\
            \ \\\"Ramp Down\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Ramp Up\\\") return \\\"diamond\\\";\\n}\\n\\nfunction createMilestoneDataItem(name,\
            \ date, y, color, borderColor) {\\n    let milestoneDate = new Date(date);\\\
            n    return {\\n        name: name,\\n        x: Date.UTC(milestoneDate.getFullYear(),\
            \ milestoneDate.getMonth(), milestoneDate.getDate(), 0, 0, 0, 0),\\n \
            \       y: y,\\n        marker: {\\n            fillColor: color,\\n \
            \           lineColor: borderColor,\\n            lineWidth: 1,\\n   \
            \     },\\n    };\\n}\\n\\nfunction createScheduleMilestoneDataItem(milestone,\
            \ y) {\\n    let name = milestone.getName();\\n    let milestoneDate =\
            \ new Date(milestone.get(MILESTONE.ATTR.DATE));\\n    let color = milestone.getOptional(MILESTONE.ATTR.TASKCLASS).get(TASK_CLASS.ATTR.COLOR);\\\
            n    let borderColor = milestone.getOptional(MILESTONE.ATTR.TASKCLASS).get(TASK_CLASS.ATTR.BORDERCOLOR);\\\
            n    let milestoneShape = getMilestoneShape(milestone.getOptional(MILESTONE.ATTR.TASKCLASS).get(TASK_CLASS.ATTR.SHAPE));\\\
            n    let features = milestone.get(MILESTONE.ATTR.FEATURE_DEPENDENCY);\\\
            n    let featureList = \\\"<b>Requested Features:</b>\\\";\\n    cplace.each(features,\
            \ (feature) => {\\n        featureList = featureList + \\\"<br>\\\" +\
            \ feature.getName();\\n    });\\n\\n    return {\\n        name: name,\\\
            n        x: Date.UTC(milestoneDate.getFullYear(), milestoneDate.getMonth(),\
            \ milestoneDate.getDate(), 0, 0, 0, 0),\\n        y: y,\\n        features:\
            \ featureList,\\n        marker: {\\n            fillColor: color,\\n\
            \            lineColor: borderColor,\\n            lineWidth: 1,\\n  \
            \          symbol: milestoneShape,\\n        },\\n    };\\n}\\n\\nfunction\
            \ createMilestoneSerie(name, dataSeries) {\\n    return {\\n        name:\
            \ name,\\n        type: \\\"scatter\\\",\\n        //stickyTracking: false,\\\
            n        showInLegend: false,\\n        marker: {\\n            enabled:\
            \ true,\\n            symbol: \\\"diamond\\\",\\n            lineWidth:\
            \ 5,\\n            radius: 12,\\n        },\\n        tooltip: {\\n  \
            \          headerFormat: \\\"<b>{point.key}</b><br>\\\",\\n          \
            \  pointFormat: \\\"{point.x: %Y-%m-%d}\\\",\\n        },\\n        data:\
            \ dataSeries,\\n        states: {\\n            inactive: {\\n       \
            \         opacity: 1,\\n            },\\n        },\\n    };\\n}\\n\\\
            nfunction createMilestoneSerieSchedule(name, dataSeries) {\\n    return\
            \ {\\n        name: name,\\n        type: \\\"scatter\\\",\\n        //stickyTracking:\
            \ false,\\n        showInLegend: false,\\n        marker: {\\n       \
            \     enabled: true,\\n            symbol: \\\"diamond\\\",\\n       \
            \     lineWidth: 5,\\n            radius: 12,\\n        },\\n        tooltip:\
            \ {\\n            useHTML: true,\\n            headerFormat: \\\"<b>{point.key}</b><br>\\\
            \",\\n            pointFormat: \\\"{point.x: %Y-%m-%d}<br>{point.features}\\\
            \",\\n        },\\n        data: dataSeries,\\n        states: {\\n  \
            \          inactive: {\\n                opacity: 1,\\n            },\\\
            n        },\\n    };\\n}\\n\\nfunction createPlotline(value, width) {\\\
            n    return {\\n        color: lineColor,\\n        width: width,\\n \
            \       value: value,\\n        dashStyle: \\\"solid\\\",\\n    };\\n}\\\
            n\\nfunction getStartDate(months) {\\n    let today = new Date();\\n \
            \   let startDate = today;\\n    startDate.setMonth(today.getMonth() -\
            \ months);\\n    return startDate;\\n}\\n\\nfunction getEndDate(months)\
            \ {\\n    let today = new Date();\\n    let endDate = today;\\n    endDate.setMonth(today.getMonth()\
            \ + months);\\n    return endDate;\\n}\\n\\nfunction createCategory(object)\
            \ {\\n    let name = object.getName();\\n    let url = object.getUrl();\\\
            n    return '<a href=\\\"' + url + '\\\">' + name + \\\"</a>\\\";\\n}\\\
            n\\n/**\\n * Object containing context information for the chart.\\n *\
            \ @typedef {Object} ChartContext\\n * @property {Date} today - The current\
            \ date.\\n * @property {Date} start - The start date for the chart.\\\
            n * @property {Date} end - The end date for the chart.\\n * @property\
            \ {Page} solution - The embeddingPage object representing the current\
            \ solution.\\n * @property {Page[]} schedules - An array of pages representing\
            \ schedules.\\n * @property {Page[]} programIncrements - An array of pages\
            \ representing program increments.\\n * @property {Page[]} events - An\
            \ array of pages representing events.\\n * @property {Page[]} safeMilestones\
            \ - An array of pages representing SAFe milestones.\\n * @property {any[]}\
            \ series - An array of series\\n * @property {any[]} plotlines - An array\
            \ of plotlines\\n * @property {string[]} categories - An array of categories\\\
            n * @property {number} yIndex - y-index\\n */\\n\\n// @ts-ignore\\nreturn\
            \ main();\",\"upgradeAck\":true,\"description\":\"\"}"
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"or":[{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution","referenceOperator":"embeddingCustomEntity"}]},{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.safeMilestone"]}]},{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.event"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution","referenceOperator":"embeddingCustomEntity"}]}]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: cf.cplace.visualization.tableSelectionOnly
          value: bfalse
        - name: height
          value: d300
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: "m{\"en\":\"Timeline Overview\",\"de\":\"Zeitplan \xDCbersicht\"}"
        collapsed: false
        id: id_hz33i4s32cy8xcjcdryvs8qll
        widgetType: cf.cplace.visualizations.scriptingHighcharts
      - attributes:
          name: content
          value: 'r<p style="text-align: center"><img alt="" height="16" src="/large-solution-safe/editor-icon/cplace-exclamation-circle.png"
            title="" width="16">&nbsp;<strong>Zoom in on the chart by holding down
            the mouse and dragging a window around the area you want to see in more
            detail. Hold Shift to move forward or back in the timeline in the chart.</strong></p>'
        collapsed: false
        id: _gz5t41jrhngt3xfu8j0y4szwl
        widgetType: cf.cplace.demoWidgets.demoRichString
- rows:
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.description'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":true},{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.businessValue'","visible":true},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":true},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":true},{"name":"'cf.cplace.solution.safe.jobSize'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":true},{"name":"'cf.cplace.solution.safe.definitionOfDone'","visible":true},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":true},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":true},{"name":"'cf.cplace.solution.safe.conflictState'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false},{"name":"'cf.cplace.solution.safe.features'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupOrder
          value: sasc
        - name: height
          value: d500
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"embeddingCustomEntity"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"en":"Capabilities"}
        collapsed: false
        id: _sy5scn4eq86ii5afxd4tmay8q
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 6
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.featureType'","visible":true},{"name":"'cf.cplace.solution.safe.status'","visible":true},{"name":"'cf.cplace.solution.safe.description'","visible":true},{"name":"'cf.cplace.solution.safe.featureOwner'","visible":true},{"name":"'cf.cplace.solution.safe.progress'","visible":true},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":true},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":true},{"name":"'cf.cplace.solution.safe.releaseDate'","visible":true},{"name":"'cf.cplace.solution.safe.conflictState'","visible":true},{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.businessValue'","visible":true},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":true},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":true},{"name":"'cf.cplace.solution.safe.teams'","visible":true},{"name":"'cf.cplace.solution.safe.storyPointsTotal'","visible":true},{"name":"'cf.cplace.solution.safe.storyPointsDone'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.program'","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.safeMilestone'","visible":false},{"name":"'cf.cplace.solution.safe.capability'","visible":false},{"name":"'cf.cplace.solution.safe.release'","visible":false},{"name":"'cf.cplace.solution.safe.dependsOn'","visible":false},{"name":"'cf.cplace.solution.safe.calculateDateConflicts'","visible":false},{"name":"'cf.cplace.solution.safe.calculatedConflicts'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"'cf.cplace.solution.safe.iterations'","visible":false},{"name":"'cf.cplace.solution.safe.stories'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.manualPrioritization'","visible":false},{"name":"'cf.cplace.solution.safe.numberStoriesTotal'","visible":false},{"name":"'cf.cplace.solution.safe.numberStoriesOpen'","visible":false},{"name":"'cf.cplace.solution.safe.numberStoriesDone'","visible":false},{"name":"'cf.cplace.solution.safe.periodStatus'","visible":false},{"name":"'cf.cplace.solution.safe.requiresAssistenceOf'","visible":false},{"name":"'cf.cplace.solution.safe.programKey'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false}]
        - name: connectedTableWidgetId
          value: s_sy5scn4eq86ii5afxd4tmay8q
        - name: groupOrder
          value: sasc
        - name: height
          value: d500
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.feature"]},{"relativeCustomReference":"cf.cplace.solution.safe.capability","referenceOperator":"connectedTable"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"en\":\"Features of the Selected Capability\",\"de\":\"Features\
            \ der ausgew\xE4hlten Capability\"}"
        collapsed: false
        id: _orzhmpqah69zdxa0va1r39ae0
        widgetType: cf.platform.embeddedSearchAsTable
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.title'","visible":true},{"name":"'cf.cplace.solution.safe.storyPointsTotal'","visible":true},{"name":"'cf.cplace.solution.safe.storyPointsDone'","visible":true},{"name":"'cf.cplace.solution.safe.numberStoriesTotal'","visible":true},{"name":"'cf.cplace.solution.safe.numberStoriesOpen'","visible":true},{"name":"'cf.cplace.solution.safe.numberStoriesDone'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.program'","visible":false},{"name":"'cf.cplace.solution.safe.dependsOn'","visible":false},{"name":"'cf.cplace.solution.safe.status'","visible":false},{"name":"'cf.cplace.solution.safe.progress'","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.safeMilestone'","visible":false},{"name":"'cf.cplace.solution.safe.capability'","visible":false},{"name":"'cf.cplace.solution.safe.release'","visible":false},{"name":"'cf.cplace.solution.safe.releaseDate'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"'cf.cplace.solution.safe.conflictState'","visible":false},{"name":"'cf.cplace.solution.safe.calculateDateConflicts'","visible":false},{"name":"'cf.cplace.solution.safe.calculatedConflicts'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.programKey'","visible":false},{"name":"'cf.cplace.solution.safe.featureType'","visible":false},{"name":"'cf.cplace.solution.safe.teams'","visible":false},{"name":"'cf.cplace.solution.safe.requiresAssistenceOf'","visible":false},{"name":"'cf.cplace.solution.safe.periodStatus'","visible":false},{"name":"'cf.cplace.solution.safe.iterations'","visible":false},{"name":"'cf.cplace.solution.safe.stories'","visible":false},{"name":"'cf.cplace.solution.safe.featureOwner'","visible":false},{"name":"'cf.cplace.solution.safe.manualPrioritization'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.feature"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"embeddingCustomEntity"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: bfalse
        collapsed: false
        id: _i0r49s1ir4ek9g8r1yw269itm
        widgetType: cf.platform.embeddedSearchAsTable
      - attributes:
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.story"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.feature","search":{"filters":[{"types":["cf.cplace.solution.safe.feature"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"embeddingCustomEntity"}]}}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: bfalse
        collapsed: false
        id: _vt94d4xkt03j6azc9a9d0vnlu
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.SAFeLevel'","visible":true},{"name":"'cf.cplace.solution.safe.SAFeLevel.Reference'","visible":true},{"name":"'cf.cplace.solution.safe.businessValue'","visible":true},{"name":"'cf.cplace.solution.safe.actualValue'","visible":true},{"name":"'cf.cplace.solution.safe.commitment'","visible":true},{"name":"'cf.cplace.solution.safe.statement'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.objectivetitle'","visible":false},{"name":"'cf.cplace.solution.safe.timebox'","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.SAFeLevel'
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.objective"]},{"relativeSpace":"true"},{"relativeCustomReference":"cf.cplace.solution.safe.timebox","referenceOperator":"embeddingCustomEntity"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Objectives","en":"Objectives"}
        collapsed: false
        id: _7ekmr8578rygfup9i37s8z5qz
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.startDate'","visible":true},{"name":"'cf.cplace.solution.safe.endDate'","visible":true},{"name":"'cf.cplace.solution.safe.predecessor'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.iteration"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"embeddingCustomEntity"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Iterationen","en":"Iterations"}
        collapsed: false
        id: _7qp2ex5kd2tn9uhwgnkn3xq97
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n * HIGHCHART\n * @customType cf.cplace.solution.safe.currentIterationDashboard\n
            * @layout cf.cplace.solution.safe.iterationStatistics\n * @author Bastian
            Rang\n * @version 1.0\n * @description\n */\n\nconst DEBUG = false;\n\nconst
            PROGRAM_INCREMENT = {\n    TYPE: \"cf.cplace.solution.safe.programIncrement\",\n    ATTR:
            {\n        START_DATE: \"cf.cplace.solution.safe.startDate\",\n        END_DATE:
            \"cf.cplace.solution.safe.endDate\",\n        STATISTICS: \"cf.cplace.solution.safe.statsJson\",\n    },\n};\n\nconst
            CAPABILITY = {\n    TYPE: \"cf.cplace.solution.safe.capability\",\n    ATTR:
            {\n        STATUS: \"\",\n    },\n    STATUS: {\n        DRAFT: \"#10
            - Draft\",\n        FUNNEL: \"#15 - Funnel\",\n        DEFINING: \"#25
            - Analyzing\",\n        REDAY: \"#35 - Backlog\",\n        IMPLEMENTING:
            \"#45 - Implementing\",\n        READYFORTESTING: \"#55 - Validating\",\n        INTEGRATING:
            \"#65 - Deploying\",\n        READY: \"#75 - Releasing\",\n        DONE:
            \"#85 - Done\",\n        OBSOLETE: \"#95 - Obsolete\",\n    },\n    STATUS_MAP:
            {\n        \"#10 - Draft\": \"Draft\",\n        \"#15 - Funnel\": \"Funnel\",\n        \"#25
            - Analyzing\": \"Analyzing\",\n        \"#35 - Backlog\": \"Backlog\",\n        \"#45
            - Implementing\": \"Implementing\",\n        \"#55 - Validating\": \"Validating\",\n        \"#65
            - Deploying\": \"Deploying\",\n        \"#75 - Releasing\": \"Releasing\",\n        \"#85
            - Done\": \"Done\",\n        \"#95 - Obsolete\": \"Obsolete\",\n    },\n    CLASSIFICATION:
            {\n        ENABLER: \"#15 - enabler\",\n        STORY: \"#25 - story\",\n        MAINTENANCE:
            \"#35 - maintenance\",\n    },\n};\n\nconst pi = Array.from(pages)[0];\n\nif
            (pi?.getBuiltinFeatureValue(\"customType\") !== PROGRAM_INCREMENT.TYPE)
            {\n    throw new Error(\"Please provide a single program increment in
            the chart search.\");\n}\n\nconst startDate = pi.get(PROGRAM_INCREMENT.ATTR.START_DATE).withTimeAtStartOfDay();\nconst
            endDate = pi.get(PROGRAM_INCREMENT.ATTR.END_DATE).withTimeAtStartOfDay();\n\nlet
            statistics = null;\ntry {\n    statistics = JSON.parse(pi.get(PROGRAM_INCREMENT.ATTR.STATISTICS));\n    DEBUG
            && cplace.log(statistics);\n} catch (e) {\n    // @ts-ignore\n    return
            {\n        title: {\n            text: null,\n        },\n    };\n}\n\nif
            (!statistics || !statistics.archive || !statistics.current) {\n    //
            @ts-ignore\n    return {\n        title: {\n            text: null,\n        },\n    };\n}\n\nconst
            today = DateTime.parse(statistics.current.date).withTimeAtStartOfDay();\n\n//
            Define the data for Release Burndown\n/**\n * @type {Array}\n */\nlet
            data = statistics.archive.map((element) => {\n    const currentDate =
            DateTime.parse(element.date);\n\n    const currentData = {\n        day:
            currentDayNumber(startDate, currentDate),\n    };\n\n    DEBUG && cplace.log(element.cumulativeFlow);\n    Object.values(CAPABILITY.STATUS).forEach((statusName)
            => (currentData[statusName] = element.cumulativeFlow[statusName] || 0));\n\n    return
            currentData;\n});\n\nDEBUG && cplace.log(data);\n\ndata = sortByKey(data,
            \"day\");\n\nconst series = [];\n\nObject.values(CAPABILITY.STATUS).forEach((statusName)
            => {\n    series.push({\n        name: CAPABILITY.STATUS_MAP[statusName],\n        data:
            data.map((e) => e[statusName]),\n    });\n});\n\n// Create the chart\n//
            @ts-ignore\nreturn {\n    chart: {\n        type: \"area\",\n    },\n    title:
            {\n        text: \"Cumulative Flow Diagram\",\n    },\n    xAxis: {\n        categories:
            data.map((data) => data.day),\n    },\n    yAxis: {\n        title: {\n            text:
            \"Number of Capabilities\",\n        },\n    },\n    plotOptions: {\n        area:
            {\n            stacking: \"normal\",\n        },\n    },\n    series:
            series,\n};\n\nfunction sortByKey(array, key) {\n    return array.sort(function
            (a, b) {\n        var x = a[key];\n        var y = b[key];\n        return
            x < y ? -1 : x > y ? 1 : 0;\n    });\n}\n\nfunction currentDayNumber(startDate,
            currentDate) {\n    return Days.daysBetween(startDate.withTimeAtStartOfDay(),
            currentDate.withTimeAtStartOfDay()).getDays();\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]},{"relativeUid":"embeddingCustomEntity"}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"en":"Cumulative Flow Diagram"}
        collapsed: false
        id: _b3srojpbyhvo15yw816kiw7gh
        widgetType: cf.cplace.visualizations.scriptingHighcharts
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n *\n */\n\nconst DEBUG = false;\n\nconst
            PROGRAM_INCREMENT = /** @type {const} */ ({\n    TYPE: \"cf.cplace.solution.safe.programIncrement\",\n    ATTR:
            {\n        START_DATE: \"cf.cplace.solution.safe.startDate\",\n        END_DATE:
            \"cf.cplace.solution.safe.endDate\",\n        STATISTICS: \"cf.cplace.solution.safe.statsJson\",\n    },\n});\n\nfunction
            main() {\n    const teamIteration = Array.from(pages)[0];\n\n    if (teamIteration?.getBuiltinFeatureValue(\"customType\")
            !== PROGRAM_INCREMENT.TYPE) {\n        throw new Error(\"Please provide
            a single team iteration in the chart search.\");\n    }\n\n    let statistics
            = null;\n    try {\n        statistics = JSON.parse(teamIteration.get(PROGRAM_INCREMENT.ATTR.STATISTICS));\n        DEBUG
            && cplace.log(statistics);\n    } catch (e) {\n        return {\n            title:
            {\n                text: null,\n            },\n        };\n    }\n\n    if
            (!statistics || !statistics.archive || !statistics.current) {\n        return
            {\n            title: {\n                text: null,\n            },\n        };\n    }\n    const
            data = createData(teamIteration, statistics);\n\n    // Create the chart\n    return
            {\n        chart: {\n            type: \"line\",\n        },\n        title:
            {\n            text: \"Team Iteration Burn-Up Chart\",\n        },\n        xAxis:
            {\n            title: {\n                text: \"Day\",\n            },\n            categories:
            data.map((data) => data.day),\n        },\n        yAxis: {\n            title:
            {\n                text: \"Story Points\",\n            },\n        },\n        plotLines:
            [\n            {\n                color: \"#33ff33\",\n                width:
            1,\n                zIndex: 9999,\n                value: 12,\n            },\n        ],\n        series:
            [\n            {\n                name: \"Ideal Burn-Up\",\n                data:
            data.map((data) => data.planned),\n                color: \"lightblue\",\n            },\n            {\n                name:
            \"Forecast\",\n                data: data.map((data) => data.forecast
            || data.actual),\n                color: {\n                    pattern:
            {\n                        color: \"#ccccff\",\n                        opacity:
            0.5,\n                    },\n                },\n            },\n            {\n                name:
            \"Done Storypoints\",\n                data: data.map((data) => data.actual),\n                color:
            \"#6666ff\",\n            },\n        ],\n    };\n}\n/**\n * Create the
            data for the chart\n * @param {Page<''cf.cplace.solution.safe.programIncrement''>}
            pi\n * @param {Statistics} statistics\n * @returns\n */\nfunction createData(pi,
            statistics) {\n    const today = DateTime.parse(statistics.current.date).withTimeAtStartOfDay();\n\n    const
            startDate = pi.get(PROGRAM_INCREMENT.ATTR.START_DATE).withTimeAtStartOfDay();\n    const
            endDate = pi.get(PROGRAM_INCREMENT.ATTR.END_DATE).withTimeAtStartOfDay();\n\n    //
            Define the data for Release Burn-Up\n\n    const sortedStatistics = statistics.archive.sort((a,
            b) => Days.daysBetween(new DateTime(Date.parse(b.date)), new DateTime(Date.parse(a.date))).getDays());\n\n    let
            data = sortedStatistics.map((element) => {\n        const currentDate
            = DateTime.parse(element.date);\n        return {\n            day: currentDayNumber(startDate,
            currentDate),\n            planned: linearPercentageDegression(element.burndown.planned,
            currentDate, startDate, endDate),\n            actual: element.burndown.done,\n            forecast:
            null,\n        };\n    });\n\n    const lastDataPoint = sortedStatistics[sortedStatistics.length
            - 1];\n\n    let currentDate = new DateTime(Date.parse(lastDataPoint.date));\n\n    while
            (!currentDate.isAfter(endDate.plusSeconds(5))) {\n        const currentDateKey
            = currentDayNumber(startDate, currentDate);\n\n        DEBUG && cplace.log(currentDateKey);\n\n        if
            (!data.some((el) => currentDateKey === el.day)) {\n            const entry
            = {\n                day: currentDateKey,\n                planned: linearPercentageDegression(statistics.current.burndown.planned,
            currentDate, startDate, endDate),\n                actual: null,\n                forecast:\n                    linearPercentageDegressionForecast(statistics.current.burndown.planned,
            statistics.current.burndown.done, currentDate, today, endDate) +\n                    statistics.current.burndown.done,\n            };\n            data.push(entry);\n        }\n\n        currentDate
            = currentDate.plusDays(1);\n    }\n\n    DEBUG && cplace.log(data);\n\n    data
            = sortByKey(data, \"day\");\n\n    return data;\n}\n\n/**\n * Calculates
            linear percentage degression based on the given parameters.\n * The function
            calculates the percentage degression from the initial value (`planned`)
            to 0\n * over a specific period between `startDate` and `endDate`, based
            on the `currentDate`.\n *\n * @param {number} planned - The initial value
            or planned value at the `startDate`.\n * @param {DateTime} currentDate
            - The current date for which the degression needs to be calculated.\n
            * @param {DateTime} startDate - The start date of the degression period.\n
            * @param {DateTime} endDate - The end date of the degression period.\n
            * @returns {number} The calculated value after linear percentage degression.\n
            *\n */\nfunction linearPercentageDegression(planned, currentDate, startDate,
            endDate) {\n    const daysFullIteration = Days.daysBetween(startDate.withTimeAtStartOfDay(),
            endDate.withTimeAtStartOfDay()).getDays();\n    const daysLeft = Days.daysBetween(currentDate.withTimeAtStartOfDay(),
            endDate.withTimeAtStartOfDay()).getDays();\n\n    DEBUG && cplace.log(\"daysfull:
            \" + daysFullIteration);\n    DEBUG && cplace.log(\"daysleft: \" + daysLeft);\n\n    return
            planned * (1 - daysLeft / daysFullIteration);\n}\n/**\n * Calculates linear
            percentage degression based on the given parameters.\n * The function
            calculates the percentage degression from the initial value (`planned`)
            to 0\n * over a specific period between `startDate` and `endDate`, based
            on the `currentDate`.\n *\n * @param {number} planned - The initial value
            or planned value at the `startDate`.\n * @param {number} done - The done
            value at the `startDate`.\n * @param {DateTime} currentDate - The current
            date for which the degression needs to be calculated.\n * @param {DateTime}
            startDate - The start date of the degression period.\n * @param {DateTime}
            endDate - The end date of the degression period.\n * @returns {number}
            The calculated value after linear percentage degression.\n *\n */\nfunction
            linearPercentageDegressionForecast(planned, done, currentDate, startDate,
            endDate) {\n    const daysFullIteration = Days.daysBetween(startDate.withTimeAtStartOfDay(),
            endDate.withTimeAtStartOfDay()).getDays();\n    const daysLeft = Days.daysBetween(currentDate.withTimeAtStartOfDay(),
            endDate.withTimeAtStartOfDay()).getDays();\n\n    DEBUG && cplace.log(\"daysfull:
            \" + daysFullIteration);\n    DEBUG && cplace.log(\"daysleft: \" + daysLeft);\n\n    if
            (daysFullIteration === 0) {\n        return done;\n    }\n\n    return
            (planned - done) * (1 - daysLeft / daysFullIteration);\n}\n\n/**\n * Sorts
            an array of objects based on the values of a specified key in each object.\n
            * The function sorts the array in ascending order based on the values
            of the specified `key`.\n *\n * @template T\n * @param {T[]} array - The
            array of objects to be sorted.\n * @param {keyof T} key - The key based
            on which the objects should be sorted.\n * @returns {T[]} The sorted array
            of objects.\n */\nfunction sortByKey(array, key) {\n    return array.sort(function
            (a, b) {\n        var x = a[key];\n        var y = b[key];\n        return
            x < y ? -1 : x > y ? 1 : 0;\n    });\n}\n\n/**\n * Calulcates the amount
            of days after the start date for the currentDate provided\n * @param {DateTime}
            startDate\n * @param {DateTime} currentDate\n * @returns\n */\nfunction
            currentDayNumber(startDate, currentDate) {\n    return Days.daysBetween(startDate.withTimeAtStartOfDay(),
            currentDate.withTimeAtStartOfDay()).getDays();\n}\n\n// @ts-ignore\nreturn
            main();","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]},{"relativeUid":"embeddingCustomEntity"}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"en":"Burn-Up Chart"}
        collapsed: false
        id: _frzd4wq823cn09lwygz58p19d
        widgetType: cf.cplace.visualizations.scriptingHighcharts
    - proportion: 6
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n *\n */\n\nconst DEBUG = false;\n\nconst
            PROGRAM_INCREMENT = {\n    TYPE: \"cf.cplace.solution.safe.programIncrement\",\n    ATTR:
            {\n        START_DATE: \"cf.cplace.solution.safe.startDate\",\n        END_DATE:
            \"cf.cplace.solution.safe.endDate\",\n        STATISTICS: \"cf.cplace.solution.safe.statsJson\",\n    },\n};\n\nconst
            pi = Array.from(pages)[0];\n\nif (pi?.getBuiltinFeatureValue(\"customType\")
            !== PROGRAM_INCREMENT.TYPE) {\n    throw new Error(\"Please provide a
            single team iteration in the chart search.\");\n}\n\nconst startDate =
            pi.get(PROGRAM_INCREMENT.ATTR.START_DATE).withTimeAtStartOfDay();\nconst
            endDate = pi.get(PROGRAM_INCREMENT.ATTR.END_DATE).withTimeAtStartOfDay();\n/**
            @type {Statistics} */\nlet statistics = null;\ntry {\n    statistics =
            JSON.parse(pi.get(PROGRAM_INCREMENT.ATTR.STATISTICS));\n    DEBUG && cplace.log(statistics);\n}
            catch (e) {\n    return {\n        title: {\n            text: null,\n        },\n    };\n}\n\nif
            (!statistics || !statistics.archive || !statistics.current) {\n    return
            {\n        title: {\n            text: null,\n        },\n    };\n}\n\nconst
            today = DateTime.parse(statistics.current.date).withTimeAtStartOfDay();\n\n//
            Sort statistics by Date\nconst sortedStatistics = statistics.archive.sort((a,
            b) => Days.daysBetween(new DateTime(Date.parse(b.date)), new DateTime(Date.parse(a.date))).getDays());\n\n//
            Define the data for Release Burndown\nlet data = sortedStatistics\n    .map((element)
            => {\n        const currentDate = DateTime.parse(element.date);\n        return
            {\n            day: currentDayNumber(startDate, currentDate),\n            planned:
            linearPercentageDegression(element.burndown.planned, currentDate, startDate,
            endDate),\n            actual: element.burndown.planned - element.burndown.done,\n            forecast:
            null,\n        };\n    })\n    .sort((a, b) => a.day - b.day);\n\nconst
            lastDataPoint = sortedStatistics[sortedStatistics.length - 1];\n\nlet
            currentDate = new DateTime(Date.parse(lastDataPoint.date));\n\nwhile (!currentDate.isAfter(endDate.plusSeconds(5)))
            {\n    const currentDateKey = currentDayNumber(startDate, currentDate);\n\n    //
            DEBUG && cplace.log(currentDateKey)\n\n    if (!data.some((el) => currentDateKey
            === el.day)) {\n        data.push({\n            day: currentDateKey,\n            planned:
            linearPercentageDegression(statistics.current.burndown.planned, currentDate,
            startDate, endDate),\n            actual: null,\n            forecast:
            linearPercentageDegressionForecast(statistics.current.burndown.planned,
            statistics.current.burndown.done, currentDate, today, endDate),\n        });\n    }\n\n    currentDate
            = currentDate.plusDays(1);\n}\n\ndata = sortByKey(data, \"day\");\n\n//
            Create the chart\nreturn {\n    chart: {\n        type: \"line\",\n    },\n    title:
            {\n        text: \"Program Increment Burn-Down Chart\",\n    },\n    xAxis:
            {\n        title: {\n            text: \"Day\",\n        },\n        categories:
            data.map((data) => data.day),\n    },\n    yAxis: {\n        title: {\n            text:
            \"Story Points\",\n        },\n    },\n    plotLines: [\n        {\n            color:
            \"#33ff33\",\n            width: 1,\n            zIndex: 9999,\n            value:
            12,\n        },\n    ],\n    series: [\n        {\n            name: \"Ideal
            Burndown\",\n            data: data.map((data) => data.planned),\n            color:
            \"lightblue\",\n        },\n        {\n            name: \"Forecast\",\n            data:
            data.map((data) => data.forecast || data.actual),\n            color:
            {\n                pattern: {\n                    color: \"#ccccff\",\n                    opacity:
            0.5,\n                },\n            },\n        },\n        {\n            name:
            \"Remaining Storypoints\",\n            data: data.map((data) => data.actual),\n            color:
            \"#6666ff\",\n        },\n    ],\n};\n\nfunction linearPercentageDegression(planned,
            currentDate, startDate, endDate) {\n    const daysFullIteration = Days.daysBetween(startDate.withTimeAtStartOfDay(),
            endDate.withTimeAtStartOfDay()).getDays();\n    const daysLeft = Days.daysBetween(currentDate.withTimeAtStartOfDay(),
            endDate.withTimeAtStartOfDay()).getDays();\n\n    DEBUG && cplace.log(\"daysfull:
            \" + daysFullIteration);\n    DEBUG && cplace.log(\"daysleft: \" + daysLeft);\n\n    return
            planned * (daysLeft / daysFullIteration);\n}\n\nfunction linearPercentageDegressionForecast(planned,
            done, currentDate, startDate, endDate) {\n    const daysFullIteration
            = Days.daysBetween(startDate.withTimeAtStartOfDay(), endDate.withTimeAtStartOfDay()).getDays();\n    const
            daysLeft = Days.daysBetween(currentDate.withTimeAtStartOfDay(), endDate.withTimeAtStartOfDay()).getDays();\n\n    DEBUG
            && cplace.log(\"daysfull: \" + daysFullIteration);\n    DEBUG && cplace.log(\"daysleft:
            \" + daysLeft);\n\n    if (daysFullIteration === 0) {\n        return
            done;\n    }\n\n    return (planned - done) * (daysLeft / daysFullIteration);\n}\n\nfunction
            sortByKey(array, key) {\n    return array.sort(function (a, b) {\n        var
            x = a[key];\n        var y = b[key];\n        return x < y ? -1 : x >
            y ? 1 : 0;\n    });\n}\n\nfunction currentDayNumber(startDate, currentDate)
            {\n    return Days.daysBetween(startDate.withTimeAtStartOfDay(), currentDate.withTimeAtStartOfDay()).getDays();\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]},{"relativeUid":"embeddingCustomEntity"}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"en":"Burn-Down Chart"}
        collapsed: false
        id: _c5bw9egl0rid7uoej3qsiq778
        widgetType: cf.cplace.visualizations.scriptingHighcharts
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n * Displays all work items of the backlog
            as Pie grouped by the classification of their type\n *\n * @author Daniel
            Fader\n * @version 12.07.2023\n */\n\n//--------------------------------------------------------------------------------------//\n//                                       LOG
            AND DEBUG                                  //\n//--------------------------------------------------------------------------------------//\nconst
            DEBUG = false;\ncplace.setLogName(''highchart_capacity-allocation'');\n\n//--------------------------------------------------------------------------------------//\n//                                       CONFIGURATION                                  //\n//--------------------------------------------------------------------------------------//\nconst
            COLORS = {\n    TYPE_CLASSIFICATION: {\n        CAPABILITIY: ''#61a89d'',\n        ENABLER:
            ''#ffb600''\n    }\n};\n\nconst NAMES = {\n    TYPE_CLASSIFICATION: {\n        CAPABILITY:
            ''Capability'',\n        ENABLER: ''Enabler''\n    }\n};\n\nconst CAPABILITIY
            = /** @type {const} */ ({\n    TYPE: ''cf.cplace.solution.safe.capability'',\n    ATTR:
            {\n        TITLE: ''cf.cplace.solution.safe.title'',\n        TYPE: ''cf.cplace.solution.safe.capabilityType'',
            // TYPE_WORK_ITEM_TYPE\n        STATE: ''cf.cplace.solution.safe.state''
            // ENUM\n    },\n    ENUMS: {\n        STATUS: {\n            DRAFT: \"#10
            - Draft\",\n            FUNNEL: \"#15 - Funnel\",\n            DEFINING:
            \"#25 - Analyzing\",\n            REDAY: \"#35 - Backlog\",\n            IMPLEMENTING:
            \"#45 - Implementing\",\n            READYFORTESTING: \"#55 - Validating\",\n            INTEGRATING:
            \"#65 - Deploying\",\n            READY: \"#75 - Releasing\",\n            DONE:
            \"#85 - Done\",\n            OBSOLETE: \"#95 - Obsolete\",\n        },\n        TYPE:
            {\n            ENABLER: ''enabler'',\n            CAPABILITY: ''capability'',\n        }\n    }\n});\n\n\n\n//--------------------------------------------------------------------------------------//\n//                                       INITIALIZATION                                 //\n//--------------------------------------------------------------------------------------//\nconst
            items = Array.from(pages);\n\n//--------------------------------------------------------------------------------------//\n//                                       PROCESSING
            STAGE                               //\n//--------------------------------------------------------------------------------------//\nconst
            series = createPieSeries(items);\n\nconst chart = {\n    chart: {\n        type:
            ''pie''\n    },\n    title: {\n        text: null,\n    },\n    legend:
            {\n        enabled: false,\n    },\n    tooltip: {\n        useHTML: true,\n        followPointer:
            false,\n    },\n    plotOptions: {\n        series: {\n            borderColor:
            ''#ffffff'',\n            borderWidth: 2,\n            stickyTracking:
            false,\n            tooltip: {\n                headerFormat: '''',\n                pointFormat:
            ''<b>{point.name}</b><br>{point.y} ({point.custom.percent:.0f} %)'',\n                findNearestPointBy:
            ''xy''\n            }\n        }\n    },\n    series: [series]\n};\n\n//
            noinspection JSAnnotator\nreturn chart;\n\n//--------------------------------------------------------------------------------------//\n//                                       BUSINESS
            FUNCTIONS                             //\n//--------------------------------------------------------------------------------------//\n/**\n
            * @param {Page<''cf.cplace.solution.safe.capability''>[]} items\n * @return
            {Object}\n */\nfunction createPieSeries(items) {\n    const classifications
            = Object.keys(CAPABILITIY.ENUMS.TYPE);\n    const data = classifications.map(classification
            => {\n        const itemsWithClassification = items.filter(item => {\n            const
            itemType = item.get(CAPABILITIY.ATTR.TYPE);\n            return itemType
            && itemType === CAPABILITIY.ENUMS.TYPE[classification];\n        });\n        const
            percent = Math.min(100, (itemsWithClassification.length === 0 || items.length
            === 0) ? 0 : (itemsWithClassification.length / items.length * 100));\n        return
            {\n            name: NAMES.TYPE_CLASSIFICATION[classification],\n            color:
            COLORS.TYPE_CLASSIFICATION[classification],\n            y: itemsWithClassification.length,\n            custom:
            {\n                percent: percent\n            }\n        };\n    });\n    return
            {\n        name: ''Work items by classification'',\n        data: data\n    };\n}\n\n/**\n
            * Log to cplace\n * @param {any} text\n */\nfunction log(text) {\n    if
            (!DEBUG) {\n        return;\n    }\n    const logOutput = typeof text
            !== ''string'' ? JSON.stringify(text) : text;\n    cplace.log(logOutput);\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"embeddingCustomEntity"}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"en":"Capabilitiy Classification","de":"Capabilitiy Klassifikation"}
        collapsed: false
        id: _8hbfpo221dx39i4n95qhkqjsq
        widgetType: cf.cplace.visualizations.scriptingHighcharts
- rows:
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":4,\"widgets\":[{\"id\":\"id_pl6mj5myy5ref5adu377hchm8\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_55m3j4r3397rou70i1cq01bi9\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_1fl2aw00ko8on6z7ejmik7ly3\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":4,\"widgets\":[{\"id\":\"id_w9jezrmxoue22f5681m1icgly\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_9fgk10ncf19jlfoss8739wu9x\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_j06oq431crd4bni2rqstubibt\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_bclo85x9b1p6fhgqld3a6gjkp\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_3k8v1gdi72drdp12m5p2v07q1\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_3k8v1gdi72drdp12m5p2v07q1\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.endDate\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_55m3j4r3397rou70i1cq01bi9\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.periodStatus\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_w9jezrmxoue22f5681m1icgly\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.predecessor\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_1fl2aw00ko8on6z7ejmik7ly3\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.capacity\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_bclo85x9b1p6fhgqld3a6gjkp\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.startDate\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_pl6mj5myy5ref5adu377hchm8\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.title\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_j06oq431crd4bni2rqstubibt\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.Result\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_9fgk10ncf19jlfoss8739wu9x\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.solution\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Details","en":"Details"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d300
        collapsed: false
        id: _lt2mtv541qpkjgx8f3vbd0k4r
        widgetType: cf.cplace.platform.attributesGroup
    - proportion: 6
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n * Identifier: highchart-programIncrement-progress\n
            * Type of chart: multi pie chart\n * Type of search pages: cf.cplace.solution.safe.team,
            cf.cplace.solution.safe.story\n * Functionality: visualizes different
            kinds of kpis\n * \n * INSTRUCTIONS TO ADD CHARTS\n * 1. Increase TOTAL_NUMBER_OF_KPIS
            +1\n * 2. Define Following Values\n *      - CX_TITLE \n *      - CX_ACTUAL\n
            *      - CX_ACTUAL_PERCENTAGE\n *      - CX_DISPLAY_NUMBER \n *      -
            CX_DISPLAY_TEXT \n *      - CX_COLOR \n * 3. Create chart\n *      - createChart(CX_TITLE,
            CX_ACTUAL_PERCENTAGE, CX_DISPLAY_NUMBER, CX_DISPLAY_TEXT, CX_COLOR) {\n
            * \n * \n * @author Lukas Scheiring (cF)\n * Last edited: 18.08.2022\n
            */\n\n//--------------------------------------------------------------------------------------//\n//                                       LOG
            AND DEBUG                                  //\n//--------------------------------------------------------------------------------------//\nconst
            DEBUG = false;\ncplace.setLogName(''highchart-programIncrement-progress'');\n\n//--------------------------------------------------------------------------------------//\n//                                       CONFIGURATION                                  //\n//--------------------------------------------------------------------------------------//\n\n//CHART
            COLOURS\nconst COLOURS = {\n    TEXT_COLOR : ''#003653'',\n    BACKGROUND_COLOR
            : ''#ffffff'',\n    GREY : ''gray'',\n    RED: ''#f30000'',\n    DARK_RED
            : ''#9e0000'',\n    YELLOW: ''#ffc700'',\n    GREEN: ''#5ab500'',\n    BLUE
            : ''#A6CAD8''\n}\n\n//CHART SETTINGS\nconst TOTAL_NUMBER_OF_KPIS = 4\nconst
            Y_POSITION = ''40%''\n\n//LANGUAGE SETTINGS\nconst NAMINGS = {\n    de:
            {\n        CHART_TITLE: '''',\n    },\n    en: {\n        CHART_TITLE:
            '''',\n    }\n};\n\n//PLACEHOLDER\nconst PROGRAM_INCREMENT = {\n    TYPE
            : ''cf.cplace.solution.safe.programIncrement'',\n    ATTR : {\n        TITLE
            : ''cf.cplace.solution.safe.title'',\n        PROGRAM : ''cf.cplace.solution.safe.program'',\n        START_DATE
            : ''cf.cplace.solution.safe.startDate'',\n        END_DATE : ''cf.cplace.solution.safe.endDate'',\n        PREDECESSOR
            : ''cf.cplace.solution.safe.predecessor'',\n        PERIOD_STATUS : ''cf.cplace.solution.safe.periodStatus'',\n        CAPACITY
            : ''cf.cplace.solution.safe.capacity''\n    }\n}\n\nconst TEAM = {\n    TYPE
            : ''cf.cplace.solution.safe.team'',\n    ATTR : {\n        VELOCITY :
            ''cf.cplace.solution.safe.velocity'',\n        CAPACITY : ''cf.cplace.solution.safe.capacity'',\n    }\n}\n\nconst
            STORY = {\n    TYPE : ''cf.cplace.solution.safe.story'',\n    ATTR : {\n        ITERATION
            : ''cf.cplace.solution.safe.iteration'',\n        STATUS : ''cf.cplace.solution.safe.status'',\n        STORY_POINTS
            : ''cf.cplace.solution.safe.storyPoints''\n    },\n    ENUM_STATUS : {\n        ANALYSIS
            : ''#10 - analysis'',\n        BACKLOG : ''#20 - backlog'',\n        IN_PROGRESS
            : ''#40 - in progress'',\n        DONE : ''#50 - done'',\n        OBSOLETE
            : ''#60 - obsolete''\n    }\n}\n\nconst ITERATION = {\n    TYPE : ''cf.cplace.solution.safe.iteration'',\n    ATTR:
            {\n        ITERATION : ''cf.cplace.solution.safe.iteration'',\n        PI:
            ''cf.cplace.solution.safe.programIncrement'',\n    }\n}\n\n\n\n//--------------------------------------------------------------------------------------//\n//                                       INITIALIZATION                                 //\n//--------------------------------------------------------------------------------------//\nlog(''Start...'')\nlet
            currentUser = cplace.utils().getCurrentUser()\nconst userLanguage = currentUser.getUserLanguage()\nlet
            programIncrement = embeddingPage;\nlet chartIndex = 0\n\n//Container\nlet
            teams = []\nlet stories = []\n\nlet series = []\nlet yAxis = []\nlet pane
            = []\n\n//Dates\nlet piStartDate = programIncrement.get(PROGRAM_INCREMENT.ATTR.START_DATE).withTimeAtStartOfDay()\nlet
            piEndDate = programIncrement.get(PROGRAM_INCREMENT.ATTR.END_DATE).withTimeAtStartOfDay()\nlet
            today = new DateTime().withTimeAtStartOfDay()\n\n//KPIs\nlet totalDaysOfPI
            = Days.daysBetween(piStartDate,piEndDate).getDays();\nlet passedDaysOfPI
            = getPassedDays (piStartDate, piEndDate, today, totalDaysOfPI)\n\n\n\n//let
            totalCapacity = 0;\nlet velocityOfLastPI = 0\nlet totalLoad = 0\nlet spDone
            = 0\n\n\n//--------------------------------------------------------------------------------------//\n//                                       PROCESSING
            STAGE                               //\n//--------------------------------------------------------------------------------------//\n\n//Group
            pages\ncplace.each(pages, page => {\n    switch (page.getBuiltinFeatureValue(''customType''))
            {\n        case TEAM.TYPE:\n            teams.push(page)\n            break;\n        case
            STORY.TYPE:\n            stories.push(page)\n            break;\n        default:\n            break;\n    }\n})\n\n//calculate
            velocity\nlet lastPI = programIncrement.get(PROGRAM_INCREMENT.ATTR.PREDECESSOR)\nif
            (lastPI) {\n    log(''Last PI: '' + lastPI.getName())\n    let iterations
            = lastPI.getIncomingPages(ITERATION.TYPE, ITERATION.ATTR.PI)\n    cplace.each(iterations,
            iteration => {\n        log(''Check iteration: '' + iteration.getName())\n        let
            storiesOfIteration = iteration.getIncomingPagesFromAllSpaces(STORY.TYPE,
            STORY.ATTR.ITERATION)\n        cplace.each(storiesOfIteration, storyOfIteration
            => {\n            log(''Check story: '' + storyOfIteration.getName())\n            if
            (storyOfIteration.get(STORY.ATTR.STATUS) === STORY.ENUM_STATUS.DONE) {\n                velocityOfLastPI
            += (storyOfIteration.get(STORY.ATTR.STORY_POINTS) || 0)\n            }\n        })\n    })\n}\n\n\n\n\n//Load
            + SP done\ncplace.each(stories, story => {\n    let storyPoints = story.get(STORY.ATTR.STORY_POINTS)
            || 0\n    totalLoad += storyPoints\n\n    if (story.get(STORY.ATTR.STATUS)
            === STORY.ENUM_STATUS.DONE) {\n        spDone += storyPoints\n    }\n\n})\n\n\n\n//--------------------------------------------------------------------------------------//\n//                                       KPIs
            & CHART                                   //\n//--------------------------------------------------------------------------------------//\n\n//Chart
            1 - passed days\nconst C1_TITLE = ''Days passed''\nconst C1_ACTUAL = passedDaysOfPI\nconst
            C1_ACTUAL_PERCENTAGE = Math.round((passedDaysOfPI / totalDaysOfPI) * 100)  ?
            Math.round((passedDaysOfPI / totalDaysOfPI) * 100) : 0;\nconst C1_DISPLAY_NUMBER
            = C1_ACTUAL_PERCENTAGE + ''%''\nconst C1_DISPLAY_TEXT = ''<b>DAYS PASSED</b><br>''
            + passedDaysOfPI + ''/'' + totalDaysOfPI\nconst C1_COLOR = COLOURS.GREEN\n\ncreateChart(C1_TITLE,
            C1_ACTUAL_PERCENTAGE, C1_DISPLAY_NUMBER, C1_DISPLAY_TEXT, C1_COLOR)\n\n\n//KPI
            2 - Load vs Capacity\n//Capacity + Velocity\nlet totalCapacity = programIncrement.get(PROGRAM_INCREMENT.ATTR.CAPACITY);\nif(totalCapacity){\nconst
            C2_TITLE = ''Load vs. Capacity''\nconst C2_ACTUAL = totalLoad\nconst C2_ACTUAL_PERCENTAGE=
            Math.round((totalLoad / totalCapacity) * 100) || 0\nconst C2_DISPLAY_NUMBER
            = C2_ACTUAL_PERCENTAGE + ''%''\nconst C2_DISPLAY_TEXT = ''<b>LOAD VS.
            CAPACITY</b><br>'' + totalLoad + ''/'' + totalCapacity\n\nlet c2_color
            = COLOURS.GREEN\nif (Math.round((totalLoad / totalCapacity) * 100) >=
            90) {\n    c2_color = COLOURS.YELLOW\n    if (Math.round((totalLoad /
            totalCapacity) * 100) > 100) {\n        c2_color = COLOURS.RED\n    }    \n}    \n\ncreateChart(C2_TITLE,
            C2_ACTUAL_PERCENTAGE, C2_DISPLAY_NUMBER, C2_DISPLAY_TEXT, c2_color)\n}\n\n//KPI
            3 - Story Points done\nconst C3_TITLE = ''Done SP''\nconst C3_ACTUAL =
            spDone\nconst C3_ACTUAL_PERCENTAGE = Math.round((spDone / totalLoad) *
            100) || 0\nconst C3_DISPLAY_NUMBER = C3_ACTUAL_PERCENTAGE + ''%''\nconst
            C3_DISPLAY_TEXT = ''<b>DONE SP</b><br>'' + spDone + ''/'' + totalLoad\nconst
            C3_COLOR = COLOURS.GREEN\n\ncreateChart(C3_TITLE, C3_ACTUAL_PERCENTAGE,
            C3_DISPLAY_NUMBER, C3_DISPLAY_TEXT, C3_COLOR)\n\n\n//KPI 4 - Velocity\nconst
            C4_TITLE = ''Velocity of Last PI''\nconst C4_ACTUAL = 100\nconst C4_ACTUAL_PERCENTAGE
            = 100\nconst C4_DISPLAY_NUMBER = Math.round(velocityOfLastPI)\nconst C4_DISPLAY_TEXT
            = ''<b>VELOCITY OF LAST PI</b><br>over all Teams''\nconst C4_COLOR = COLOURS.BLUE\n\ncreateChart(C4_TITLE,
            C4_ACTUAL_PERCENTAGE, C4_DISPLAY_NUMBER, C4_DISPLAY_TEXT, C4_COLOR)\n\n\n\n\nlog(''End...'')\nreturn
            {\n    chart: {\n        type: ''solidgauge'',\n    },\n    \n    title:
            {\n        text: NAMINGS[userLanguage].CHART_TITLE\n    },\n    series:
            series,\n    yAxis: yAxis,\n    pane: pane,\n    tooltip : {\n        enabled:
            false\n    },\n    plotOptions: {\n        solidgauge : {\n            enableMouseTracking:
            false,\n        }\n    },\n}\n\n\n//--------------------------------------------------------------------------------------//\n//                                       BUSINESS
            FUNCTIONS                             //\n//--------------------------------------------------------------------------------------//\n\nfunction
            createChart(title, actualRel, displayNumber, displayText, color) {\n    series.push(getSeriesObject(title,
            actualRel, displayNumber, chartIndex, color))\n    yAxis.push(getYAxisObject(displayText,
            chartIndex, 0, 100))\n    pane.push(getPaneObject(getXAxisPosition(chartIndex),
            Y_POSITION))\n    chartIndex++;\n}\n\nfunction getXAxisPosition (kpiIndex)
            {\n    return 120 * (kpiIndex + 1) / (TOTAL_NUMBER_OF_KPIS + 1) -10 +
            ''%''\n}\n\nfunction getPassedDays (piStartDate, piEndDate, today, totalDaysOfPI)
            {\n    if (today.isBefore(piStartDate)) {\n        return 0\n    }\n    if
            (piEndDate.isBefore(today)) {\n        return totalDaysOfPI\n    }\n    return
            Days.daysBetween(piStartDate,today).getDays()\n}\n\nfunction getSeriesObject
            (title, actual, label, index, color) {\n    return {\n        name : title,\n        data
            : [{\n            name : title,\n            color : color,\n            y
            : actual,\n            innerRadius: ''80%'',\n            radius: ''100%'',\n            dataLabels
            : {\n                format :  ''<h1 style=\"font-size:13\">'' + label+
            ''</h1>'',\n                borderWidth: 0,\n                color: COLOURS.GREY,\n                verticalAlign:
            ''middle'',\n                useHTML: true\n            },\n        }],\n        yAxis:
            index,\n    }\n}\n\n\nfunction getYAxisObject (axisTitle, index, min,
            max) {\n    return {\n        min: min,\n        max: max,\n        pane
            : index,\n        title: {\n            text: axisTitle,\n            useHTML:
            true,\n            y: 110,\n        },\n        labels: {\n            enabled
            : false\n        },\n        /*stops: [\n            [0.1, COLOURS.GREEN],
            // green\n            [0.9, COLOURS.YELLOW], // yellow\n            [0.99,
            COLOURS.RED] // red\n        ],*/\n        lineWidth: 0,\n        tickWidth:
            0,\n        tickAmount : 0,\n        minorTickWidth: 0\n    }\n}\n\nfunction
            getPaneObject (xPosition, yPosition) {\n    return {\n        center:
            [xPosition, yPosition],\n        size: ''50%'',\n        startAngle: 0,\n        endAngle:
            360,\n        background: {\n            backgroundColor: ''#EEE'',\n            borderColor:
            null,\n            innerRadius: ''80%'',\n            outerRadius: ''100%'',\n            shape:
            ''arc''\n        }\n    }\n}\n\n//--------------------------------------------------------------------------------------//\n//                                       HELPER
            FUNCTIONS                               //\n//--------------------------------------------------------------------------------------//\n\n\n/**\n
            * Log to cplace\n * @param {any} text \n */\nfunction log(text) {\n    if
            (!DEBUG) {\n        return\n    }\n    let logOutput = (typeof text !==
            ''string'') ? JSON.stringify(text) : text;\n\n    cplace.log(logOutput);\n}\n\n/**\n
            * \n * @param {any} msg \n * @returns \n */\nfunction timeSinceStart(msg)
            {\n    if (!DEBUG) {\n        return\n    }\n    let now = new Date().getTime();\n    cplace.log([(now
            - START_TIME) + ''ms'', (now - LAST_TIME) + ''ms'', msg].join('' -- ''))\n    LAST_TIME
            = now;\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"or":[{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]}]},{"and":[{"types":["cf.cplace.solution.safe.story"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.feature","search":{"filters":[{"types":["cf.cplace.solution.safe.feature"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"embeddingCustomEntity"}]}
            }]}]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: cf.cplace.visualization.tableSelectionOnly
          value: bfalse
        - name: height
          value: d300
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"ART PI Statistics","en":"ART PI Statistics"}
        collapsed: false
        id: _1jd7uqz13dpsl75eh1cn0jz9y
        widgetType: cf.cplace.visualizations.scriptingHighcharts
  - columns:
    - proportion: 12
      widgets:
      - attributes:
          name: content
          value: 'r<h4 style="background-color: rgb(220, 220, 220); border-radius:
            4px; border: 1px solid transparent; color: rgb(118, 118, 118); font-size:
            14px; margin-bottom: 20px; padding: 10px; text-align: center"><span style="color:
            rgb(0, 0, 0)"><strong><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzVlMndzem1qenRwM3F0aHZxZ2M2OXA1bjEiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJjcGxhY2Uuc2V0TG9nTmFtZSgnQ3VycmVudCBQSScpO1xcblwvXC9Db25maWd1cmF0aW9uc1xcbmNvbnN0IFBJX0RBU0hCT0FSRCA9IHtcXG4gICAgVFlQRTonY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY3VycmVudFBpRGFzaGJvYXJkJyxcXG4gICAgQVRUUjp7XFxuICAgICAgUEFSRU5UOidjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5wYXJlbnQnXFxuICAgIH1cXG4gIH1cXG4gIFxcbiAgbGV0IGZpbmFsbGluaz0nJztcXG4gIGxldCBsaW5rLCBuYW1lO1xcbiAgbGV0IHBpRGFzaGJvYXJkU2VhcmNoID0gbmV3IFNlYXJjaCgpXFxuICAgIC5hZGQoRmlsdGVycy5zcGFjZShlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSkpXFxuICAgIC5hZGQoRmlsdGVycy50eXBlKFBJX0RBU0hCT0FSRC5UWVBFKSlcXG4gICAgLmFkZChGaWx0ZXJzLmN1c3RvbUF0dHJpYnV0ZU5vbmVtcHR5KFBJX0RBU0hCT0FSRC5BVFRSLlBBUkVOVCkpXFxuICAgIC5maW5kQWxsUGFnZXMoKTtcXG5cXG5sZXQgcmVzdWx0ID0gSXRlcmFibGVzLmdldEZpcnN0KHBpRGFzaGJvYXJkU2VhcmNoLCBudWxsKTtcXG5cXG5pZiAocmVzdWx0KSB7XFxuICAgIGxpbmsgPSByZXN1bHQuZ2V0VXJsKCk7XFxuICAgIG5hbWUgPSByZXN1bHQuZ2V0TmFtZSgpO1xcbn1cXG4gIFxcbnJldHVybiAnPGEgaHJlZj1cXFwiJytsaW5rKydcXFwiY2xhc3M9XFxcImN1cnJlbnQtY29sb3JcXFwiPk9wZW4gQ3VycmVudCBQSSBEYXNoYm9hcmQ8XC9hPic7XCIsXCJ1cGdyYWRlQWNrXCI6dHJ1ZSxcImRlc2NyaXB0aW9uXCI6XCJcIn0ifV19XX0</embeddedwidget></strong></span></h4>'
        collapsed: false
        id: _t9e5urttfjtm9a3j5n5tr6ay6
        widgetType: cf.cplace.demoWidgets.demoRichString
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.layoutTabsWidget.cplacejsLayouts
          value: 's{"version":1,"script":"var layoutConfig = {\n    layouts: selectedLayouts,\n    active:
            selectedActiveLayout\n};\n\nreturn layoutConfig;","upgradeAck":true,"description":""}'
        - name: cf.cplace.layoutTabsWidget.layoutSelection
          value: scf.cplace.solution.safe.layout.overview
        - name: cf.cplace.layoutTabsWidget.layouts
          value: s{"layouts":["cf.cplace.solution.safe.layout.overview","cf.cplace.solution.safe.pi.layout.objectives","cf.cplace.solution.safe.pi.layout.capabilities","cf.cplace.solution.safe.pi.layout.statistics"]}
        - name: cf.cplace.layoutTabsWidget.sourceForLayouts
          value: ssimpleLayoutSelection
        collapsed: false
        id: _q8swq7ieo5aydj7aqdbhsy2cz
        widgetType: cf.cplace.layoutTabsWidget.widget
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_hwqtae0p8wkpwtlc2hm0nxyck
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_yx8a4uib3vqm4j5tlueqpcbei
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_14wypu2rypret1sqc7qa5y8m8
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 3
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_w6ko6wp8t7fez4xa5r1ovbk99\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_w6ko6wp8t7fez4xa5r1ovbk99\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.program\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Program","en":"Program"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: bfalse
        - name: cf.platform.singleColumn
          value: btrue
        collapsed: false
        id: _2bcbre7t78iymugo04uf6i6nt
        widgetType: cf.cplace.platform.attributesGroup
    - proportion: 3
      widgets: []
    - proportion: 6
      widgets: []
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.description'","visible":true},{"name":"'cf.cplace.solution.safe.status'","visible":true},{"name":"'cf.cplace.solution.safe.progress'","visible":true},{"name":"'cf.cplace.solution.safe.conflictState'","visible":true},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":true},{"name":"'cf.cplace.solution.safe.release'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.program'","visible":false},{"name":"'cf.cplace.solution.safe.dependsOn'","visible":false},{"name":"'cf.cplace.solution.safe.safeMilestone'","visible":false},{"name":"'cf.cplace.solution.safe.capability'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.programKey'","visible":false},{"name":"'cf.cplace.solution.safe.featureType'","visible":false},{"name":"'cf.cplace.solution.safe.teams'","visible":false},{"name":"'cf.cplace.solution.safe.requiresAssistenceOf'","visible":false},{"name":"'cf.cplace.solution.safe.periodStatus'","visible":false},{"name":"'cf.cplace.solution.safe.iterations'","visible":false},{"name":"'cf.cplace.solution.safe.stories'","visible":false},{"name":"'cf.cplace.solution.safe.featureOwner'","visible":false},{"name":"'cf.cplace.solution.safe.storyPointsTotal'","visible":false},{"name":"'cf.cplace.solution.safe.storyPointsDone'","visible":false},{"name":"'cf.cplace.solution.safe.numberStoriesTotal'","visible":false},{"name":"'cf.cplace.solution.safe.numberStoriesOpen'","visible":false},{"name":"'cf.cplace.solution.safe.numberStoriesDone'","visible":false},{"name":"'cf.cplace.solution.safe.manualPrioritization'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"'cf.cplace.solution.safe.calculateDateConflicts'","visible":false},{"name":"'cf.cplace.solution.safe.calculatedConflicts'","visible":false},{"name":"'cf.cplace.solution.safe.releaseDate'","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.featureType'
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: multiSortColumns
          value: s[{"sortColumn":"'cf.cplace.solution.safe.status'","sortOrder":"asc","sortingPriorityIndex":1}]
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.feature"]},{"relativeCustomReference":"cf.cplace.solution.safe.capability","referenceOperator":"embeddingCustomEntity"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"en":"All Features of the Capability","de":"Alle Features der Capability"}
        collapsed: false
        id: id_3p5vn9c1w49pldzyh6yw69by2
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: _v3em8bu3gep688yc6t1jccozc
        widgetType: cf.platform.comments
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n * Displays all items grouped by Program
            (ART/Agile Release Train) and iteration.\n * Items can be of type Capability
            (Feature is a missing feature).\n * Dependencies between items are displayed
            as a line.\n *\n * Milestones that lie within the period of the iterations
            are displayed in a separate row.\n *\n * @author Daniel Fader\n * @version
            15.03.2023\n */\n\n//--------------------------------------------------------------------------------------//\n//                                       LOG
            AND DEBUG                                  //\n//--------------------------------------------------------------------------------------//\nconst
            DEBUG = false;\ncplace.setLogName(''highcharts-dependency-map-capability'');\n\n//--------------------------------------------------------------------------------------//\n//                                       CONFIGURATION                                  //\n//--------------------------------------------------------------------------------------//\n\nconst
            TYPE_CAPABILITY = {\n    TYPE: ''cf.cplace.solution.safe.capability'',\n    ATTR:
            {\n        TITLE: ''cf.cplace.solution.safe.title'',\n        TYPE: ''cf.cplace.solution.safe.capabilityType'',\n        FEATURES:
            ''cf.cplace.solution.safe.feature'',\n        PROGRAM: ''cf.cplace.solution.safe.program'',\n        SOLUTION:
            ''cf.cplace.solution.safe.solution.reference'',\n        PROGRAM_INCREMENT:
            ''cf.cplace.solution.safe.programIncrement'',\n        TEMP_ITERATIONS:
            ''cf.cplace.solution.safe.iteration''\n    },\n    ENUM: {\n        TYPE:
            {\n            CAPABILITY: ''capability'',\n            ENABLER: ''enabler''\n        }\n    }\n};\n\nconst
            TYPE_FEATURE = {\n    TYPE: ''cf.cplace.solution.safe.feature'',\n    ATTR:
            {\n        TITLE: ''cf.cplace.solution.safe.title'',\n        ITERATIONS:
            ''cf.cplace.solution.safe.iterations'',\n        PROGRAM_INCREMENT: ''cf.cplace.solution.safe.programIncrement'',\n        CAPABILITY:
            ''cf.cplace.solution.safe.capability'',\n        PROGRAM: ''cf.cplace.solution.safe.program''\n    }\n};\n\nconst
            TYPE_MILESTONE = {\n    TYPE: ''cf.cplace.solution.safe.safeMilestone'',\n    ATTR:
            {\n        TITLE: ''cf.cplace.solution.safe.title'',\n        DATE: ''cf.cplace.solution.safe.date'',\n        TYPE:
            ''cf.cplace.solution.safe.type'',\n        RELEVANT_FOR: ''cf.cplace.solution.safe.relevantFor''
            // refers to Program\n    },\n    ENUM: {\n        TYPE: {\n            PI_MILESTONE:
            ''#15 - PI Meilenstein'',\n            FIXED_DATE: ''#25 - Fixiertes Datum'',\n            LEARNING_MILESTONE:
            ''#35 - Learning Meilenstein''\n        }\n    }\n};\n\nconst TYPE_DEPENDENCY
            = {\n    TYPE: ''cf.cplace.solution.safe.dependency'',\n    ATTR: {\n        A:
            ''cf.cplace.solution.safe.successor'',\n        B: ''cf.cplace.solution.safe.predecessor'',\n        TYPE:
            ''cf.cplace.solution.safe.type'',\n        STATUS: ''cf.cplace.solution.safe.status'',\n        DESCRIPTION:
            ''cf.cplace.solution.safe.description''\n    },\n    ENUM: {\n        TYPE:
            {\n            RELATED_TO: ''related to'',\n            BLOCKED_BY: ''blocked
            by''\n        },\n        STATUS: {\n            IDENTIFIED: ''15 - identified'',\n            CONFLICT:
            ''25 - conflict'',\n            RESOLVED: ''35 - resolved''\n        }\n    }\n};\n\nconst
            TYPE_PROGRAM_INCREMENT = {\n    TYPE: ''cf.cplace.solution.safe.programIncrement'',\n    ATTR:
            {\n        TITLE: ''cf.cplace.solution.safe.title'',\n        START: ''cf.cplace.solution.safe.startDate'',\n        END:
            ''cf.cplace.solution.safe.endDate'',\n        PREDECESSOR: ''cf.cplace.solution.safe.predecessor''
            // Program Increment\n    }\n};\n\nconst TYPE_ITERATION = {\n    TYPE:
            ''cf.cplace.solution.safe.iteration'',\n    ATTR: {\n        TITLE: ''cf.cplace.solution.safe.title'',\n        PROGRAM_INCREMENT:
            ''cf.cplace.solution.safe.programIncrement'',\n        START: ''cf.cplace.solution.safe.startDate'',\n        END:
            ''cf.cplace.solution.safe.endDate'',\n        PREDECESSOR: ''cf.cplace.solution.safe.predecessor''
            // Iteration\n    }\n};\n\nconst COLORS = {\n    INACTIVE: ''#88bbee'',\n    ACTIVE:
            ''#4488aa'',\n    DEPEND: ''#888888'',\n    DEPEND_HIGHLIGHT: ''#A21622'',\n    DEPEND_RESOLVED:
            ''#19ad48'',\n    SAFE_MILESTONE: ''#3D8F8C'',\n    RELEASE: ''#366C81'',\n    MILESTONE_PLOTBAND:
            ''#E2F3F2'',\n    RELEASE_PLOTBAND: ''#E2EEF3'',\n    CAPABILITY: ''#0aa5ff'',\n    ENABLER:
            ''#ffc80c'',\n    TODAY_PLOTLINE: ''lightgrey''\n};\n\nconst CATEGORY
            = {\n    SAFE_MILESTONE: ''SAFe Milestones''\n};\n\nconst ROW_SIZE = {\n    PERIOD:
            2,\n    ITEM: 1\n};\n\nconst HEIGHTS = {\n    HEADER: 40,\n    ITEM: 25\n};\n\nconst
            MAX_DATA_LABEL_LENGTH = 25;\nconst DATA_LABEL_PADDING = 0.05;\n\nconst
            SEPARATOR = {\n    V: '' //VSEP// '',\n    H: '' --HSEP-- ''\n};\n\nconst
            EMPTY_DIAGRAM = {\n    title: {\n        text: ''No data to display''\n    }\n};\n\n//--------------------------------------------------------------------------------------//\n//                                       INITIALIZATION                                 //\n//--------------------------------------------------------------------------------------//\n/*\n*****************\nThis
            highchart is based on a heatmap, i.e. the chart is divided into a set
            of X * Y equally sized cells.\n* The first column(s) of the cells are
            used to show the vertical categories (categoriesVertical), which are provided
            as separate \"category\" series\n* The first row(s) of the cells are used
            to show the horizontal categories (categoriesHorizontal), which are provided
            as separate \"category\" series\n* The rest of the cells represent the
            data itself\n    * each cell can be identified by its set of vertical
            and horizontal categories saved as ''key'' in the ''keys''-array in the
            form of a string like \"X Cat Level 1 - X Cat Level 2 / Y Cat Level 1
            - Y Cat Level 2 - Y Cat Level 3\" (in theory the levels can be \"dynamic\",
            which is not used in this specific example. In this example only 1 level
            is used)\n    * for each cell the number of entities to be shown is counted
            as ''value'' in the ''values''-array.\n    * the entities for each cell
            are represented as boxes/cards within the cell and are pushed as separate
            serie to the main data series\n    * dependencies between entities are
            represented as separate spline series, whereas start and end point of
            the splines are the left or right edge of the corresponding entity boxes/cards
            on the map\n\n/***** config options *****/\n\n// 1) category colors horizontal
            (for each level)\nlet catColorsH = [''#000000'', ''#dddddd'', ''#dddddd'',
            ''#cccccc'', ''#cccccc''];\n\n// 2) category colors vertical (for each
            level)\nlet catColorsV = [''#000000'', ''#dddddd'', ''#dddddd'', ''#cccccc'',
            ''#cccccc''];\nlet catColors = [''#dddddd'', ''#dddddd'', ''#dddddd'',
            ''#dddddd''];\n\n// 3) sort category names on this order\nconst sortOrders
            = [CATEGORY.SAFE_MILESTONE];\n\nconst maxCols = 1;\nconst maxRows = 1;\n\n\n/*****
            build up our category structures *****/\nlet categoriesHorizontal = {
            names: [], subs: [], startDates: [], endDates: [], colors: [], links:
            [] };\nlet categoriesVertical = { names: [], subs: [], startDates: [],
            endDates: [], colors: [], links: [] };\nlet keys = [];\nlet values = [];\nlet
            tooltips = [];\nlet shortNameMap = new Map();\nlet nameMap = new Map();\nlet
            titleMap = new Map();\nlet colorMap = new Map();\nlet depends = [];\nlet
            itemValues = [];\nlet itemCats = [];\n\n//--------------------------------------------------------------------------------------//\n//                                       INITIALIZATION                                 //\n//--------------------------------------------------------------------------------------//\n\n//
            If embedding page is Capability then itself is the item. Otherwise, use
            pages from connected table\nconst items = isPageOfTypeCapability(embeddingPage)
            ? [embeddingPage] : Array.from(pages);\nlog(''items :''+items)\nlog(''Items
            in pages: '' + items.length);\nif (items.length === 0) {\n    // noinspection
            JSAnnotator\n    return EMPTY_DIAGRAM;\n}\n\nconst missingDependencies
            = getMissingDependencies(items);\nitems.push(...missingDependencies);\nlog(`Added
            ${missingDependencies.length} missing items that the input items depend
            on.`);\n\nconst allPeriods = getAllPeriods(items);\nlog(''allPeriods''+allPeriods)\nif
            (allPeriods.length === 0) {\n    // noinspection JSAnnotator\n    return
            EMPTY_DIAGRAM;\n}\n// const allPeriodNames = allPeriods.map(period =>
            period.getName());\nconst allPeriodIds = allPeriods.map(period => period.getId());\nlog(''Periods:
            '' + allPeriods.length);\n\nconst allPrograms = getPrograms(items);\nlog(''Programs:
            '' + allPrograms.length);\n\n\n// Find release planning dashboard, needed
            for link in the release swimlane\n// const releasePlanningDashboard =
            Iterables.getFirst(solution.getIncomingPages(RELEASE_DASHBOARD.TYPE, RELEASE_DASHBOARD.ATTR.PROGRAM),
            null);\n// const releasesLink = releasePlanningDashboard.getUrl();\nconst
            releasesLink = ''wip'';\n// Find PI Planning dashboard, needed for link
            in the safe milestone swimlane\n// const piManagementDashboard = Iterables.getFirst(solution.getIncomingPages(PI_PLANNING_DASHBOARD.TYPE,
            PI_PLANNING_DASHBOARD.ATTR.PROGRAM), null);\n// const piManagementLink
            = piManagementDashboard.getUrl();\nconst piManagementLink = ''wip'';\n//
            Find solution train, needed for finding all programs\n// const solutionTrain
            = Iterables.getFirst(solution.getIncomingPages(TYPE_CAPABILITY.TYPE, TYPE_CAPABILITY.ATTR.SOLUTION),
            null);\n\n//find relevant Pis of the program\n// const piSearch = new
            Search();\n// piSearch.add(Filters.embeddingSpace());\n// piSearch.add(Filters.type(PI.TYPE));\n//
            piSearch.add(Filters.customAttribute(PI.ATTR.PROGRAM).references(solution));\n//
            let allPeriods = [];\n// cplace.each(pis, pi => {\n//     const periodStatus
            = pi.get(PI.ATTR.PERIOD_STATUS);\n//     if (periodStatus && periodStatus.get(PERIOD_STATUS.ATTR.ORDER)
            != null && periodStatus.get(PERIOD_STATUS.ATTR.ORDER) > -1) {\n//         relevantPiIds.push(pi.getId());\n//         allPeriods.push(pi);\n//     }\n//
            })\n\n// Create categories based on items\ncplace.each(items, item =>
            {\n    let itemName = item.getName();\n    let itemTitle = item.get(TYPE_CAPABILITY.ATTR.TITLE);\n\n    //
            Determine dependencies\n    const itemDependencies = Array.from(item.getIncomingPages(TYPE_DEPENDENCY.TYPE,
            TYPE_DEPENDENCY.ATTR.A) || []);\n    log(''dependencies''+itemDependencies)\n    const
            lastItemIteration = getLastIteration(item);\n    const itemIterations
            = [];\n    if (lastItemIteration !== null) {\n        //only continue
            with feature, if it is in a relevant PI\n        const iterationId = lastItemIteration.getId();\n        if
            (allPeriodIds.includes(iterationId)) {\n            itemIterations.push(lastItemIteration);\n        }
            else {\n            return;\n        }\n    }\n\n    let itemPrograms
            = item.get(TYPE_CAPABILITY.ATTR.PROGRAM);\n\n    cplace.each(itemIterations,
            iteration => {\n        const iterationName = iteration.getName();\n        const
            iterationUrl = iteration.getUrl();\n\n        // a) format/drilldown of
            horizontal (xAxis) categories\n        let catX = [\n            (iterationName
            == null ? '' '' : iterationName)\n        ];\n        // b) format/drilldown
            of vertical (yAxis) categories\n        let catYs = [];\n\n        cplace.each(itemPrograms,
            program => {\n            catYs.push({\n                name: [program.getName()],\n                link:
            program.getUrl()\n            })\n        })\n\n        if (catYs.length
            === 0) {\n            catYs.push({\n                name: [''w/o Program''],\n                link:
            null\n            });\n        }\n\n        // c) common keys across both
            axes (= name of cell within the chart)\n        const categories = [];\n        catYs.forEach(catY
            => {\n            const cat = [catX.join(SEPARATOR.H), catY.name.join(SEPARATOR.H)].join(SEPARATOR.V);\n            categories.push(cat)\n        });\n\n        //
            now add them to internal category model\n        categoriesHorizontal
            = addCategories(categoriesHorizontal, catX, 1, iteration, null, null,
            (iterationUrl == null ? '' '' : iterationUrl));\n        cplace.each(catYs,
            catY => {\n            categoriesVertical = addCategories(categoriesVertical,
            catY.name, 1, null, null, null, (catY.link == null ? '' '' : catY.link));\n        });\n\n        cplace.each(categories,
            cat => {\n            let idx = keys.indexOf(cat);\n            if (idx
            < 0) {\n                // key (category) not found -> add a new value\n                keys.push(cat);\n                values.push(1);\n                tooltips.push([itemName]);\n                //
            add feature name to name Map\n                nameMap.set(cat + 1, ''<a
            href=\"'' + item.getUrl() + ''\">'' + itemName + ''</a>'');\n                shortNameMap.set(cat
            + 1, ''<a href=\"'' + item.getUrl() + ''\">'' + item.getName().replace(itemTitle,
            '''') + ''</a>'');\n                titleMap.set(cat + 1, itemTitle);\n                colorMap.set(cat
            + 1, (item.get(TYPE_CAPABILITY.ATTR.TYPE) === TYPE_CAPABILITY.ENUM.TYPE.CAPABILITY
            ? COLORS.CAPABILITY : COLORS.ENABLER));\n                //cplace.log
            (''1st entry nameMap: '' + nameMap.get(cat+1));\n                idx =
            keys.length - 1;\n            } else {\n                // found -> just
            update value\n                values[idx] = (values[idx] + 1);\n                tooltips[idx].push(itemName);\n                nameMap.set(cat
            + values[idx], ''<a href=\"'' + item.getUrl() + ''\">'' + itemName + ''</a>'');\n                shortNameMap.set(cat
            + values[idx], ''<a href=\"'' + item.getUrl() + ''\">'' + item.getName().replace(itemTitle,
            '''') + ''</a>'');\n                titleMap.set(cat + values[idx], itemTitle);\n                colorMap.set(cat
            + values[idx], (item.get(TYPE_CAPABILITY.ATTR.TYPE) === TYPE_CAPABILITY.ENUM.TYPE.CAPABILITY
            ? COLORS.CAPABILITY : COLORS.ENABLER));\n                //cplace.log
            (''additional entry nameMap: '' + nameMap.get(cat+values[idx]));\n            }\n\n            //
            add dependencies\n            const itemId = item.getId();\n            if
            (itemCats[itemId] != null) {\n                itemCats[itemId].push(cat);\n                itemValues[itemId].push(values[idx]);\n            }
            else {\n                itemCats[itemId] = [cat];\n                itemValues[itemId]
            = [values[idx]];\n            }\n            itemDependencies.forEach(itemDependency
            => {\n                const from = itemDependency.get(TYPE_DEPENDENCY.ATTR.B);\n                if
            (from && isPageOfTypeCapability(from)) {\n                    depends.push({
            to: item, from: from, dependency: itemDependency });\n                }\n            });\n        });\n    });\n});\n\n//
            Manually add categories for missing ARTs and iterations (if no capability
            is in there, they were not added so far)\ncplace.each(allPeriods, period
            => {\n    let name = period.getName();\n    let url = period.getUrl();\n    let
            catX = [\n        (name == null ? '' '' : name)\n    ];\n    categoriesHorizontal
            = addCategories(categoriesHorizontal, catX, 1, period, null, null, (url
            == null ? '' '' : url));\n});\ncplace.each(allPrograms, program => {\n    let
            name = program.getName();\n    let url = program.getUrl();\n    let catY
            = [\n        (name == null ? '' '' : name)\n    ];\n    categoriesVertical
            = addCategories(categoriesVertical, catY, 1, null, null, null, (url ==
            null ? '' '' : url));\n})\n\n// Add categories as swimlanes for the releases
            and SAFe milestones\n// categoriesVertical = addCategories(categoriesVertical,
            [''Releases''], 1, null, COLORS.RELEASE_PLOTBAND, 0, releasesLink);\ncategoriesVertical
            = addCategories(categoriesVertical, [CATEGORY.SAFE_MILESTONE], 1, null,
            COLORS.MILESTONE_PLOTBAND, 0, piManagementLink);\n\nlog(''result H: ''
            + JSON.stringify(categoriesHorizontal));\nlog(''result V: '' + JSON.stringify(categoriesVertical));\nlog(''keys:
            '' + JSON.stringify(keys));\nlog(''values: '' + JSON.stringify(values));\nlog(''depends:
            '' + JSON.stringify(depends));\nlog(''itemCats: '' + JSON.stringify(itemCats));\n\n//--------------------------------------------------------------------------------------//\n//                                       BUSINESS
            FUNCTIONS                             //\n//--------------------------------------------------------------------------------------//\n/**\n
            * Determines the periods used as columns of the board\n * @param {Page[]}
            items Capabilities\n * @returns {Page[]} Iterations in chronological order\n
            */\nfunction getAllPeriods(items) {\n    const periodsSet = new HashSet();\n    items.forEach(item
            => {\n        const pi = item.get(TYPE_CAPABILITY.ATTR.PROGRAM_INCREMENT);\n        if
            (!pi) {\n            return;\n        }\n        const iterations = pi.getIncomingPagesFromAllSpaces(TYPE_ITERATION.TYPE,
            TYPE_ITERATION.ATTR.PROGRAM_INCREMENT);\n        cplace.each(iterations,
            iteration => {\n            periodsSet.add(iteration);\n        });\n    });\n    const
            periods = Array.from(periodsSet);\n    return periods.sort((a, b) => a.get(TYPE_ITERATION.ATTR.START).isBefore(b.get(TYPE_ITERATION.ATTR.START))
            ? -1 : 1);\n}\n\n/**\n * Determines all programs/ARTs that are included
            in the input data.\n * These elements are used to define the rows of the
            boards\n * @param {Page[]} items\n * @returns {Page[]} Programs\n */\nfunction
            getPrograms(items) {\n    const programSet = new HashSet();\n    items.forEach(item
            => {\n        const programs = item.get(TYPE_CAPABILITY.ATTR.PROGRAM);\n        if
            (!programs) {\n            return;\n        }\n        cplace.each(programs,
            program => programSet.add(program));\n    });\n    return Array.from(programSet);\n}\n\n/**\n
            * Searches dependencies of the items and returns those that are not yet
            included\n * @param {Page[]} items\n * @return {Page[]}\n */\nfunction
            getMissingDependencies(items) {\n    const dependencies = new HashSet();\n    items.forEach(item
            => {\n        const itemDependencies = Array.from(item.getIncomingPages(TYPE_DEPENDENCY.TYPE,
            TYPE_DEPENDENCY.ATTR.A) || []);\n        itemDependencies.forEach(itemDependency
            => {\n            const dependency = itemDependency.get(TYPE_DEPENDENCY.ATTR.B);\n            if
            (isPageOfTypeCapability(dependency)) {\n                dependencies.add(dependency);\n            }\n        });\n    });\n    return
            Array.from(dependencies).filter(a => !items.some(b => b.getId() === a.getId()));\n}\n\n/**\n
            * Determines the last iteration\n * @param {Page} item Category\n */\nfunction
            getLastIteration(item) {\n    const iterations = Array.from(item.get(TYPE_CAPABILITY.ATTR.TEMP_ITERATIONS));\n    //
            log(`Found ${iterations.length} iterations for item \"${item.getName()}\"`);\n    //
            TODO Use references of features to iterations once the data (model) is
            cleared\n    // const features = item.get(TYPE_CAPABILITY.ATTR.FEATURES);\n    //
            const iterationsSet = new HashSet();\n    // cplace.each(features, feature
            => {\n    //     const featureIterations = feature.get(TYPE_FEATURE.ATTR.ITERATIONS);\n    //     cplace.each(featureIterations,
            iteration => {\n    //         iterationsSet.add(iteration);\n    //     });\n    //
            });\n    //const iterations = Array.from(iterationsSet);\n    //log(`Found
            ${Iterables.size(features)} features and ${iterations.length} iterations
            for item \"${item.getName()}\"`);\n    let lastIteration = iterations.length
            > 0 ? iterations[0] : null;\n    iterations.forEach(iteration => {\n        if
            (lastIteration.get(TYPE_ITERATION.ATTR.END).isBefore(iteration.get(TYPE_ITERATION.ATTR.END)))
            {\n            lastIteration = iteration;\n        }\n    });\n    log(`Found
            ${iterations.length} iterations for item \"${item.getName()}\"`);\n    if
            (lastIteration) {\n        log(`Last iteration \"${lastIteration.getName()}\"
            ending ${lastIteration.get(TYPE_ITERATION.ATTR.END).toString()}`);\n    }\n    return
            lastIteration;\n}\n\n// helper function - insert new category into data
            structure (recursively)\nfunction addCategories(categories, names, level,
            iteration, color, order, link) {\n    // pop first name from stack and
            search\n    const categoryName = names.shift();\n    const idx = categories.names.indexOf(categoryName);\n    if
            (idx < 0) {\n        // not found yet -> insert new category name\n        let
            inserted = false;\n        const newOrder = sortOrders.indexOf(categoryName);\n        //
            now loop all current names and insert at right position (ordered!)\n        if
            (order != null) {\n            categories.names.forEach(cat => {\n                let
            currOrder = sortOrders.indexOf(cat);\n                if ((!inserted &&
            newOrder >= 0 && currOrder >= 0 && newOrder < currOrder)\n                    ||
            (!inserted && newOrder >= 0 && currOrder < 0) // if order of new category
            is specified and others are not\n                    || (!inserted &&
            categoryName !== '''' && categoryName < cat)) {\n                    categories.names.splice(order,
            0, categoryName);\n\n                    // If there is an iteration,
            add StartDate and Enddate at catIdx Position\n                    categories.startDates.splice(order,
            0, (iteration ? iteration.get(TYPE_ITERATION.ATTR.START) : null));\n                    categories.endDates.splice(order,
            0, (iteration ? iteration.get(TYPE_ITERATION.ATTR.END) : null));\n\n                    //
            If there is a color, add it at catIdx Position\n                    categories.colors.splice(order,
            0, (color ? color : null));\n\n                    // Add link for the
            category\n                    categories.links.splice(order, 0, (link
            ? link : null));\n\n                    if (names.length > 0) {\n                        //
            If there is more to check, go one level deeper\n                        categories.subs.splice(order,
            0, addCategories({\n                            names: [],\n                            subs:
            [],\n                            startDates: [],\n                            endDates:
            [],\n                            colors: [],\n                            links:
            []\n                        }, names, level + 1, iteration, color, link));\n                    }\n                    inserted
            = true;\n                }\n            });\n        } else {\n            categories.names.forEach((cat,
            catIdx) => {\n                let currOrder = sortOrders.indexOf(cat);\n                if
            ((!inserted && newOrder >= 0 && currOrder >= 0 && newOrder < currOrder)\n                    ||
            (!inserted && categoryName !== '''' && categoryName < cat)) {\n                    categories.names.splice(catIdx,
            0, categoryName);\n\n                    // if there is an iteration,
            add StartDate and Enddate at catIdx Position\n                    categories.startDates.splice(catIdx,
            0, (iteration ? iteration.get(TYPE_ITERATION.ATTR.START) : null));\n                    categories.endDates.splice(catIdx,
            0, (iteration ? iteration.get(TYPE_ITERATION.ATTR.END) : null));\n\n                    //
            if there is a color, add it at catIdx Position\n                    categories.colors.splice(catIdx,
            0, (color ? color : null));\n\n                    // add link for the
            category\n                    categories.links.splice(catIdx, 0, (link
            ? link : null));\n\n                    if (names.length > 0) {\n                        //
            if there is more to check, go one level deeper\n                        categories.subs.splice(catIdx,
            0, addCategories({\n                            names: [],\n                            subs:
            [],\n                            startDates: [],\n                            endDates:
            [],\n                            colors: [],\n                            links:
            []\n                        }, names, level + 1, iteration, color, link));\n                    }\n                    inserted
            = true;\n                }\n            });\n        }\n        // nothing
            found -> add as last element in array\n        if (!inserted) {\n            log(''Category
            not inserted'');\n            categories.names.push(categoryName);\n\n            //
            there is an iteration, push new StartDate and Enddate\n            categories.startDates.push((iteration
            ? iteration.get(TYPE_ITERATION.ATTR.START) : null));\n            categories.endDates.push((iteration
            ? iteration.get(TYPE_ITERATION.ATTR.END) : null));\n\n            // if
            there is a color, add it at catIdx Position\n            categories.colors.push((color
            ? color : null));\n\n            // add link for the category\n            categories.links.push((link
            ? link : null));\n\n            if (names.length > 0) {\n                //
            if there is more to check, go one level deeper\n                categories.subs.push(addCategories({\n                    names:
            [],\n                    subs: [],\n                    startDates: [],\n                    endDates:
            [],\n                    colors: [],\n                    links: []\n                },
            names, level + 1, iteration, color, link));\n            }\n        }\n    }
            else {\n        // found -> just go one level deeper\n        if (names.length
            > 0) {\n            // if there is more to check, go one level deeper\n            categories.subs[idx]
            = addCategories(categories.subs[idx], names, level + 1, iteration, color);\n        }\n    }\n    return
            categories;\n}\n\n// now build up highcharts data series\nconst series
            = [];\n\n// helper function - count (sub-) categories to derive x- and
            y-offsets (recursively)\nfunction countCategories(categories, xOffset,
            yOffset, level, maxLevel, dir) {\n    let cnt = 0;\n    // starting coordinate
            (depending on direction, vertical/horizontal)\n    if (dir === ''H'')
            {\n        categories.start = xOffset;\n    } else {\n        categories.start
            = yOffset;\n    }\n\n    // loop all category names\n    categories.names.forEach((name,
            idx) => {\n        let subCnt = 1;\n        // go one level deeper, if
            there is more, and add up sub-categories\n        if (categories.subs
            && idx < categories.subs.length) {\n            categories.subs[idx] =
            countCategories(categories.subs[idx], xOffset, yOffset, level + 1, maxLevel,
            dir);\n            subCnt = categories.subs[idx].cnt;\n        }\n\n        //
            calc coordinates\n        let colSize = 1;//(level == maxLevel ? maxCols
            : 1);\t\t// last level will be size 2x1\n        let rowSize = 1;//(level
            == maxLevel ? maxRows : 1);\t\t// last level will be size 1x2\n        let
            rotation = 0;\n        let x = xOffset;\n        let y = yOffset;\n        let
            color = categories.colors[idx] !== null ? categories.colors[idx] : catColors[level];
            //''#ffffff'';\t\t// coloring by level\n        let fontColor = ''#000000'';\n        if
            (dir === ''H'') {\n            // horizontal categories\n            colSize
            = subCnt;\t\t\t\t\t\t\t\t// span multiple columns\n            rotation
            = 0;                                 // no rotation (level == maxLevel
            ? -90 : 0);\t\t// rotate only on max level\n            x += (subCnt -
            1) / 2;\n            y += level + (level === maxLevel ? (maxRows - 1)
            / 2.0 : 0);\n            //color = catColorsH[1+xOffset%2];\t\t\t\t//
            alternating colors from config object (1 or 2)\n            //fontColor
            = catColorsH[0];\t\t\t\t\t// first color from config object\n        }
            else {\n            // vertical categories\n            rowSize = subCnt;\t\t\t\t\t\t\t\t//
            span multiple rows\n            rotation = (level === maxLevel ? 0 : -90);\t\t//
            rotate all but max level\n            x += level + (level === maxLevel
            ? (maxCols - 1) / 2.0 : 0);\n            y += (subCnt - 1) / 2;\n            //color
            = catColorsV[1+yOffset%2];\t\t\t\t// alternating colors from config object
            (1 or 2)\n            //fontColor = catColorsV[0];\t\t\t\t\t// first color
            from config object\n        }\n\n        // Find link to the page the
            category should lead to\n        let link = categories.links[idx];\n\n        if
            (name != null && name.length > 1) {\n            // now add categories
            cell to series\n            series.push({\n                name: name,\n                colsize:
            colSize,\n                rowsize: rowSize,\n                dataLabels:
            { rotation: rotation, color: fontColor },\n                enableMouseTracking:
            false,\n                data: [{ x: x, y: y, value: level, name: ''<a
            href=\"'' + link + ''\">'' + name + ''</a>'', color: color }]\n            });\n        }\n\n        //
            update coordinates\n        if (dir === ''H'') {\n            xOffset
            += subCnt;\n        } else {\n            yOffset += subCnt;\n        }\n        cnt
            += subCnt;\n    });\n    categories.cnt = cnt;\n    categories.end = categories.start
            + cnt;\n    return categories;\n}\n\n\n// helper function - maximum depth
            of categories\nfunction findMaxLevel(categories, level) {\n    let maxLevel
            = level;\n    if (categories.subs) {\n        categories.subs.forEach(sub
            => {\n            maxLevel = findMaxLevel(sub, level + 1);\n        });\n    }\n    return
            maxLevel;\n}\n\n// find maximum depth in both directions\nlet maxLevelV
            = findMaxLevel(categoriesVertical, 1);\nlet maxLevelH = findMaxLevel(categoriesHorizontal,
            1);\n\n// count and build series objects for categories\ncategoriesVertical
            = countCategories(categoriesVertical, 0, maxLevelH + maxRows, 1, maxLevelV,
            ''V'');\n//let maxOffsetV = categoriesVertical.cnt;\ncategoriesHorizontal
            = countCategories(categoriesHorizontal, maxLevelV + maxCols, 0, 1, maxLevelH,
            ''H'');\n//let maxOffsetH = categoriesHorizontal.cnt;\n\nlog(''result
            H: '' + JSON.stringify(categoriesHorizontal));\nlog(''result V: '' + JSON.stringify(categoriesVertical));\n\n\nconst
            maxValue = Math.max(...values);\n\n// finally add cells for each value
            of the matrix\n// loop all keys (= joined category for both axes)\nkeys.forEach((key,
            idx) => {\n    // split key into categories and names\n    const cat =
            key.split(SEPARATOR.V);\n    const catX = cat[0].split(SEPARATOR.H);\n    const
            catY = cat[1].split(SEPARATOR.H);\n    const x = findCategory(categoriesHorizontal,
            catX);\n    const y = findCategory(categoriesVertical, catY);\n\n    let
            val = values[idx];\n\n    // special build up name of cell for tooltip\n    let
            name = ''<b>'' + key + ''</b><br>'';\n\n    const data = [];\n    let
            offset = -0.4 + 0.4 / maxValue;\n    for (let n = 0; n < val; n++) {\n        let
            mapKey = n + 1;\n        data.push({\n            x: x,\n            y:
            y + offset,\n            value: n,\n            name: nameMap.get(key
            + mapKey),\n            shortName: shortNameMap.get(key + mapKey),\n            color:
            colorMap.get(key + mapKey),\n            title: titleMap.get(key + mapKey)\n        });\n        offset
            += 0.8 / maxValue;\n    }\n\n    // add series for new data value (= single
            cell in matrix) ///TO DO: linking with same capability in other program
            swimlane\n    series.push({\n        name: tooltips[idx].join(''<br>''),\n        colsize:
            0.8,\n        rowsize: 0.7 / maxValue, //1,\n        pointPadding: 0,\n        borderRadius:
            0, //25,\n        borderWidth: 1,\n        borderColor: ''rgba(0,0,0,0)'',\n        dataLabels:
            {\n            enabled: true,\n            color: ''#000000'',\n            format:
            ''{point.shortName}''\n        },\n        enableMouseTracking: true,\n        data:
            data //[{ x: x, y: y, value: val, name: val, color: color }]\n    });\n});\n\n\n//
            helper function - evaluate coordinates of given key (= category along
            both axes)\nfunction findCategory(categories, names) {\n    const categoryName
            = names.shift();\n    const idx = categories.names.indexOf(categoryName);\n    if
            (names.length > 0 && idx >= 0 && categories.subs && categories.subs.length
            > 0) {\n        return findCategory(categories.subs[idx], names);\n    }\n    return
            categories.start + idx;\n}\n\n// Iterate through all dependencies in order
            to draw them\ndepends.forEach(depend => {\n    const fromId = depend.from.getId();\n    const
            toId = depend.to.getId();\n    // split key into categories and names\n    const
            fromCats = itemCats[fromId];\n    if (!fromCats) {\n        return;\n    }\n    fromCats.forEach((fromCat,
            idx1) => {\n        const cat1 = fromCat.split(SEPARATOR.V);\n        const
            catX1 = [cat1[0]];//.split(\" - \");\n        //catX1.push(cat1[0]);\n        const
            catY1 = [cat1[1]];//.split(\" - \");\n        //catY1.push(cat1[1]);\n        const
            x1 = findCategory(categoriesHorizontal, catX1);\n        let y1 = findCategory(categoriesVertical,
            catY1);\n        y1 += -0.4 + 0.4 / maxValue + (itemValues[depend.from.getId()][idx1]
            - 1) * 0.8 / maxValue;\n\n        const toCats = itemCats[toId];\n        if
            (!toCats) {\n            // Dependency is not included in diagram scope
            and cannot be drawn\n            return;\n        }\n        toCats.forEach((toCat,
            idx2) => {\n            const cat2 = toCat.split(SEPARATOR.V);\n            const
            catX2 = [cat2[0]];\n            const catY2 = [cat2[1]];\n            const
            x2 = findCategory(categoriesHorizontal, catX2);\n            let y2 =
            findCategory(categoriesVertical, catY2);\n            y2 += -0.4 + 0.4
            / maxValue + (itemValues[depend.to.getId()][idx2] - 1) * 0.8 / maxValue;\n            const
            description = depend.dependency.get(TYPE_DEPENDENCY.ATTR.DESCRIPTION)
            || '' '';\n            const dependencyType = depend.dependency.get(TYPE_DEPENDENCY.ATTR.TYPE);\n            const
            status = depend.dependency.get(TYPE_DEPENDENCY.ATTR.STATUS);\n\n            const
            dependencySeries = {\n                type: ''spline'',\n                name:
            ''<b>'' + depend.to.getName() + ''</b><br/>relates to:<br/>'' + depend.from.getName()
            + ''<br>'' + description,\n                lineWidth: 1.5,\n                color:
            COLORS.DEPEND,\n                dashStyle: ''shortdot'',\n                findNearestPointBy:
            ''xy'',\n                data: [\n                    { x: x1 + 0.4, y:
            y1 },\n                    { x: x1 + 0.45, y: (y1 === y2 ? y1 + 0.02 :
            y1) },\n                    { x: x2 - 0.45, y: (y1 === y2 ? y2 - 0.02
            : y2) },\n                    { x: x2 - 0.4, y: y2, marker: { enabled:
            true, symbol: ''diamond'' } }\n                ]\n            };\n            if
            (dependencyType === TYPE_DEPENDENCY.ENUM.TYPE.BLOCKED_BY) {\n                dependencySeries.name
            = ''<b>'' + depend.to.getName() + ''</b><br/>blocked by:<br/>'' + depend.from.getName()
            + ''<br>'' + description;\n                dependencySeries.dashStyle
            = null;\n            }\n            if (status === TYPE_DEPENDENCY.ENUM.STATUS.CONFLICT)
            {\n                dependencySeries.color = COLORS.DEPEND_HIGHLIGHT;\n            }
            else if (status === TYPE_DEPENDENCY.ENUM.STATUS.RESOLVED) {\n                dependencySeries.color
            = COLORS.DEPEND_RESOLVED;\n            }\n            series.push(dependencySeries);\n        });\n    });\n});\n\n\n//
            Add releases\n// let releaseDateSearch = new Search();\n// releaseDateSearch.add(Filters.embeddingSpace());\n//
            releaseDateSearch.add(Filters.type(TYPE_RELEASE.TYPE));\n// releaseDateSearch.add(Filters.customAttribute(RELEASE.ATTR.PROGRAM).references(solution));\n//
            let releases = releaseDateSearch.findAllPages();\n//  let releaseData
            = [];\n//\n// cplace.each(releases, function (release) {\n//     let releaseName
            = release.getName();\n//     let releaseDate = release.get(RELEASE.ATTR.DATE);\n//     let
            releaseDateString = releaseDate.toString(''dd.MM.yyyy'');\n//     // get
            release Position\n//     let releasePosition = getDatePosition(releaseDate.getMillis());\n//     //
            add release only if releasePosition is not null\n//     if (releasePosition
            > 0) {\n//         releaseData.push({\n//             x: releasePosition,\n//             y:
            2,\n//             name: ''<a href=\"'' + release.getUrl() + ''\">'' +
            releaseName + ''</a>'',\n//             value: releaseDateString\n//         });\n//     }\n//
            });\n//\n// series.push({\n//     type: ''scatter'',\n//     lineWidth:
            0,\n//     findNearestPointBy: ''xy'',\n//     data: releaseData,\n//     marker:
            {\n//         fillColor: COLORS.RELEASE\n//     }\n// });\n\n// Add SAFe
            milestones\nconst periodStartDate = allPeriods.length > 0 ? allPeriods[0].get(TYPE_ITERATION.ATTR.START)
            : new DateTime();\nconst periodEndDate = allPeriods.length > 0 ? allPeriods[allPeriods.length
            - 1].get(TYPE_ITERATION.ATTR.END) : new DateTime();\nconst safeMilestoneSearch
            = new Search();\nsafeMilestoneSearch.add(Filters.embeddingSpace());\nsafeMilestoneSearch.add(Filters.type(TYPE_MILESTONE.TYPE));\nsafeMilestoneSearch.add(Filters.customAttribute(TYPE_MILESTONE.ATTR.DATE).gte(periodStartDate));\nsafeMilestoneSearch.add(Filters.customAttribute(TYPE_MILESTONE.ATTR.DATE).lte(periodEndDate));\nconst
            safeMilestones = safeMilestoneSearch.findAllPages();\nconst safeMilestoneData
            = [];\n\nlog(''Milestones: '' + safeMilestones.length);\n\ncplace.each(safeMilestones,
            safeMilestone => {\n    const safeMilestoneName = safeMilestone.getName();\n    const
            safeMilestoneDate = safeMilestone.get(TYPE_MILESTONE.ATTR.DATE);\n    const
            safeMilestoneDateString = safeMilestoneDate.toString(''dd.MM.yyyy'');\n    //
            get milestone Position\n    const safeMilestonePosition = getDatePosition(safeMilestoneDate.getMillis());\n    //
            add milestone only if position is not null\n    if (safeMilestonePosition
            > 0) {\n        safeMilestoneData.push({\n            x: safeMilestonePosition,\n            y:
            2,\n            name: ''<a href=\"'' + safeMilestone.getUrl() + ''\">''
            + safeMilestoneName + ''</a>'',\n            value: safeMilestoneDateString\n        });\n    }\n});\n\nseries.push({\n    type:
            ''scatter'',\n    lineWidth: 0,\n    findNearestPointBy: ''xy'',\n    data:
            safeMilestoneData,\n    marker: {\n        fillColor: COLORS.SAFE_MILESTONE\n    }\n});\n\n//define
            today line position\nconst today = new DateTime();\nlet todayPosition
            = getDatePosition(today.getMillis());\n\n\n//helper function for finding
            milestone/today line position\nfunction getDatePosition(date) {\n    let
            xPosition = 0;\n    categoriesHorizontal.names.every((categoryName, idx)
            => {\n        let categoryStartDate = categoriesHorizontal.startDates[idx].getMillis();\n        let
            categoryEndDate = categoriesHorizontal.endDates[idx].getMillis();\n        //
            Check whether release date lies in between start and end date of category\n        if
            (date >= categoryStartDate && date <= categoryEndDate) {\n            //
            find x-Value of category and substract 0.5 for starting point as offset\n            let
            x = findCategory(categoriesHorizontal, [categoryName]) - 0.5;\n            //
            calculate the relative position of date between Category StartDate and
            EndDate and add it to the offset value\n            xPosition = x + (date
            - categoryStartDate) / (categoryEndDate - categoryStartDate);\n            //
            exit the every loop\n            return false;\n        }\n        //
            continue the every loop\n        return true;\n    });\n    // if there
            was no match, just return null\n    return xPosition;\n}\n\n\n// Build
            the Highcharts configuration object\nconst chart = {\n    chart: {\n        type:
            ''heatmap'',\n        marginTop: 0,\n        marginBottom: 0,\n        plotBorderWidth:
            0\n    },\n    title: {\n        text: null\n    },\n    xAxis: {\n        categories:
            [],\n        title: null,\n        gridLineWidth: 0,\n        lineWidth:
            0,\n        labels: {\n            enabled: false\n        },\n        //min:
            -1,\n        //max: Math.max(categoriesVertical.end,categoriesHorizontal.end)-1\n        plotLines:
            [{\n            dashStyle: ''dash'',\n            color: COLORS.TODAY_PLOTLINE,\n            width:
            2,\n            value: todayPosition,\n            zIndex: 1\n        }]\n    },\n    yAxis:
            {\n        categories: [],\n        title: null,\n        gridLineWidth:
            0,\n        lineWidth: 0,\n        labels: {\n            enabled: false\n        },\n        reversed:
            true,\n        // min: -1,\n        // max: Math.max(categoriesVertical.end,
            categoriesHorizontal.end) - 1,\n        plotBands: [\n            {\n                color:
            COLORS.MILESTONE_PLOTBAND,\n                borderColor: ''white'',\n                borderWidth:
            2,\n                from: 1.5,\n                to: 2.5,\n                zIndex:
            0\n            }\n            // {\n            //     color: COLORS.RELEASE_PLOTBAND,\n            //     borderColor:
            ''white'',\n            //     borderWidth: 2,\n            //     from:
            1.5,\n            //     to: 2.5,\n            //     zIndex: 0\n            //
            }\n        ]\n    },\n    colors: [''#D5001C'', ''#92D050''],\n    colorAxis:
            {\n        dataClassColor: ''category'',\n        dataClasses: [{\n            to:
            0.5\n        }, {\n            from: 0.5\n        }]\n    },\n    legend:
            {\n        enabled: false\n    },\n    tooltip: {\n        useHTML: true,\n        followPointer:
            false\n    },\n    plotOptions: {\n        series: {\n            borderColor:
            ''#ffffff'',\n            borderWidth: 2,\n            dataLabels: {\n                allowOverlap:
            false,\n                inside: true,\n                crop: true,\n                overflow:
            ''justify'',\n                position: ''left'',\n                shape:
            ''circle'',\n                enabled: true,\n                color: ''#000000'',\n                format:
            ''{point.name}'',\n                style: {\n                    textOutline:
            ''none'',\n                    textOverflow: ''clip''\n                }\n            },\n            stickyTracking:
            false,\n            tooltip: {\n                headerFormat: '''',\n                pointFormat:
            ''<b>{point.name}</b>'',\n                findNearestPointBy: ''xy'',\n            },\n            states:
            {\n                inactive: {\n                    opacity: 1\n                }\n            }\n        },\n        spline:
            {\n            tooltip: {\n                headerFormat: ''{series.name}'',\n                pointFormat:
            '''',\n                findNearestPointBy: ''xy'',\n            },\n            marker:
            {\n                enabled: false,\n                fillColor: COLORS.DEPEND,\n                radius:
            6,\n                states: {\n                    hover: {\n                        enabled:
            false\n                    }\n                }\n            }\n        },\n        scatter:
            {\n            tooltip: {\n                headerFormat: '''',\n                pointFormat:
            ''<b>{point.name}</b><br>{point.value}'',\n                findNearestPointBy:
            ''xy''\n            },\n            dataLabels: {\n                enabled:
            true\n            },\n            marker: {\n                enabled:
            true,\n                symbol: ''diamond'',\n                radius: 10,\n                states:
            {\n                    hover: {\n                        enabled: true\n                    }\n                }\n            }\n        }\n    },\n    series:
            series\n};\n\n// noinspection JSAnnotator\nreturn chart;\n\n//--------------------------------------------------------------------------------------//\n//                                       HELPER
            FUNCTIONS                               //\n//--------------------------------------------------------------------------------------//\n\nfunction
            isPageOfTypeCapability(page) {\n    return page.getBuiltinFeatureValue(''customType'')
            === TYPE_CAPABILITY.TYPE;\n}\n\n/**\n * Log to cplace\n * @param {any}
            text\n */\nfunction log(text) {\n    if (!DEBUG) {\n        return;\n    }\n    const
            logOutput = (typeof text !== ''string'') ? JSON.stringify(text) : text;\n    cplace.log(logOutput);\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: height
          value: d300
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: "m{\"de\":\"Abh\xE4ngigkeiten Visualisierung\",\"en\":\"Dependency\
            \ Visualization\"}"
        collapsed: false
        id: _msnezaz4sb1ppwzhjfojp97do
        widgetType: cf.cplace.visualizations.scriptingHighcharts
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.successor'","visible":true},{"name":"'cf.cplace.solution.safe.type'","visible":true},{"name":"'cf.cplace.solution.safe.predecessor'","visible":true},{"name":"'cf.cplace.solution.safe.status'","visible":true},{"name":"'cf.cplace.solution.safe.description'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.status'
        - name: groupOrder
          value: sasc
        - name: height
          value: d300
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.dependency"]},{"relativeSpace":"true"},{"relativeCustomReference":"cf.cplace.solution.safe.successor","referenceOperator":"embeddingCustomEntity"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"de\":\"Abh\xE4ngigkeiten der Capability\",\"en\":\"Dependencies\
            \ of the capability\"}"
        collapsed: false
        id: _zaamdvdghxpjyzf1ybe4571dv
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 6
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.successor'","visible":true},{"name":"'cf.cplace.solution.safe.type'","visible":true},{"name":"'cf.cplace.solution.safe.predecessor'","visible":true},{"name":"'cf.cplace.solution.safe.status'","visible":true},{"name":"'cf.cplace.solution.safe.description'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.status'
        - name: groupOrder
          value: sasc
        - name: height
          value: d300
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.dependency"]},{"relativeSpace":"true"},{"relativeCustomReference":"cf.cplace.solution.safe.predecessor","referenceOperator":"embeddingCustomEntity"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Artifacts with dependencies to this capability","en":"Artifacts
            with dependencies to this capability"}
        collapsed: false
        id: _7b3f0ptp7xfvw1n66bifd8ntq
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: attributeName
          value: scf.cplace.solution.safe.description
        - name: cf.cplace.customRichStringAttribute.showFrame
          value: btrue
        collapsed: false
        id: id_qewrpspoucrmuhpprd7tqthhp
        widgetType: cf.platform.customRichStringAttribute
      - attributes:
        - name: attributeName
          value: scf.cplace.solution.safe.benefitHypothesis
        - name: cf.cplace.customRichStringAttribute.showFrame
          value: btrue
        collapsed: false
        id: id_gb0w94m7yybcm8zkw0orpar0c
        widgetType: cf.platform.customRichStringAttribute
      - attributes:
        - name: attributeName
          value: scf.cplace.solution.safe.acceptanceCriteria
        - name: cf.cplace.customRichStringAttribute.showFrame
          value: btrue
        collapsed: false
        id: id_s4b0wrx0kot2j0kj4sstegjtw
        widgetType: cf.platform.customRichStringAttribute
- rows:
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: content
          value: "r<table border=\"0\" cellpadding=\"1\" cellspacing=\"1\" style=\"\
            width: 100%\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<h4 style=\"background-color:\
            \ rgb(220, 220, 220); border-radius: 4px; border: 1px solid transparent;\
            \ color: rgb(118, 118, 118); font-size: 14px; margin-bottom: 20px; padding:\
            \ 10px\">Definition of Ready:</h4>\n\t\t\t</td>\n\t\t\t<td style=\"text-align:\
            \ left; vertical-align: middle; width: 20%\"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3hrdjhyM3c5MWU3NzU1ZTJobjdpODV0c20iLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0uc2luZ2xlQXR0cmlidXRlIiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLnBsYXRmb3JtLmluUGxhY2VFZGl0aW5nIiwidmFsdWVzIjpbeyJib29sZWFuIjp0cnVlfV19LHsibmFtZSI6ImNmLnBsYXRmb3JtLmxvY2FsaXplZEFsdGVybmF0aXZlTGFiZWwiLCJ2YWx1ZXMiOlt7ImxvY2FsaXplZFN0cmluZyI6IntcImVuXCI6XCJDb25maXJtZWRcIixcImRlXCI6XCJCZXN0w6R0aWd0XCJ9In1dfSx7Im5hbWUiOiJjZi5wbGF0Zm9ybS5xdW90ZWRBdHRyaWJ1dGVOYW1lIiwidmFsdWVzIjpbeyJzdHJpbmciOiInY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVmaW5pdGlvbk9mUmVhZHknIn1dfSx7Im5hbWUiOiJjZi5wbGF0Zm9ybS5yZWxvYWRBZnRlckNoYW5nZSIsInZhbHVlcyI6W3siYm9vbGVhbiI6ZmFsc2V9XX0seyJuYW1lIjoiY2YucGxhdGZvcm0uc2luZ2xlQ29sdW1uIiwidmFsdWVzIjpbeyJib29sZWFuIjp0cnVlfV19LHsibmFtZSI6ImNmLnBsYXRmb3JtLnVzZVBhcmVudCIsInZhbHVlcyI6W3siYm9vbGVhbiI6ZmFsc2V9XX0seyJuYW1lIjoiY2YucGxhdGZvcm0ud2l0aExhYmVsIiwidmFsdWVzIjpbeyJib29sZWFuIjp0cnVlfV19LHsibmFtZSI6ImNmLnBsYXRmb3JtLndpdGhWYWx1ZSIsInZhbHVlcyI6W3siYm9vbGVhbiI6dHJ1ZX1dfV19</embeddedwidget></td>\n\
            \t\t</tr>\n\t</tbody>\n</table>\n\n<ul>\n\t<li>Capability is Well-Defined:\
            \ A capability must be well-defined and clear, with acceptance criteria\
            \ that are specific and measurable.</li>\n\t<li>Dependencies Identified:\
            \ All dependencies must be identified and resolved before the capability\
            \ can be accepted into the sprint.</li>\n\t<li>Acceptance Criteria: The\
            \ acceptance criteria for the capability must be agreed upon by the team,\
            \ and they should be specific, measurable, and achievable.</li>\n\t<li>Story\
            \ Points: The capability should be estimated in story points, which is\
            \ an estimation technique used in Agile development to indicate the relative\
            \ effort required to implement a capability.</li>\n\t<li>Design and Architecture:\
            \ The design and architecture of the solution must be reviewed and approved\
            \ by the architecture team.</li>\n\t<li>Testability: The capability must\
            \ be testable, and the team must have a plan in place to test it thoroughly.</li>\n\
            </ul>"
        - name: localizedWidgetTitle
          value: m{"de":"DoR criteria","en":"DoR criteria"}
        collapsed: false
        id: _6960f92mk2378dybmgayt29ka
        widgetType: cf.cplace.demoWidgets.demoRichString
    - proportion: 6
      widgets:
      - attributes:
        - name: content
          value: "r<table border=\"0\" cellpadding=\"1\" cellspacing=\"1\" style=\"\
            width: 100%\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<h4 style=\"background-color:\
            \ rgb(220, 220, 220); border-radius: 4px; border: 1px solid transparent;\
            \ color: rgb(118, 118, 118); font-size: 14px; margin-bottom: 20px; padding:\
            \ 10px\">Definition of Done:</h4>\n\t\t\t</td>\n\t\t\t<td style=\"text-align:\
            \ left; vertical-align: middle; width: 20%\"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX25kOWNyMXpycDg0OGhoeDhtcTc2emozZW8iLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0uc2luZ2xlQXR0cmlidXRlIiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLnBsYXRmb3JtLmluUGxhY2VFZGl0aW5nIiwidmFsdWVzIjpbeyJib29sZWFuIjp0cnVlfV19LHsibmFtZSI6ImNmLnBsYXRmb3JtLmxvY2FsaXplZEFsdGVybmF0aXZlTGFiZWwiLCJ2YWx1ZXMiOlt7ImxvY2FsaXplZFN0cmluZyI6IntcImVuXCI6XCJDb25maXJtZWRcIixcImRlXCI6XCJCZXN0w6R0aWd0XCJ9In1dfSx7Im5hbWUiOiJjZi5wbGF0Zm9ybS5xdW90ZWRBdHRyaWJ1dGVOYW1lIiwidmFsdWVzIjpbeyJzdHJpbmciOiInY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVmaW5pdGlvbk9mRG9uZScifV19LHsibmFtZSI6ImNmLnBsYXRmb3JtLnJlbG9hZEFmdGVyQ2hhbmdlIiwidmFsdWVzIjpbeyJib29sZWFuIjpmYWxzZX1dfSx7Im5hbWUiOiJjZi5wbGF0Zm9ybS5zaW5nbGVDb2x1bW4iLCJ2YWx1ZXMiOlt7ImJvb2xlYW4iOnRydWV9XX0seyJuYW1lIjoiY2YucGxhdGZvcm0udXNlUGFyZW50IiwidmFsdWVzIjpbeyJib29sZWFuIjpmYWxzZX1dfSx7Im5hbWUiOiJjZi5wbGF0Zm9ybS53aXRoTGFiZWwiLCJ2YWx1ZXMiOlt7ImJvb2xlYW4iOnRydWV9XX0seyJuYW1lIjoiY2YucGxhdGZvcm0ud2l0aFZhbHVlIiwidmFsdWVzIjpbeyJib29sZWFuIjp0cnVlfV19XX0</embeddedwidget></td>\n\
            \t\t</tr>\n\t</tbody>\n</table>\n\n<ul>\n\t<li>Code is reviewed and checked\
            \ in to the code repository.</li>\n\t<li>Automated unit tests are written\
            \ and pass successfully.</li>\n\t<li>Code is integrated with the main\
            \ branch.</li>\n\t<li>System and integration tests are run and pass successfully.</li>\n\
            \t<li>Security and performance testing is completed and pass successfully.</li>\n\
            \t<li>Documentation is created and updated, including user guides and\
            \ technical documentation.</li>\n</ul>"
        - name: localizedWidgetTitle
          value: m{"de":"DoD criteria","en":"DoD criteria"}
        collapsed: false
        id: _s2l1wg6i1cov46iic9yb0z1ox
        widgetType: cf.cplace.demoWidgets.demoRichString
- rows:
  - columns:
    - proportion: 4
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"cplace.setLogName(''HC: Prioritization Matrix'')\n\n/**\n
            * Define colors for the chart\n */\n const CHART_LABELS = {\n   XAXIS_TITLE:
            ''<- Cost of Delay ->'',\n   YAXIS_TITLE: ''<- Job Duration ->''\n }\n
            const CHART_COLORS = {\n  PLOTLINES: ''#b5b5b5'',\n  DONT_DO_TEXT: ''#EC7E80'',\n  DO_NEXT_TEXT:
            ''#3A4454'',\n  DO_LATER_TEXT: ''#313C4E'',\n  DO_NOW_TEXT:  ''#7EC587'',\n  ENABLER:
            ''#E6D32B'',\n  FEATURE: ''#0CA2D4'',\n}\n\nconst FEATURE = {\n    ATTR:
            {\n      JOB_SIZE: ''cf.cplace.solution.safe.jobSize'',\n      BUSINESS_VALUE:
            ''cf.cplace.solution.safe.businessValue'',\n      TIME_CRITICALITY: ''cf.cplace.solution.safe.timeCriticality'',\n      RISK_REDUCTION:
            ''cf.cplace.solution.safe.riskReduction'',\n      WSJF: ''cf.cplace.solution.safe.wsjf'',\n      STATUS:
            '''',\n      TYPE: ''cf.cplace.solution.safe.featureType''\n    },\n    ENUM_STATUS:
            {\n\n    },\n    ENUM_TYPE: {\n        ENABLER: ''enabler'',\n        FEATURE:
            ''feature''\n    }\n  }\n\n/*//find colors for types\nlet typeColorConfigurations
            = new Search()\n  .add(Filters.type(''de.visualistik.visualRoadmap.visualRoadmapConfiguration''))\n  .add(Filters.customAttribute(''de.visualistik.visualRoadmap.configurationTypeMap'').eq(''colorMap''))\n  .add(Filters.customAttribute(''de.visualistik.visualRoadmap.propertyKey'').eq(''cf.cplace.solution.safe.type''))\n  .findAllPages();\n\n  cplace.each(typeColorConfigurations,
            configuration => {\n    let values = configuration.get(''de.visualistik.visualRoadmap.propertyKeyValues'');\n    let
            color = configuration.get(''de.visualistik.visualRoadmap.displayedValue'');\n    if
            (values.indexOf(''#15 - Enabler'') > -1){\n      CHART_COLORS.ENABLER
            = color\n    }\n    if (values.indexOf(''#25 - Epic'') > -1){\n      CHART_COLORS.EPIC
            = color\n    }\n  })*/\n\n  const language = cplace.utils().getCurrentUser().getUserLanguage();\n\n/**\n
            * create serie and data items\n */\nlet serie = createBubbleSerie()\nlet
            maxBubbleSize = 0;\n\ncplace.each(pages, function (feature) {\n    let
            z = feature.get(FEATURE.ATTR.WSJF);\n    if (z) {\n        let time =
            feature.get(FEATURE.ATTR.TIME_CRITICALITY);\n        let business = feature.get(FEATURE.ATTR.BUSINESS_VALUE);\n        let
            risk = feature.get(FEATURE.ATTR.RISK_REDUCTION);\n        let x = time
            + business + risk;\n        let jobSize = feature.get(FEATURE.ATTR.JOB_SIZE);\n        let
            y = switchSize(jobSize);\n        let type = feature.get(FEATURE.ATTR.TYPE);\n    \n        if
            (z > maxBubbleSize) {\n            maxBubbleSize = z;\n        }\n        serie.data.push(createDataItem(feature,
            x, y, z, type));\n    }\n});\n\nserie.data.push(createHiddenDataItem(0,
            0, maxBubbleSize));\nserie.data.push(createHiddenDataItem(0, 20, maxBubbleSize));\nserie.data.push(createHiddenDataItem(60,
            0, maxBubbleSize));\nserie.data.push(createHiddenDataItem(60, 20, maxBubbleSize));\n\nlet
            xAxisPlotLines = [];\nlet yAxisPlotLines = [];\n\n// Create quadrant divider\nxAxisPlotLines.push(createQuadrantPlotline(30));\nyAxisPlotLines.push(createQuadrantPlotline(10));\n\n//
            Create labels for each quadrant\nlet label = createLabelPlotline(''DON\\''\\T
            DO'', 0, ''left'',  CHART_COLORS.DONT_DO_TEXT, -10, 37);\nyAxisPlotLines.push(label);\nlabel
            = createLabelPlotline(''DO NEXT'', 0, ''right'',  CHART_COLORS.DO_NEXT_TEXT,
            0, 37);\nyAxisPlotLines.push(label);\nlabel = createLabelPlotline(''DO
            LATER'', 20, ''left'',  CHART_COLORS.DO_LATER_TEXT, -10, -25);\nyAxisPlotLines.push(label);\nlabel
            = createLabelPlotline(''DO NOW'', 20, ''right'',  CHART_COLORS.DO_NOW_TEXT,
            0, -25);\nyAxisPlotLines.push(label);\n\n/**\n * BUILD CHART\n */\nlet
            config = {\n    chart: {\n        type: ''bubble'',\n    },\n\n    legend:
            {\n        enabled: false\n    },\n\n    title: {\n        text: ''''\n    },\n\n    xAxis:
            {\n        title: {\n            text: CHART_LABELS.XAXIS_TITLE\n        },\n        lineWidth:
            0,\n        gridLineWidth: 0,\n        labels: {\n            enabled:
            false\n        },\n        tickWidth: 0,\n        tickInterval: 5,\n        startOnTick:
            false,\n        endOnTick: false,\n        showLastLabel: true,\n        plotLines:
            xAxisPlotLines\n    },\n\n    yAxis: {\n        title: {\n            text:
            CHART_LABELS.YAXIS_TITLE\n        },\n        lineWidth: 0,\n        gridLineWidth:
            0,\n        labels: {\n            enabled: false\n        },\n        tickWidth:
            0,\n        tickInterval: 5,\n        startOnTick: false,\n        endOnTick:
            false,\n        plotLines: yAxisPlotLines\n    },\n\n    tooltip: {\n        useHTML:
            true,\n        headerFormat: '''',\n        pointFormat: ''{point.tooltip}'',\n        style:
            {\n            pointerEvents: ''auto''\n        }\n    },\n\n    plotOptions:
            {\n        bubble: {\n            dataLabels: {\n                enabled:
            false,\n            },\n            minSize: 1,\n            maxSize:
            50\n        }\n    },\n    series: [serie]\n};\n\nreturn config;\n\n/**\n
            * ================\n * HELPER FUNCTIONS\n * ================\n */\n\nfunction
            createBubbleSerie() {\n    return {\n        data: [],\n        marker:
            {\n            fillOpacity: 0.13,\n            lineWidth: 0\n        }\n    };\n}\n\nfunction
            createDataItem(page, x, y, z, type) {\n    let color = getColor(type);\n    let
            rgba = hexToRGBA(color, 0.1);\n    return {\n        name: page.getName(),\n        url:
            page.getUrl(),\n        x: x,\n        y: y,\n        z: z,\n        tooltip:
            getTooltip(page),\n        color: rgba,\n        marker: {\n            lineColor:
            color,\n        },\n        dataLabels: {\n            enabled: true,\n            format:
            ''{point.name}'',\n            style: {\n                textOutline:
            false,\n                color: color\n            }\n        }\n    }\n}\n\nfunction
            getTooltip(page) {\n    let tooltip = ''<a style=\"font-weight:bold\"
            href='' + page.getUrl()+ ''target=\"_blank\">'' + page.getName() + ''</a><br/>''+\n    ''Time
            Criticality: '' + page.get(FEATURE.ATTR.TIME_CRITICALITY) + ''<br/>''
            +\n    ''Business Value: '' + page.get(FEATURE.ATTR.BUSINESS_VALUE) +
            ''<br/>'' +\n    ''Risk Reduction: '' + page.get(FEATURE.ATTR.RISK_REDUCTION)
            + ''<br/>'' +\n    ''Job Size: '' + page.get(FEATURE.ATTR.JOB_SIZE) +
            ''<br/>'' +\n    ''<b> WSJF: '' + page.get(FEATURE.ATTR.WSJF) + ''<br/>'';\n    //''Status:
            '' + page.get(FEATURE.ATTR.STATUS, language) + ''</b>'';\n    return tooltip;\n}\n\nfunction
            createHiddenDataItem(x, y, z) {\n    return {\n        x: x,\n        y:
            y,\n        z: z,\n        enableMouseTracking: false,\n        marker:
            {\n            enabled: false\n        }\n    }\n}\n\nfunction createQuadrantPlotline(value)
            {\n    return {\n        color: CHART_COLORS.PLOTLINES,\n        dashStyle:
            ''solid'',\n        width: 1,\n        value: value,\n        zIndex:
            3\n    }\n}\n\nfunction createLabelPlotline(text, value, align, color,
            xOffset, yOffset) {\n    return {\n        width: 0,\n        value: value,\n        zIndex:
            3,\n        label: {\n            text: text,\n            align: align,\n            style:
            {\n                color: color,\n                fontWeight: ''bold''\n            },\n            x:
            xOffset,\n            y: yOffset\n        }\n    }\n}\n\nfunction hexToRGBA(hex,
            alpha) {\n    let r = parseInt(hex.slice(1, 3), 16),\n        g = parseInt(hex.slice(3,
            5), 16),\n        b = parseInt(hex.slice(5, 7), 16);\n\n    return \"rgba(\"
            + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n}\n\nfunction
            switchSize(size){\n    let switchedSize\n    switch (size) {\n        case
            20:\n            switchedSize = 1;\n            break;\n        case 13:\n            switchedSize
            = 8;\n            break;\n        case 8:\n            switchedSize =
            13;\n            break;\n        case 5:\n            switchedSize = 16;\n            break;\n        case
            3:\n            switchedSize = 18;\n            break;\n        case 2:\n            switchedSize
            = 19;\n            break;\n        case 1:\n            switchedSize =
            20;\n            break;\n    }\n    return switchedSize;\n}\n\nfunction
            getColor(type){\n    switch (type) {\n        case FEATURE.ENUM_TYPE.ENABLER:\n            return
            CHART_COLORS.ENABLER;\n        case FEATURE.ENUM_TYPE.FEATURE:\n            return
            CHART_COLORS.FEATURE\n        default: \n            return ''#b5b5b5''\n    }\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeUid":"embeddingCustomEntity"},{"types":["cf.cplace.solution.safe.capability"]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: height
          value: d400
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"Priorisierungsmatrix","en":"Prioritization Matrix"}
        collapsed: false
        id: id_eyndp0iedscunm5fr9ljjnpf9
        widgetType: cf.cplace.visualizations.scriptingHighcharts
    - proportion: 8
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":4,\"widgets\":[{\"id\":\"id_othqfskfxdw1rm8fpw1cazlr4\",\"collapsed\":false},{\"id\":\"id_tz5gzauz9fujoo9s0fiygvilo\",\"collapsed\":false},{\"id\":\"id_4nhheihluujmuz4uqc6qeg0xj\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_pslmuixi0cmu6j7xx20vq822s\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_380c7vgh13zqe9i1q7guwltqf\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_pslmuixi0cmu6j7xx20vq822s\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.timeCriticality\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_othqfskfxdw1rm8fpw1cazlr4\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.businessValue\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_380c7vgh13zqe9i1q7guwltqf\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.riskReduction\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_tz5gzauz9fujoo9s0fiygvilo\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.jobSize\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_4nhheihluujmuz4uqc6qeg0xj\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.wsjf\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Weighted Shortest Job First","en":"Weighted Shortest Job
            First"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: bfalse
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d400
        collapsed: false
        id: id_o7zbj69f3d2u0vcjw9iplbtcx
        widgetType: cf.cplace.platform.attributesGroup
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * HIGHCHART\\n * @customType\
            \ cf.cplace.solution.safe.solution\\n * @layout default layout\\n * @author\
            \ Christopher W\xF6lfle <christopher.woelfle@cplace.com>\\n * @version\
            \ 1.0\\n * @description Displays the timeline with Programm Increments,\
            \ Safe Events and Safe Milestones. Chart is zoomable and draggable\\n\
            \ */\\n\\n// set the distinguishing log name\\ncplace.setLogName(\\\"\
            Highcharts - Timeline Overview\\\");\\n\\n/***** Start configuration *****/\\\
            nconst chartBackgroundColor = \\\"#FFFFFF\\\";\\nconst lineColor = \\\"\
            #303038\\\";\\n\\nconst piColor = \\\"#dddddd\\\";\\nconst safeMilestoneColor\
            \ = \\\"#3D8F8C\\\";\\nconst eventColor = \\\"#366C81\\\";\\n\\nconst\
            \ milestonePlotBandColor = \\\"#E2F3F2\\\";\\nconst eventPlotBandColor\
            \ = \\\"#E2EEF3\\\";\\nconst todayPlotline = \\\"lightgrey\\\";\\n\\nconst\
            \ showMonthsBeforeToday = 3;\\nconst showMonthsAfterToday = 9;\\n/*****\
            \ End configuration *****/\\n\\nconst MILESTONE = {\\n    TYPE: \\\"cf.milestone\\\
            \",\\n    ATTR: {\\n        SCHEDULE: \\\"containingSchedule\\\",\\n \
            \       DATE: \\\"date\\\",\\n        FEATURE_DEPENDENCY: \\\"cf.cplace.solution.safe.dependency\\\
            \",\\n        TASKCLASS: \\\"activityClass\\\",\\n    },\\n};\\nconst\
            \ FEATURE = {\\n    TYPE: \\\"cf.cplace.solution.safe.feature\\\",\\n\
            \    ATTR: {\\n        PROGRAM: \\\"cf.cplace.solution.safe.program\\\"\
            ,\\n    },\\n};\\nconst SCHEDULE = {\\n    TYPE: \\\"cf.schedule\\\",\\\
            n    ATTR: {},\\n};\\nconst TASK_CLASS = {\\n    TYPE: \\\"cf.activityClass\\\
            \",\\n    ATTR: {\\n        COLOR: \\\"barColor\\\",\\n        BORDERCOLOR:\
            \ \\\"borderColor\\\",\\n        SHAPE: \\\"milestoneShape\\\",\\n   \
            \ },\\n};\\nconst SAFE_MILESTONE = {\\n    TYPE: \\\"cf.cplace.solution.safe.safeMilestone\\\
            \",\\n    ATTR: {\\n        DATE: \\\"cf.cplace.solution.safe.date\\\"\
            ,\\n    },\\n};\\nconst PI = {\\n    TYPE: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n    ATTR: {\\n        START: \\\"cf.cplace.solution.safe.startDate\\\
            \",\\n        END: \\\"cf.cplace.solution.safe.endDate\\\",\\n    },\\\
            n};\\nconst EVENT = {\\n    TYPE: \\\"cf.cplace.solution.safe.event\\\"\
            ,\\n    ATTR: {\\n        START_DATE: \\\"cf.cplace.solution.safe.startDate\\\
            \",\\n        END_DATE: \\\"cf.cplace.solution.safe.endDate\\\",\\n  \
            \      SOLUTION: \\\"cf.cplace.solution.safe.solution\\\",\\n    },\\\
            n};\\n\\nconst CAPABILITY = ({\\n    TYPE: \\\"cf.cplace.solution.safe.capability\\\
            \",\\n    ATTR: {\\n        SOLUTION: \\\"cf.cplace.solution.safe.solution\\\
            \",\\n    },\\n});\\n\\nfunction main() {\\n    /** @type {ChartContext}\
            \ */\\n    const context = {\\n        today: new Date(),\\n        start:\
            \ getStartDate(showMonthsBeforeToday),\\n        end: getEndDate(showMonthsAfterToday),\\\
            n        solution: embeddingPage.get(CAPABILITY.ATTR.SOLUTION),\\n   \
            \     schedules: [],\\n        programIncrements: [],\\n        events:\
            \ [],\\n        safeMilestones: [],\\n        series: [],\\n        plotlines:\
            \ [],\\n        categories: [\\\"<b>Program Increments</b>\\\", \\\"<b>Events</b>\\\
            \", \\\"<b>SAFe Milestones</b>\\\"],\\n        yIndex: 0,\\n    };\\n\\\
            n    categorizeData(pages, context);\\n    createPiSeries(context);\\\
            n    createEventSeries(context);\\n    createMilestoneSeries(context);\\\
            n    //create plotline between SAFe parts and schedules\\n    //ctx.plotLines.push(createPlotline(yIndex\
            \ - 0.5, 1.25));\\n    createScheduleSeries(context);\\n\\n    return\
            \ createChartConfig(context);\\n}\\n\\n/**\\n * Sort pages by their type\
            \ and them to the context\\n * @param {Page[]} pages\\n * @param {ChartContext}\
            \ ctx\\n */\\nfunction categorizeData(pages, ctx) {\\n    cplace.each(pages,\
            \ (page) => {\\n        let type = page.getBuiltinFeatureValue(\\\"customType\\\
            \");\\n        if (type === SCHEDULE.TYPE) {\\n            ctx.schedules.push(page);\\\
            n        } else if (type === PI.TYPE) {\\n            ctx.programIncrements.push(page);\\\
            n        } else if (type === SAFE_MILESTONE.TYPE) {\\n            ctx.safeMilestones.push(page);\\\
            n        } else if (type === EVENT.TYPE) {\\n            ctx.events.push(page);\\\
            n        }\\n    });\\n}\\n\\n/**\\n * Create pi series\\n * @param {ChartContext}\
            \ ctx\\n */\\nfunction createPiSeries(ctx) {\\n    const piData = [];\\\
            n    cplace.each(ctx.programIncrements, (pi) => {\\n        piData.push(createDataItem(pi.getName(),\
            \ pi.get(PI.ATTR.START), pi.get(PI.ATTR.END), ctx.yIndex, piColor));\\\
            n    });\\n    ctx.yIndex++;\\n    ctx.series.push({\\n        name: \\\
            \"Program Increments\\\",\\n        showInLegend: false,\\n        tooltip:\
            \ {\\n            headerFormat: \\\"<b>{point.key}</b><br>\\\",\\n   \
            \         pointFormat: \\\"Start: {point.x: %Y-%m-%d}<br/> End: {point.x2:\
            \ %Y-%m-%d}\\\",\\n        },\\n        data: piData,\\n        dataLabels:\
            \ {\\n            enabled: true,\\n            format: \\\"<b>{point.name}</b>\\\
            \",\\n        },\\n        states: {\\n            inactive: {\\n    \
            \            opacity: 1,\\n            },\\n        },\\n    });\\n  \
            \  return piData;\\n}\\n\\n/**\\n * Create event series\\n * @param {ChartContext}\
            \ ctx\\n */\\nfunction createEventSeries(ctx) {\\n    let eventData =\
            \ [];\\n    cplace.each(ctx.events, (event) => {\\n        eventData.push(\\\
            n            createDataItem(\\n                event.getName(),\\n   \
            \             event.get(EVENT.ATTR.START_DATE),\\n                event.get(EVENT.ATTR.END_DATE),\\\
            n                ctx.yIndex,\\n                eventColor\\n         \
            \   )\\n        );\\n    });\\n    ctx.yIndex++;\\n    ctx.series.push({\\\
            n        name: \\\"Events\\\",\\n        showInLegend: false,\\n     \
            \   tooltip: {\\n            headerFormat: \\\"<b>{point.key}</b><br>\\\
            \",\\n            pointFormat: \\\"Start: {point.x: %Y-%m-%d}<br/> End:\
            \ {point.x2: %Y-%m-%d}\\\",\\n        },\\n        data: eventData,\\\
            n        dataLabels: {\\n            enabled: true,\\n            format:\
            \ \\\"<b>{point.name}</b>\\\",\\n        },\\n        states: {\\n   \
            \         inactive: {\\n                opacity: 1,\\n            },\\\
            n        },\\n    });\\n}\\n\\n/**\\n * Create safe milestone series\\\
            n * @param {ChartContext} ctx\\n */\\nfunction createMilestoneSeries(ctx)\
            \ {\\n    let safeMilestoneData = [];\\n    cplace.each(ctx.safeMilestones,\
            \ (safeMilestone) => {\\n        safeMilestoneData.push(\\n          \
            \  createMilestoneDataItem(\\n                safeMilestone.getName(),\\\
            n                safeMilestone.get(SAFE_MILESTONE.ATTR.DATE),\\n     \
            \           ctx.yIndex,\\n                safeMilestoneColor,\\n     \
            \           safeMilestoneColor\\n            )\\n        );\\n    });\\\
            n    ctx.yIndex++;\\n    ctx.series.push(createMilestoneSerie(\\\"SAFe\
            \ Milestones\\\", safeMilestoneData));\\n}\\n/**\\n * Create Chart configuration\\\
            n * @param {ChartContext} ctx\\n * @returns\\n */\\nfunction createChartConfig(ctx)\
            \ {\\n    return {\\n        chart: {\\n            type: \\\"xrange\\\
            \",\\n            backgroundColor: chartBackgroundColor,\\n          \
            \  panning: true,\\n            panKey: \\\"shift\\\",\\n            zoomType:\
            \ \\\"x\\\",\\n        },\\n        title: {\\n            text: \\\"\\\
            \",\\n        },\\n        yAxis: {\\n            title: {\\n        \
            \        text: \\\"\\\",\\n            },\\n            categories: ctx.categories,\\\
            n            reversed: true,\\n            type: \\\"category\\\",\\n\
            \            plotBands: [\\n                {\\n                    color:\
            \ eventPlotBandColor,\\n                    from: 0.5,\\n            \
            \        to: 1.5,\\n                    borderColor: \\\"white\\\",\\\
            n                    borderWidth: 2,\\n                    zIndex: 0,\\\
            n                },\\n                {\\n                    color: milestonePlotBandColor,\\\
            n                    from: 1.5,\\n                    to: 2.5,\\n    \
            \                borderColor: \\\"white\\\",\\n                    borderWidth:\
            \ 2,\\n                    zIndex: 0,\\n                },\\n        \
            \    ],\\n        },\\n        xAxis: {\\n            type: \\\"datetime\\\
            \",\\n            min: Date.UTC(ctx.start.getFullYear(), ctx.start.getMonth(),\
            \ ctx.start.getDate(), 0, 0, 0, 0),\\n            max: Date.UTC(ctx.end.getFullYear(),\
            \ ctx.end.getMonth(), ctx.end.getDate(), 23, 59, 59, 59),\\n         \
            \   plotLines: [\\n                {\\n                    dashStyle:\
            \ \\\"dash\\\",\\n                    color: todayPlotline,\\n       \
            \             width: 2,\\n                    value: Date.UTC(ctx.today.getFullYear(),\
            \ ctx.today.getMonth(), ctx.today.getDate(), 0, 0, 0, 0),\\n         \
            \           zIndex: 1,\\n                },\\n                ...ctx.plotlines,\\\
            n            ],\\n        },\\n        tooltip: {\\n            enabled:\
            \ true,\\n        },\\n        series: ctx.series,\\n    };\\n}\\n\\n/**\\\
            n * Create schedule series\\n * @param {ChartContext} ctx\\n */\\nfunction\
            \ createScheduleSeries(ctx) {\\n    cplace.each(ctx.schedules, (schedule)\
            \ => {\\n        let relevantSchedule = false;\\n        let scheduleData\
            \ = [];\\n        let milestones = schedule.getIncomingPages(MILESTONE.TYPE,\
            \ MILESTONE.ATTR.SCHEDULE);\\n        cplace.each(milestones, (milestone)\
            \ => {\\n            let featureDependency = milestone.get(MILESTONE.ATTR.FEATURE_DEPENDENCY);\\\
            n            let isProgramRelevant = false;\\n            cplace.each(featureDependency,\
            \ (feature) => {\\n                let featureProgram = feature.get(FEATURE.ATTR.PROGRAM);\\\
            n                if (featureProgram && featureProgram.getId() === ctx.solution.getId())\
            \ {\\n                    isProgramRelevant = true;\\n               \
            \ }\\n            });\\n            if (isProgramRelevant) {\\n      \
            \          relevantSchedule = true;\\n                scheduleData.push(createScheduleMilestoneDataItem(milestone,\
            \ ctx.yIndex));\\n            }\\n        });\\n        if (relevantSchedule)\
            \ {\\n            ctx.categories.push(createCategory(schedule));\\n  \
            \          ctx.series.push(createMilestoneSerieSchedule(schedule.getName(),\
            \ scheduleData));\\n            ctx.yIndex++;\\n        }\\n    });\\\
            n}\\n\\n//FUNCTIONS\\nfunction createDataItem(name, start, end, y, color)\
            \ {\\n    let startDate = new Date(start);\\n    let endDate = new Date(end);\\\
            n    return {\\n        name: name,\\n        x: Date.UTC(startDate.getFullYear(),\
            \ startDate.getMonth(), startDate.getDate(), 0, 0, 0, 0),\\n        x2:\
            \ Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate(),\
            \ 23, 59, 59, 99),\\n        y: y,\\n        color: color,\\n    };\\\
            n}\\n\\nfunction getMilestoneShape(milestoneShape) {\\n    if (milestoneShape\
            \ === \\\"Diamond\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Arrow Up\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Arrow Down\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Up\\\") return \\\"triangle\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Down\\\") return \\\"triangle-down\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Left\\\") return \\\"triangle\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Right\\\") return \\\"triangle\\\";\\n    if (milestoneShape\
            \ === \\\"Circle\\\") return \\\"circle\\\";\\n    if (milestoneShape\
            \ === \\\"Square\\\") return \\\"square\\\";\\n    if (milestoneShape\
            \ === \\\"Star\\\") return \\\"diamond\\\";\\n    if (milestoneShape ===\
            \ \\\"Ramp Down\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Ramp Up\\\") return \\\"diamond\\\";\\n}\\n\\nfunction createMilestoneDataItem(name,\
            \ date, y, color, borderColor) {\\n    let milestoneDate = new Date(date);\\\
            n    return {\\n        name: name,\\n        x: Date.UTC(milestoneDate.getFullYear(),\
            \ milestoneDate.getMonth(), milestoneDate.getDate(), 0, 0, 0, 0),\\n \
            \       y: y,\\n        marker: {\\n            fillColor: color,\\n \
            \           lineColor: borderColor,\\n            lineWidth: 1,\\n   \
            \     },\\n    };\\n}\\n\\nfunction createScheduleMilestoneDataItem(milestone,\
            \ y) {\\n    let name = milestone.getName();\\n    let milestoneDate =\
            \ new Date(milestone.get(MILESTONE.ATTR.DATE));\\n    let color = milestone.getOptional(MILESTONE.ATTR.TASKCLASS).get(TASK_CLASS.ATTR.COLOR);\\\
            n    let borderColor = milestone.getOptional(MILESTONE.ATTR.TASKCLASS).get(TASK_CLASS.ATTR.BORDERCOLOR);\\\
            n    let milestoneShape = getMilestoneShape(milestone.getOptional(MILESTONE.ATTR.TASKCLASS).get(TASK_CLASS.ATTR.SHAPE));\\\
            n    let features = milestone.get(MILESTONE.ATTR.FEATURE_DEPENDENCY);\\\
            n    let featureList = \\\"<b>Requested Features:</b>\\\";\\n    cplace.each(features,\
            \ (feature) => {\\n        featureList = featureList + \\\"<br>\\\" +\
            \ feature.getName();\\n    });\\n\\n    return {\\n        name: name,\\\
            n        x: Date.UTC(milestoneDate.getFullYear(), milestoneDate.getMonth(),\
            \ milestoneDate.getDate(), 0, 0, 0, 0),\\n        y: y,\\n        features:\
            \ featureList,\\n        marker: {\\n            fillColor: color,\\n\
            \            lineColor: borderColor,\\n            lineWidth: 1,\\n  \
            \          symbol: milestoneShape,\\n        },\\n    };\\n}\\n\\nfunction\
            \ createMilestoneSerie(name, dataSeries) {\\n    return {\\n        name:\
            \ name,\\n        type: \\\"scatter\\\",\\n        //stickyTracking: false,\\\
            n        showInLegend: false,\\n        marker: {\\n            enabled:\
            \ true,\\n            symbol: \\\"diamond\\\",\\n            lineWidth:\
            \ 5,\\n            radius: 12,\\n        },\\n        tooltip: {\\n  \
            \          headerFormat: \\\"<b>{point.key}</b><br>\\\",\\n          \
            \  pointFormat: \\\"{point.x: %Y-%m-%d}\\\",\\n        },\\n        data:\
            \ dataSeries,\\n        states: {\\n            inactive: {\\n       \
            \         opacity: 1,\\n            },\\n        },\\n    };\\n}\\n\\\
            nfunction createMilestoneSerieSchedule(name, dataSeries) {\\n    return\
            \ {\\n        name: name,\\n        type: \\\"scatter\\\",\\n        //stickyTracking:\
            \ false,\\n        showInLegend: false,\\n        marker: {\\n       \
            \     enabled: true,\\n            symbol: \\\"diamond\\\",\\n       \
            \     lineWidth: 5,\\n            radius: 12,\\n        },\\n        tooltip:\
            \ {\\n            useHTML: true,\\n            headerFormat: \\\"<b>{point.key}</b><br>\\\
            \",\\n            pointFormat: \\\"{point.x: %Y-%m-%d}<br>{point.features}\\\
            \",\\n        },\\n        data: dataSeries,\\n        states: {\\n  \
            \          inactive: {\\n                opacity: 1,\\n            },\\\
            n        },\\n    };\\n}\\n\\nfunction createPlotline(value, width) {\\\
            n    return {\\n        color: lineColor,\\n        width: width,\\n \
            \       value: value,\\n        dashStyle: \\\"solid\\\",\\n    };\\n}\\\
            n\\nfunction getStartDate(months) {\\n    let today = new Date();\\n \
            \   let startDate = today;\\n    startDate.setMonth(today.getMonth() -\
            \ months);\\n    return startDate;\\n}\\n\\nfunction getEndDate(months)\
            \ {\\n    let today = new Date();\\n    let endDate = today;\\n    endDate.setMonth(today.getMonth()\
            \ + months);\\n    return endDate;\\n}\\n\\nfunction createCategory(object)\
            \ {\\n    let name = object.getName();\\n    let url = object.getUrl();\\\
            n    return '<a href=\\\"' + url + '\\\">' + name + \\\"</a>\\\";\\n}\\\
            n\\n/**\\n * Object containing context information for the chart.\\n *\
            \ @typedef {Object} ChartContext\\n * @property {Date} today - The current\
            \ date.\\n * @property {Date} start - The start date for the chart.\\\
            n * @property {Date} end - The end date for the chart.\\n * @property\
            \ {Page} solution - The embeddingPage object representing the current\
            \ solution.\\n * @property {Page[]} schedules - An array of pages representing\
            \ schedules.\\n * @property {Page[]} programIncrements - An array of pages\
            \ representing program increments.\\n * @property {Page[]} events - An\
            \ array of pages representing events.\\n * @property {Page[]} safeMilestones\
            \ - An array of pages representing SAFe milestones.\\n * @property {any[]}\
            \ series - An array of series\\n * @property {any[]} plotlines - An array\
            \ of plotlines\\n * @property {string[]} categories - An array of categories\\\
            n * @property {number} yIndex - y-index\\n */\\n\\n// @ts-ignore\\nreturn\
            \ main();\",\"upgradeAck\":true,\"description\":\"\"}"
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"or":[{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution","referenceOperator":"ca_cf.cplace.solution.safe.solution.reference"}]},{"types":["cf.cplace.solution.safe.safeMilestone"]},{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.event"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution","referenceOperator":"ca_cf.cplace.solution.safe.solution.reference"}]}]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: height
          value: d250
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: "m{\"en\":\"Timeline Overview\",\"de\":\"Zeitplan \xDCbersicht\"}"
        collapsed: false
        id: id_yp20aa2ymll20vq7vuf747ca2
        widgetType: cf.cplace.visualizations.scriptingHighcharts
- rows:
  - columns:
    - proportion: 8
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":4,\"widgets\":[{\"id\":\"id_kvszeoh7x3v17ruh77k33ip85\",\"collapsed\":false},{\"id\":\"id_znytupldkl874o17fht4g550j\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_eybo86jgqdb5rzgiqoy22rg99\",\"collapsed\":false},{\"id\":\"id_y4t9552x818xxob1uk7l9yy30\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_j4qx6w7wedicthxwgy8vm0ni9\",\"collapsed\":false},{\"id\":\"id_szzzdma0w1wauvprulb680o2w\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_kvszeoh7x3v17ruh77k33ip85\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.localizedAlternativeLabel\\\",\\\"values\\\":[{\\\"localizedString\\\":\\\"{\\\\\\\"de\\\\\\\":\\\\\\\"Capability
            Owner\\\\\\\",\\\\\\\"en\\\\\\\":\\\\\\\"Capability Owner\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.capabilityowner\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_znytupldkl874o17fht4g550j\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.portfolioEpic\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_eybo86jgqdb5rzgiqoy22rg99\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.capabilityType\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_j4qx6w7wedicthxwgy8vm0ni9\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.flowTime\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_y4t9552x818xxob1uk7l9yy30\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.state\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_szzzdma0w1wauvprulb680o2w\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.conflictState\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.showAttributeScript\\\",\\\"values\\\":[{\\\"string\\\":\\\"{\\\\\\\"version\\\\\\\":1,\\\\\\\"script\\\\\\\":\\\\\\\"const
            conflictState \\u003d embeddingPage.get(\\u0027cf.cplace.solution.safe.conflictState\\u0027);\\\\\\\\n\\\\\\\\nif
            (conflictState) {\\\\\\\\n  return true;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\",\\\\\\\"upgradeAck\\\\\\\":true,\\\\\\\"description\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Details","en":"Details"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d300
        collapsed: false
        id: _8o19a178rizk7z4a1lg59r32n
        widgetType: cf.cplace.platform.attributesGroup
    - proportion: 4
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_t2ypr5dqcwlw32kn52iozbbbx\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_cby9wdnpperfl4yvemfu7dga4\",\"collapsed\":false},{\"id\":\"id_3euzqkyrm3yyn1qqj9rsl659a\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_asx7mne57wg47mye6tknxcq5i\",\"collapsed\":false},{\"id\":\"id_tednvsiz4jtid146hd000vedu\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_asx7mne57wg47mye6tknxcq5i\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.actualStartDate\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_tednvsiz4jtid146hd000vedu\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.actualEndDate\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_cby9wdnpperfl4yvemfu7dga4\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedStart\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_3euzqkyrm3yyn1qqj9rsl659a\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedEnd\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_t2ypr5dqcwlw32kn52iozbbbx\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.programIncrement\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Dates","en":"Dates"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d300
        collapsed: false
        id: _0v9g74jvnm7ujjw81vuq8uphf
        widgetType: cf.cplace.platform.attributesGroup
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.layoutTabsWidget.cplacejsLayouts
          value: 's{"version":1,"script":"var layoutConfig = {\n    layouts: selectedLayouts,\n    active:
            selectedActiveLayout\n};\n\nreturn layoutConfig;","upgradeAck":true,"description":""}'
        - name: cf.cplace.layoutTabsWidget.layoutSelection
          value: scf.cplace.solution.safe.layout.details
        - name: cf.cplace.layoutTabsWidget.layouts
          value: s{"layouts":["cf.cplace.solution.safe.layout.details","cf.place.solution.safe.layout.breakdown","cf.cplace.solution.safe.dependencies","cf.cplace.solution.safe.layout.prioritization","cf.cplace.solution.safe.layout.definitions","cf.cplace.solution.safe.layout.comments"]}
        - name: cf.cplace.layoutTabsWidget.sourceForLayouts
          value: ssimpleLayoutSelection
        collapsed: false
        id: _cjlyrazx25gfwozz2opokztpw
        widgetType: cf.cplace.layoutTabsWidget.widget
  - columns:
    - proportion: 12
      widgets:
      - attributes:
          name: content
          value: 'r<h4 style="background-color: rgb(220, 220, 220); border-radius:
            4px; border: 1px solid transparent; color: rgb(118, 118, 118); font-size:
            14px; margin-bottom: 20px; padding: 10px; text-align: center"><strong><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzVlMndzem1qenRwM3F0aHZxZ2M2OXA1bjEiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJjcGxhY2Uuc2V0TG9nTmFtZSgnUEkgRGFzaGJvYXJkJyk7XFxuXC9cL0NvbmZpZ3VyYXRpb25zXFxuY29uc3QgREFTSEJPQVJEID0ge1xcbiAgICBUWVBFOidjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5icmVha2Rvd25EYXNoYm9hcmQnLFxcbiAgICBBVFRSOntcXG4gICAgICBQQVJFTlQ6J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnBhcmVudCdcXG4gICAgfVxcbiAgfVxcbiAgXFxuICBsZXQgZmluYWxsaW5rPScnO1xcbiAgbGV0IGxpbmssIG5hbWU7XFxuICBsZXQgZGFzaGJvYXJkU2VhcmNoID0gbmV3IFNlYXJjaCgpXFxuICAgIC5hZGQoRmlsdGVycy5zcGFjZShlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSkpXFxuICAgIC5hZGQoRmlsdGVycy50eXBlKERBU0hCT0FSRC5UWVBFKSlcXG4gICAgLmFkZChGaWx0ZXJzLmN1c3RvbUF0dHJpYnV0ZU5vbmVtcHR5KERBU0hCT0FSRC5BVFRSLlBBUkVOVCkpXFxuICAgIC5maW5kQWxsUGFnZXMoKTtcXG5cXG5sZXQgcmVzdWx0ID0gSXRlcmFibGVzLmdldEZpcnN0KGRhc2hib2FyZFNlYXJjaCwgbnVsbCk7XFxuXFxuaWYgKHJlc3VsdCkge1xcbiAgICBsaW5rID0gcmVzdWx0LmdldFVybCgpO1xcbiAgICBuYW1lID0gcmVzdWx0LmdldE5hbWUoKTtcXG59XFxuICBcXG5yZXR1cm4gJzxhIGhyZWY9XFxcIicrbGluaysnXFxcImNsYXNzPVxcXCJjdXJyZW50LWNvbG9yXFxcIj5PcGVuIENhcGFibGl0aWVzIERhc2hib2FyZDxcL2E-JztcIixcInVwZ3JhZGVBY2tcIjp0cnVlLFwiZGVzY3JpcHRpb25cIjpcIlwifSJ9XX1dfQ</embeddedwidget></strong></h4>'
        collapsed: false
        id: _vzuozgs1ch8w7kwu4ec348zuy
        widgetType: cf.cplace.demoWidgets.demoRichString
- rows:
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":4,\"widgets\":[{\"id\":\"id_tkxpmwnf0b0i97ybc32lfmhsv\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_n21qfg1o403bvspck33lyftav\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_cufxrqmvff5sxwt7ug2p2fxng\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_ongkscdta3rtkb5g31m662h01\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_cpupmn4j5hvamd0e3lm12ilkp\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_wg5fpt08q981d9k2pnn8p0aj3\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_ongkscdta3rtkb5g31m662h01\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.title\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_cpupmn4j5hvamd0e3lm12ilkp\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.status\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_wg5fpt08q981d9k2pnn8p0aj3\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.description\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_tkxpmwnf0b0i97ybc32lfmhsv\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.localizedAlternativeLabel\\\",\\\"values\\\":[{\\\"localizedString\\\":\\\"{\\\\\\\"de\\\\\\\":\\\\\\\"Capability\\\\\/Milestone
            A\\\\\\\",\\\\\\\"en\\\\\\\":\\\\\\\"Capability\\\\\/Milestone A\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.successor\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_n21qfg1o403bvspck33lyftav\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.type\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_cufxrqmvff5sxwt7ug2p2fxng\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.localizedAlternativeLabel\\\",\\\"values\\\":[{\\\"localizedString\\\":\\\"{\\\\\\\"de\\\\\\\":\\\\\\\"Capability\\\\\/Milestone
            B\\\\\\\",\\\\\\\"en\\\\\\\":\\\\\\\"Capability\\\\\/Milestone B\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.predecessor\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: "m{\"de\":\"Abh\xE4ngigkeit Details\",\"en\":\"Dependency Details\"\
            }"
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d350
        collapsed: false
        id: _8v3rrjyalmpgsigoefaoolyo5
        widgetType: cf.cplace.platform.attributesGroup
    - proportion: 3
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_03x106t3utpgszm2xq2nkkmv2\",\"collapsed\":false},{\"id\":\"id_7oglydzariky0gvwcjmg5uct8\",\"collapsed\":false},{\"id\":\"id_4r22oi51v4frg0j1zjjix61xn\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_7oglydzariky0gvwcjmg5uct8\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedStart\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_4r22oi51v4frg0j1zjjix61xn\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.date\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_03x106t3utpgszm2xq2nkkmv2\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.programIncrement\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Details A","en":"Details A"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: srelative
        - name: cf.cplace.platform.attributesGroup.relativeSelection
          value: scf.cplace.solution.safe.successor
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: bfalse
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d350
        collapsed: false
        id: _xk7ucp805vke2gfw5auxm2ica
        widgetType: cf.cplace.platform.attributesGroup
    - proportion: 3
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_muldscnrhzuld5hbelub68f4w\",\"collapsed\":false},{\"id\":\"id_7oglydzariky0gvwcjmg5uct8\",\"collapsed\":false},{\"id\":\"id_4r22oi51v4frg0j1zjjix61xn\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_7oglydzariky0gvwcjmg5uct8\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedEnd\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_4r22oi51v4frg0j1zjjix61xn\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.date\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_muldscnrhzuld5hbelub68f4w\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.programIncrement\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Details B","en":"Details B"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: srelative
        - name: cf.cplace.platform.attributesGroup.relativeSelection
          value: scf.cplace.solution.safe.predecessor
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: bfalse
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d350
        collapsed: false
        id: _raegx0gam1lqdvxx93jk5q7gt
        widgetType: cf.cplace.platform.attributesGroup
  - columns:
    - proportion: 12
      widgets:
      - attributes:
          name: content
          value: 'r<h4 style="background-color: rgb(220, 220, 220); border-radius:
            4px; border: 1px solid transparent; color: rgb(118, 118, 118); font-size:
            14px; margin-bottom: 20px; padding: 10px; text-align: center"><strong><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzVlMndzem1qenRwM3F0aHZxZ2M2OXA1bjEiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJjcGxhY2Uuc2V0TG9nTmFtZSgnUEkgRGFzaGJvYXJkJyk7XFxuXC9cL0NvbmZpZ3VyYXRpb25zXFxuY29uc3QgREFTSEJPQVJEID0ge1xcbiAgICBUWVBFOidjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zb2x1dGlvblJvYWRtYXBEYXNoYm9hcmQnLFxcbiAgICBBVFRSOntcXG4gICAgICBQQVJFTlQ6J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnBhcmVudCdcXG4gICAgfVxcbiAgfVxcbiAgXFxuICBsZXQgZmluYWxsaW5rPScnO1xcbiAgbGV0IGxpbmssIG5hbWU7XFxuICBsZXQgZGFzaGJvYXJkU2VhcmNoID0gbmV3IFNlYXJjaCgpXFxuICAgIC5hZGQoRmlsdGVycy5zcGFjZShlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSkpXFxuICAgIC5hZGQoRmlsdGVycy50eXBlKERBU0hCT0FSRC5UWVBFKSlcXG4gICAgLmFkZChGaWx0ZXJzLmN1c3RvbUF0dHJpYnV0ZU5vbmVtcHR5KERBU0hCT0FSRC5BVFRSLlBBUkVOVCkpXFxuICAgIC5maW5kQWxsUGFnZXMoKTtcXG5cXG5sZXQgcmVzdWx0ID0gSXRlcmFibGVzLmdldEZpcnN0KGRhc2hib2FyZFNlYXJjaCwgbnVsbCk7XFxuXFxuaWYgKHJlc3VsdCkge1xcbiAgICBsaW5rID0gcmVzdWx0LmdldFVybCgpO1xcbiAgICBuYW1lID0gcmVzdWx0LmdldE5hbWUoKTtcXG59XFxuICBcXG5yZXR1cm4gJzxhIGhyZWY9XFxcIicrbGluaysnXFxcImNsYXNzPVxcXCJjdXJyZW50LWNvbG9yXFxcIj5PcGVuIFNvbHV0aW9uIFJvYWRtYXAgRGFzaGJvYXJkPFwvYT4nO1wiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></strong></h4>'
        collapsed: false
        id: _3gwyy5ai8ibpetw8w06u70hjx
        widgetType: cf.cplace.demoWidgets.demoRichString
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: cf.cplace.platform.script.widgets.changeSetFilter
          value: s1.a
        - name: cf.platform.attributeName
          value: scf.cplace.solution.safe.status
        - name: cf.platform.showEditor
          value: btrue
        - name: cf.platform.showFilter
          value: bfalse
        - name: title
          value: m{"de":"Statushistorie","en":"Status history"}
        collapsed: false
        id: _2oc74jz15ap6zu57fps208b8z
        widgetType: cf.platform.attributeHistory
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: _d6bkod057tkze2frydlhg2ik0
        widgetType: cf.platform.comments
- rows:
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_aahuic7gzupxoqt62m572usqg\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_kalvjzu63f3k5es64gfulflbf\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_4z6c7nefnjkqm8sq337kr9hpp\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_7zp552mr85hg78ougobkfm3up\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_kalvjzu63f3k5es64gfulflbf\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.date\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_7zp552mr85hg78ougobkfm3up\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.relevantFor\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_aahuic7gzupxoqt62m572usqg\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.title\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_4z6c7nefnjkqm8sq337kr9hpp\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.type\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Details","en":"Details"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d350
        collapsed: false
        id: id_eoqi37wlda21a8ugo3skcnt7l
        widgetType: cf.cplace.platform.attributesGroup
    - proportion: 6
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.successor'","visible":true},{"name":"'cf.cplace.solution.safe.type'","visible":true},{"name":"'cf.cplace.solution.safe.predecessor'","visible":true},{"name":"'cf.cplace.solution.safe.status'","visible":true},{"name":"'cf.cplace.solution.safe.description'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: height
          value: d350
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"or":[{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"relativeCustomReference":"cf.cplace.solution.safe.successor","referenceOperator":"embeddingCustomEntity"}]},{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"relativeCustomReference":"cf.cplace.solution.safe.predecessor","referenceOperator":"embeddingCustomEntity"}]}]}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: bfalse
        - name: title
          value: "m{\"de\":\"Abh\xE4ngigkeiten\",\"en\":\"Dependencies\"}"
        collapsed: false
        id: _8kye93pnbvjjye3jqudwccfa2
        widgetType: cf.platform.embeddedSearchAsTable
  - columns:
    - proportion: 12
      widgets:
      - attributes:
          name: content
          value: 'r<h4 style="background-color: rgb(220, 220, 220); border-radius:
            4px; border: 1px solid transparent; color: rgb(118, 118, 118); font-size:
            14px; margin-bottom: 20px; padding: 10px; text-align: center"><strong><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzVlMndzem1qenRwM3F0aHZxZ2M2OXA1bjEiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJjcGxhY2Uuc2V0TG9nTmFtZSgnQ3VycmVudCBQSScpO1xcblwvXC9Db25maWd1cmF0aW9uc1xcbmNvbnN0IFRJTUVMSU5FX0RBU0hCT0FSRCA9IHtcXG4gICAgVFlQRTonY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUudGltZWxpbmVEYXNoYm9hcmQnLFxcbiAgICBBVFRSOntcXG4gICAgICBQQVJFTlQ6J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnBhcmVudCdcXG4gICAgfVxcbiAgfVxcbiAgXFxuICBsZXQgZmluYWxsaW5rPScnO1xcbiAgbGV0IGxpbmssIG5hbWU7XFxuICBsZXQgcGlEYXNoYm9hcmRTZWFyY2ggPSBuZXcgU2VhcmNoKClcXG4gICAgLmFkZChGaWx0ZXJzLnNwYWNlKGVtYmVkZGluZ1BhZ2UuZ2V0U3BhY2VJZCgpKSlcXG4gICAgLmFkZChGaWx0ZXJzLnR5cGUoVElNRUxJTkVfREFTSEJPQVJELlRZUEUpKVxcbiAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlTm9uZW1wdHkoVElNRUxJTkVfREFTSEJPQVJELkFUVFIuUEFSRU5UKSlcXG4gICAgLmZpbmRBbGxQYWdlcygpO1xcblxcbmxldCByZXN1bHQgPSBJdGVyYWJsZXMuZ2V0Rmlyc3QocGlEYXNoYm9hcmRTZWFyY2gsIG51bGwpO1xcblxcbmlmIChyZXN1bHQpIHtcXG4gICAgbGluayA9IHJlc3VsdC5nZXRVcmwoKTtcXG4gICAgbmFtZSA9IHJlc3VsdC5nZXROYW1lKCk7XFxufVxcbiAgXFxucmV0dXJuICc8YSBocmVmPVxcXCInK2xpbmsrJ1xcXCJjbGFzcz1cXFwiY3VycmVudC1jb2xvclxcXCI-T3BlbiBUaW1lbGluZSBEYXNoYm9hcmQ8XC9hPic7XCIsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></strong></h4>'
        collapsed: false
        id: id_k8qikuyai3eo6375gy0kot2q7
        widgetType: cf.cplace.demoWidgets.demoRichString
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_c8kizyahbcoxeijshnr1lyroy
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_nuuoy5dbz13ch1ojvfu98hik7
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_a3kiz0m355g0xup0w16t13e0w
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_odpzn4xvd60w3p19v57l81j7f
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_lchy31alo5hu5xor3pp1d7x8c
        widgetType: cf.platform.files
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_mdvfwnxsabdlyarrh1ruq6run
        widgetType: cf.platform.comments
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_pamgeth270nzarzk2do7pdio4
        widgetType: cf.cplace.visualDomainModel.modeller
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_lli9f2ld8q6b52bophodvtmdj
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_wzhqsdsg42e82svoz82zrq6g1
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_z7jw1kbwajo95ju3swmhvf06u
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_iy0zl92oye27vwcqm16tr9zrj\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_vb93t6binxgc1b1hrm6p2sgkw\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_93w2hfexli01wabq4qy3c3d5z\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_5wwzi5oaqqhs43eqyvl7nft08\",\"collapsed\":false},{\"id\":\"id_onp18hi8qbbjdp72mlmbj9tzs\",\"collapsed\":false},{\"id\":\"id_6gg2zr5tyff79ehun4jmxw8jp\",\"collapsed\":false},{\"id\":\"id_nssz2r8g2byj7wjee0z5abt8n\",\"collapsed\":false},{\"id\":\"id_2zd95rn0jo050lqrk0tl9zw3a\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_8y6ju3oq8k2ieszsm4aoo4rbr\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_5wwzi5oaqqhs43eqyvl7nft08\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.objectivetitle\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_8y6ju3oq8k2ieszsm4aoo4rbr\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.statement\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_onp18hi8qbbjdp72mlmbj9tzs\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.businessValue\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_6gg2zr5tyff79ehun4jmxw8jp\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.actualValue\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_nssz2r8g2byj7wjee0z5abt8n\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.commitment\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_2zd95rn0jo050lqrk0tl9zw3a\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.timebox\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_93w2hfexli01wabq4qy3c3d5z\",\"widgetType\":\"cf.cplace.formsWizard.horizontalDivider\"},{\"id\":\"id_iy0zl92oye27vwcqm16tr9zrj\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.SAFeLevel\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_vb93t6binxgc1b1hrm6p2sgkw\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.SAFeLevel.Reference\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Attributes","en":"Attributes"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: bfalse
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        collapsed: false
        id: _d8u9oi1o953kxvx1mkq6o52w1
        widgetType: cf.cplace.platform.attributesGroup
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.description'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":true},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":true},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":true},{"name":"'cf.cplace.solution.safe.flowTime'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.features'","visible":false},{"name":"'cf.cplace.solution.safe.progressOfFeatures'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfDone'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.state'
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.capabilityowner","referenceOperator":"sessionUser"},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.state","values":["s#15
            - Funnel","s#25 - Analyzing","s#35 - Backlog","s#45 - Implementing","s#55
            - Validating","s#65 - Deploying","s#75 - Releasing"]}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Meine Capabilities","en":"My Capabilities"}
        collapsed: false
        id: _aigr81oa42gmg6538gh8wykui
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 8
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.successor'","visible":true},{"name":"'cf.cplace.solution.safe.type'","visible":true},{"name":"'cf.cplace.solution.safe.predecessor'","visible":true},{"name":"'cf.cplace.solution.safe.status'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStartA'","visible":false},{"name":"'cf.cplace.solution.safe.dateA'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEndB'","visible":false},{"name":"'cf.cplace.solution.safe.dateB'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.status'
        - name: groupOrder
          value: sasc
        - name: height
          value: d400
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"or":[{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.successor","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.capability","cf.cplace.solution.safe.safeMilestone"]},{"relativeCustomReference":"cf.cplace.solution.safe.capabilityowner","referenceOperator":"sessionUser"}]}}]},{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.predecessor","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.capability","cf.cplace.solution.safe.safeMilestone"]},{"relativeCustomReference":"cf.cplace.solution.safe.capabilityowner","referenceOperator":"sessionUser"}]}}]}]}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"de\":\"Abh\xE4ngigkeiten meiner Capabilities\",\"en\":\"Dependencies\
            \ of my capabilities\"}"
        collapsed: false
        id: id_3wef9j4y2fp2yhndh2tqw9fy6
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 4
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_95p2u0q0tgxlmhct2il5yl1hs\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_h0xlkha5v0ma6k1woja2kools\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_ebdjbayylb1eshiji9l0lgp0h\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_95p2u0q0tgxlmhct2il5yl1hs\",\"configuration\":\"[{\\\"name\\\":\\\"attributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedStartA\\u0027\\\"}]},{\\\"name\\\":\\\"inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"showAttributeScript\\\",\\\"values\\\":[{\\\"string\\\":\\\"{\\\\\\\"version\\\\\\\":1,\\\\\\\"script\\\\\\\":\\\\\\\"const
            date \\u003d targetEntity.get(\\u0027cf.cplace.solution.safe.plannedStartA\\u0027);\\\\\\\\n\\\\\\\\nif
            (date) {\\\\\\\\n  return true;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleSelectionWidgetId\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u003cempty\\u003e\\\"}]},{\\\"name\\\":\\\"withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.connectedSingleAttribute\"},{\"id\":\"id_h0xlkha5v0ma6k1woja2kools\",\"configuration\":\"[{\\\"name\\\":\\\"attributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedEndB\\u0027\\\"}]},{\\\"name\\\":\\\"inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"showAttributeScript\\\",\\\"values\\\":[{\\\"string\\\":\\\"{\\\\\\\"version\\\\\\\":1,\\\\\\\"script\\\\\\\":\\\\\\\"const
            date \\u003d targetEntity.get(\\u0027cf.cplace.solution.safe.plannedEndB\\u0027);\\\\\\\\n\\\\\\\\nif
            (date) {\\\\\\\\n  return true;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleSelectionWidgetId\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u003cempty\\u003e\\\"}]},{\\\"name\\\":\\\"withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.connectedSingleAttribute\"},{\"id\":\"id_ebdjbayylb1eshiji9l0lgp0h\",\"configuration\":\"[{\\\"name\\\":\\\"attributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.description\\u0027\\\"}]},{\\\"name\\\":\\\"inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleSelectionWidgetId\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u003cempty\\u003e\\\"}]},{\\\"name\\\":\\\"withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.connectedSingleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: "m{\"de\":\"Details der ausgew\xE4hlten Abh\xE4ngigkeit\",\"en\"\
            :\"Details of selected dependency\"}"
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.useNewFrontend
          value: bfalse
        - name: height
          value: d400
        - name: singleColumn
          value: btrue
        - name: singleSelectionWidgetId
          value: sid_3wef9j4y2fp2yhndh2tqw9fy6
        collapsed: false
        id: id_tlziv6eqie8qxbwl9rq0jvkkw
        widgetType: cf.cplace.platform.connectedAttributesGroup
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.description'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.state'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.program'","visible":false},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.features'","visible":false},{"name":"'cf.cplace.solution.safe.progressOfFeatures'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.capabilityowner","referenceOperator":"sessionUser"},{"relativeCustomReference":"cf.cplace.solution.safe.solution.reference","referenceOperator":"ca_cf.cplace.solution.safe.parent"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"de\":\"Meine Capabililty Entw\xFCrfe\",\"en\":\"My Draft Capabilities\"\
            }"
        collapsed: false
        id: id_4xd2tk15ld0e2tk53mszplv2c
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 4
      widgets:
      - attributes:
        - name: content
          value: 'r<div class="cts-card cts-icon-square-right v2">

            <div class="cts-card-body">

            <div class="cts-card-description cts-card-title-top">

            <div class="cts-card-title"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzk3MnFjcXowa3l4bndqcGFkYmsxd2lzbmsiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJyZWxhdGl2ZVNwYWNlXCI6XCJ0cnVlXCJ9LHtcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVwiXX0se1wicmVsYXRpdmVDdXN0b21SZWZlcmVuY2VcIjpcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmNhcGFiaWxpdHlvd25lclwiLFwicmVmZXJlbmNlT3BlcmF0b3JcIjpcInNlc3Npb25Vc2VyXCJ9LHtcImN1c3RvbUF0dHJpYnV0ZU11bHRpRXhhY3RWYWx1ZXNcIjpcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnN0YXRlXCIsXCJ2YWx1ZXNcIjpbXCJzIzE1IC0gRnVubmVsXCIsXCJzIzI1IC0gQW5hbHl6aW5nXCIsXCJzIzM1IC0gQmFja2xvZ1wiLFwicyM0NSAtIEltcGxlbWVudGluZ1wiLFwicyM1NSAtIFZhbGlkYXRpbmdcIixcInMjNjUgLSBEZXBsb3lpbmdcIixcInMjNzUgLSBSZWxlYXNpbmdcIl19XX0ifV19XX0</embeddedwidget></div>


            <div class="cts-card-subtitle">My Capabilities</div>

            </div>


            <div class="cts-card-icon"><i class="cf fa-fw cf-card-expanded"></i></div>

            </div>

            </div>'
        - name: localizedWidgetTitle
          value: m{"en":"My Capabilities","de":"My Capabilities"}
        collapsed: false
        id: _axnlopvabxg0ibyslmq7h415w
        widgetType: cf.cplace.demoWidgets.demoRichString
      - attributes:
        - name: cf.cplace.genericInterface.api.widgets.simpleButton.alignment
          value: sleft
        - name: cf.cplace.genericInterface.api.widgets.simpleButton.showFrame
          value: btrue
        - name: cf.cplace.genericInterface.api.widgets.triggerInterfaceButton.exportEmbeddingPage
          value: bfalse
        - name: cf.cplace.genericInterface.api.widgets.triggerInterfaceButton.interfaceDefinition
          value: lpage/dsmbyhpe5ciakwg2h1yz4qrmf
        - name: cf.cplace.genericInterface.api.widgets.triggerInterfaceButton.sameWorkspace
          value: btrue
        - name: cf.cplace.genericInterface.api.widgets.triggerInterfaceButton.uploadFile
          value: bfalse
        collapsed: false
        id: _7jrln0vkv88g5fg6lejiky2vw
        widgetType: cf.cplace.genericInterface.api.widgets.triggerInterfaceButton
    - proportion: 4
      widgets:
      - attributes:
        - name: content
          value: 'r<div class="cts-card cts-icon-square-right v2">

            <div class="cts-card-body">

            <div class="cts-card-description cts-card-title-top">

            <div class="cts-card-title"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzk3MnFjcXowa3l4bndqcGFkYmsxd2lzbmsiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJyZWxhdGl2ZVNwYWNlXCI6XCJ0cnVlXCJ9LHtcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVwiXX0se1wicmVsYXRpdmVDdXN0b21SZWZlcmVuY2VcIjpcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmNhcGFiaWxpdHlvd25lclwiLFwicmVmZXJlbmNlT3BlcmF0b3JcIjpcInNlc3Npb25Vc2VyXCJ9LHtcImN1c3RvbUF0dHJpYnV0ZU11bHRpRXhhY3RWYWx1ZXNcIjpcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnN0YXRlXCIsXCJ2YWx1ZXNcIjpbXCJzIzEwIC0gRHJhZnRcIl19XX0ifV19XX0</embeddedwidget></div>


            <div class="cts-card-subtitle">My Drafts</div>

            </div>


            <div class="cts-card-icon"><i class="fas fa-pencil-ruler"></i></div>

            </div>

            </div>'
        - name: localizedWidgetTitle
          value: m{"en":"Drafts","de":"Drafts"}
        collapsed: false
        id: _45ir5dbvpphf9ej95e01w2q2n
        widgetType: cf.cplace.demoWidgets.demoRichString
    - proportion: 4
      widgets:
      - attributes:
        - name: content
          value: 'r<div class="cts-card cts-icon-square-right v2">

            <div class="cts-card-body">

            <div class="cts-card-description cts-card-title-top">

            <div class="cts-card-title"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzk3MnFjcXowa3l4bndqcGFkYmsxd2lzbmsiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJvclwiOlt7XCJhbmRcIjpbe1wicmVsYXRpdmVTcGFjZVwiOlwidHJ1ZVwifSx7XCJ0eXBlc1wiOltcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmRlcGVuZGVuY3lcIl19LHtcImN1c3RvbU91dGdvaW5nU3ViU2VhcmNoXCI6XCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdWNjZXNzb3JcIixcInNlYXJjaFwiOntcImZpbHRlcnNcIjpbe1wicmVsYXRpdmVTcGFjZVwiOlwidHJ1ZVwifSx7XCJ0eXBlc1wiOltcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmNhcGFiaWxpdHlcIl19LHtcInJlbGF0aXZlQ3VzdG9tUmVmZXJlbmNlXCI6XCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5b3duZXJcIixcInJlZmVyZW5jZU9wZXJhdG9yXCI6XCJzZXNzaW9uVXNlclwifV19fV19LHtcImFuZFwiOlt7XCJyZWxhdGl2ZVNwYWNlXCI6XCJ0cnVlXCJ9LHtcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwZW5kZW5jeVwiXX0se1wiY3VzdG9tT3V0Z29pbmdTdWJTZWFyY2hcIjpcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnByZWRlY2Vzc29yXCIsXCJzZWFyY2hcIjp7XCJmaWx0ZXJzXCI6W3tcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVwiXX0se1wicmVsYXRpdmVTcGFjZVwiOlwidHJ1ZVwifSx7XCJyZWxhdGl2ZUN1c3RvbVJlZmVyZW5jZVwiOlwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eW93bmVyXCIsXCJyZWZlcmVuY2VPcGVyYXRvclwiOlwic2Vzc2lvblVzZXJcIn1dfX1dfV19XX0ifV19XX0</embeddedwidget></div>


            <div class="cts-card-subtitle">My Dependencies</div>

            </div>


            <div class="cts-card-icon"><i class="far fa-fw fa-arrows-h"></i></div>

            </div>

            </div>'
        - name: localizedWidgetTitle
          value: m{"en":"My Dependencies","de":"My Dependencies"}
        collapsed: false
        id: _3vwoe0ahpfzj5f9o93autxb1o
        widgetType: cf.cplace.demoWidgets.demoRichString
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.layoutTabsWidget.cplacejsLayouts
          value: 's{"version":1,"script":"var layoutConfig = {\n    layouts: selectedLayouts,\n    active:
            selectedActiveLayout\n};\n\nreturn layoutConfig;","upgradeAck":true,"description":""}'
        - name: cf.cplace.layoutTabsWidget.layouts
          value: s{"layouts":["cf.cplace.solution.safe.layout.capabilities","cf.cplace.solution.safe.layout.drafts","cf.cplace.solution.safe.dependencies"]}
        - name: cf.cplace.layoutTabsWidget.sourceForLayouts
          value: ssimpleLayoutSelection
        collapsed: false
        id: _pf1hrk7xi14l97662lx0cpmrv
        widgetType: cf.cplace.layoutTabsWidget.widget
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: sconnectedTable
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * Displays all items grouped\
            \ by Solution and PI.\\n * Dependencies between items are displayed as\
            \ a line.\\n *\\n * Milestones that lie within the period of the PIs are\
            \ displayed in a separate row.\\n *\\n * @author Christopher W\xF6lfle\\\
            n * @version 15.03.2023\\n */\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       LOG AND DEBUG              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            nconst DEBUG = false;\\ncplace.setLogName(\\\"highcharts-solution-dependency-map\\\
            \");\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       CONFIGURATION              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\nconst CAPABILITY_HEIGHT = 0.3;\\n\\nconst TYPE_CAPABILITY = /** @type\
            \ {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.capability\\\"\
            ,\\n    ATTR: {\\n        TITLE: \\\"cf.cplace.solution.safe.title\\\"\
            ,\\n        TYPE: \\\"cf.cplace.solution.safe.capabilityType\\\",\\n \
            \       FEATURES: \\\"cf.cplace.solution.safe.feature\\\",\\n        PROGRAM:\
            \ \\\"cf.cplace.solution.safe.program\\\",\\n        SOLUTION: \\\"cf.cplace.solution.safe.solution.reference\\\
            \",\\n        PROGRAM_INCREMENT: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n        EPIC: \\\"cf.cplace.solution.safe.portfolioEpic\\\",\\n\
            \        TEMP_ITERATIONS: \\\"cf.cplace.solution.safe.iteration\\\",\\\
            n    },\\n    ENUM: {\\n        TYPE: {\\n            CAPABILITY: \\\"\
            capability\\\",\\n            ENABLER: \\\"enabler\\\",\\n        },\\\
            n    },\\n});\\n\\nconst TYPE_MILESTONE = /** @type {const} */ ({\\n \
            \   TYPE: \\\"cf.cplace.solution.safe.safeMilestone\\\",\\n    ATTR: {\\\
            n        TITLE: \\\"cf.cplace.solution.safe.title\\\",\\n        DATE:\
            \ \\\"cf.cplace.solution.safe.date\\\",\\n        TYPE: \\\"cf.cplace.solution.safe.type\\\
            \",\\n        RELEVANT_FOR: \\\"cf.cplace.solution.safe.relevantFor\\\"\
            , // refers to Program\\n    },\\n    ENUM: {\\n        TYPE: {\\n   \
            \         PI_MILESTONE: \\\"#15 - PI Meilenstein\\\",\\n            FIXED_DATE:\
            \ \\\"#25 - Fixiertes Datum\\\",\\n            LEARNING_MILESTONE: \\\"\
            #35 - Learning Meilenstein\\\",\\n        },\\n    },\\n});\\n\\nconst\
            \ TYPE_DEPENDENCY = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.dependency\\\
            \",\\n    ATTR: {\\n        A: \\\"cf.cplace.solution.safe.successor\\\
            \",\\n        B: \\\"cf.cplace.solution.safe.predecessor\\\",\\n     \
            \   TYPE: \\\"cf.cplace.solution.safe.type\\\",\\n        STATUS: \\\"\
            cf.cplace.solution.safe.status\\\",\\n        DESCRIPTION: \\\"cf.cplace.solution.safe.description\\\
            \",\\n    },\\n    ENUM: {\\n        TYPE: {\\n            RELATED_TO:\
            \ \\\"related to\\\",\\n            BLOCKED_BY: \\\"blocked by\\\",\\\
            n        },\\n        STATUS: {\\n            IDENTIFIED: \\\"15 - identified\\\
            \",\\n            CONFLICT: \\\"25 - conflict\\\",\\n            RESOLVED:\
            \ \\\"35 - resolved\\\",\\n        },\\n    },\\n});\\n\\nconst TYPE_PROGRAM_INCREMENT\
            \ = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n    ATTR: {\\n        TITLE: \\\"cf.cplace.solution.safe.title\\\
            \",\\n        START: \\\"cf.cplace.solution.safe.startDate\\\",\\n   \
            \     END: \\\"cf.cplace.solution.safe.endDate\\\",\\n        PREDECESSOR:\
            \ \\\"cf.cplace.solution.safe.predecessor\\\", // Program Increment\\\
            n    },\\n});\\n\\nconst COLORS = {\\n    INACTIVE: \\\"#88bbee\\\",\\\
            n    ACTIVE: \\\"#4488aa\\\",\\n    DEPEND: \\\"#888888\\\",\\n    DEPEND_HIGHLIGHT:\
            \ \\\"#A21622\\\",\\n    DEPEND_RESOLVED: \\\"#19ad48\\\",\\n    SAFE_MILESTONE:\
            \ \\\"#3D8F8C\\\",\\n    RELEASE: \\\"#366C81\\\",\\n    MILESTONE_PLOTBAND:\
            \ \\\"#E2F3F2\\\",\\n    RELEASE_PLOTBAND: \\\"#E2EEF3\\\",\\n    CAPABILITY:\
            \ \\\"#0aa5ff\\\",\\n    ENABLER: \\\"#ffc80c\\\",\\n    TODAY_PLOTLINE:\
            \ \\\"lightgrey\\\",\\n};\\n\\nconst CATEGORY = {\\n    SAFE_MILESTONE:\
            \ \\\"SAFe Milestones\\\",\\n};\\n\\nconst ROW_SIZE = {\\n    PERIOD:\
            \ 2,\\n    ITEM: 1,\\n};\\n\\nconst HEIGHTS = {\\n    HEADER: 40,\\n \
            \   ITEM: 25,\\n};\\n\\nconst MAX_DATA_LABEL_LENGTH = 25;\\nconst DATA_LABEL_PADDING\
            \ = 0.05;\\n\\nconst SEPARATOR = {\\n    V: \\\" //VSEP// \\\",\\n   \
            \ H: \\\" --HSEP-- \\\",\\n};\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       INITIALIZATION             \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n/*\\n*****************\\nThis highchart is based on a heatmap, i.e. the\
            \ chart is divided into a set of X * Y equally sized cells.\\n* The first\
            \ column(s) of the cells are used to show the vertical categories (categoriesVertical),\
            \ which are provided as separate \\\"category\\\" series\\n* The first\
            \ row(s) of the cells are used to show the horizontal categories (categoriesHorizontal),\
            \ which are provided as separate \\\"category\\\" series\\n* The rest\
            \ of the cells represent the data itself\\n    * each cell can be identified\
            \ by its set of vertical and horizontal categories saved as 'key' in the\
            \ 'keys'-array in the form of a string like \\\"X Cat Level 1 - X Cat\
            \ Level 2 / Y Cat Level 1 - Y Cat Level 2 - Y Cat Level 3\\\" (in theory\
            \ the levels can be \\\"dynamic\\\", which is not used in this specific\
            \ example. In this example only 1 level is used)\\n    * for each cell\
            \ the number of entities to be shown is counted as 'value' in the 'values'-array.\\\
            n    * the entities for each cell are represented as boxes/cards within\
            \ the cell and are pushed as separate serie to the main data series\\\
            n    * dependencies between entities are represented as separate spline\
            \ series, whereas start and end point of the splines are the left or right\
            \ edge of the corresponding entity boxes/cards on the map\\n\\n/*****\
            \ config options *****/\\n\\nfunction main() {\\n    const ctx = fetchData(Array.from(pages));\\\
            n\\n    if (ctx.capabilities.length === 0 || ctx.periods.length === 0)\
            \ {\\n        return {\\n            title: {\\n                text:\
            \ null,\\n            },\\n        };\\n    }\\n\\n    generateMatrix(ctx);\\\
            n\\n    const chart = generateChartConfig(ctx);\\n\\n    return chart;\\\
            n}\\n// @ts-ignore\\nreturn main();\\n//--------------------------------------------------------------------------------------//\\\
            n//                                    Data Fetching                 \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n * Fetches all required data\\n * @param {Page[]} searchResults\\\
            n * @returns {Context}\\n */\\nfunction fetchData(searchResults) {\\n\
            \    const capabilities = searchResults.filter((page) => page.getBuiltinFeatureValue(\\\
            \"customType\\\") === TYPE_CAPABILITY.TYPE);\\n    const missinCapabilities\
            \ = getMissingCapabilities(capabilities);\\n    capabilities.push(...missinCapabilities);\\\
            n    log(`Added ${missinCapabilities.length} missing items that the input\
            \ items depend on.`);\\n\\n    const periods = getAllPeriods(capabilities);\\\
            n    log(\\\"Periods: \\\" + periods.length);\\n\\n    const programs\
            \ = getPrograms(capabilities);\\n    const milestones = getSafeMilestones(periods);\\\
            n    const dependencies = getDependencies(capabilities);\\n\\n    const\
            \ capabilitiesById = capabilities.reduce((acc, capability) => {\\n   \
            \     acc[capability.getId()] = { x: 0, y: 0, capability };\\n       \
            \ return acc;\\n    }, {});\\n\\n    const ctx = {\\n        matrixData:\
            \ undefined,\\n        capabilities,\\n        capabilitiesById,\\n  \
            \      periods,\\n        programs,\\n        milestones,\\n        dependencies,\\\
            n        maxHeight: 1,\\n    };\\n    return ctx;\\n}\\n\\n/**\\n * Searches\
            \ dependencies of the capabilities and returns those capabilities that\
            \ are not yet included\\n * @param {Page<'cf.cplace.solution.safe.capability'>[]}\
            \ capabilities\\n * @return {Page<'cf.cplace.solution.safe.capability'>[]}\\\
            n */\\nfunction getMissingCapabilities(capabilities) {\\n    // @ts-ignore\\\
            n    const newCapabilities = new HashSet();\\n    capabilities.forEach((item)\
            \ => {\\n        // @ts-ignore\\n        const dependencies = Array.from(item.getIncomingPages(TYPE_DEPENDENCY.TYPE,\
            \ TYPE_DEPENDENCY.ATTR.A) || []);\\n        dependencies.forEach((itemDependency)\
            \ => {\\n            const capability = itemDependency.get(TYPE_DEPENDENCY.ATTR.B);\\\
            n            if (isPageOfType(capability, TYPE_CAPABILITY.TYPE)) {\\n\
            \                newCapabilities.add(capability);\\n            }\\n \
            \       });\\n    });\\n    return Array.from(newCapabilities).filter((a)\
            \ => !capabilities.some((b) => b.getId() === a.getId()));\\n}\\n\\n/**\\\
            n * Determines the periods used as columns of the board\\n * @param {Page<'cf.cplace.solution.safe.capability'>[]}\
            \ capabilities Capabilities\\n * @returns {Page<'cf.cplace.solution.safe.programIncrement'>[]}\
            \ PIs in chronological order\\n */\\nfunction getAllPeriods(capabilities)\
            \ {\\n    // @ts-ignore\\n    const periodsSet = new HashSet();\\n   \
            \ capabilities.forEach((item) => {\\n        const pi = item.get(TYPE_CAPABILITY.ATTR.PROGRAM_INCREMENT);\\\
            n        if (!pi) {\\n            return;\\n        }\\n        periodsSet.add(pi);\\\
            n    });\\n    /** @type {Page<'cf.cplace.solution.safe.programIncrement'>[]}\
            \ */\\n    const periods = Array.from(periodsSet);\\n    return periods.sort((a,\
            \ b) =>\\n        // @ts-ignore\\n        a.get(TYPE_PROGRAM_INCREMENT.ATTR.START).isBefore(b.get(TYPE_PROGRAM_INCREMENT.ATTR.START))\
            \ ? -1 : 1\\n    );\\n}\\n/**\\n * Gets all dependencies of the capabilities\\\
            n * @param {Page<'cf.cplace.solution.safe.capability'>[]} capabilities\
            \ Capabilities\\n * @returns {Page<'cf.cplace.solution.safe.dependency'>[]}\
            \ PIs in chronological order\\n */\\nfunction getDependencies(capabilities)\
            \ {\\n    const dependencies = [];\\n    capabilities.forEach((capabilitiy)\
            \ => {\\n        const itemDependencies = Array.from(\\n            //\
            \ @ts-ignore\\n            capabilitiy.getIncomingPages(TYPE_DEPENDENCY.TYPE,\
            \ TYPE_DEPENDENCY.ATTR.A) || []\\n        );\\n        dependencies.push(...itemDependencies);\\\
            n    });\\n    return dependencies;\\n}\\n/**\\n *\\n * @param {Page<'cf.cplace.solution.safe.programIncrement'>[]}\
            \ programmIncrements\\n * @returns\\n */\\nfunction getSafeMilestones(programmIncrements)\
            \ {\\n    const periodStartDate =\\n        // @ts-ignore\\n        programmIncrements.length\
            \ > 0 ? programmIncrements[0].get(TYPE_PROGRAM_INCREMENT.ATTR.START) :\
            \ new DateTime();\\n    const periodEndDate =\\n        programmIncrements.length\
            \ > 0\\n            ? programmIncrements[programmIncrements.length - 1].get(TYPE_PROGRAM_INCREMENT.ATTR.END)\\\
            n            : // @ts-ignore\\n              new DateTime();\\n    const\
            \ safeMilestoneSearch = new Search();\\n    safeMilestoneSearch.add(Filters.embeddingSpace());\\\
            n    safeMilestoneSearch.add(Filters.type(TYPE_MILESTONE.TYPE));\\n  \
            \  safeMilestoneSearch.add(Filters.customAttribute(TYPE_MILESTONE.ATTR.DATE).gte(periodStartDate));\\\
            n    safeMilestoneSearch.add(Filters.customAttribute(TYPE_MILESTONE.ATTR.DATE).lte(periodEndDate));\\\
            n    safeMilestoneSearch.addBuiltinAttributeSort(TYPE_MILESTONE.ATTR.DATE,\
            \ true);\\n    const safeMilestones = safeMilestoneSearch.findAllPages();\\\
            n    // @ts-ignore\\n    return Array.from(safeMilestones);\\n}\\n/**\\\
            n * Get all the programs of the capabilities\\n * @param {Page<'cf.cplace.solution.safe.capability'>[]}\
            \ capabilities\\n * @returns {Page<'cf.cplace.solution.safe.program'>[]}\\\
            n */\\nfunction getPrograms(capabilities) {\\n    // @ts-ignore\\n   \
            \ const programSet = new HashSet();\\n    capabilities.forEach((item)\
            \ => {\\n        const programs = item.get(TYPE_CAPABILITY.ATTR.PROGRAM);\\\
            n        if (!programs) {\\n            return;\\n        }\\n       \
            \ cplace.each(programs, (program) => programSet.add(program));\\n    });\\\
            n    /** @type {Page<'cf.cplace.solution.safe.program'>[]} */\\n    const\
            \ programms = Array.from(programSet)\\n    return programms.sort((a,b)\
            \ => a.getName().localeCompare(b.getName()));\\n}\\n\\n/**\\n * Generate\
            \ the matrix\\n * @param {Context} ctx\\n */\\nfunction generateMatrix(ctx)\
            \ {\\n    /** @type {MatrixData} */\\n    const matrixData = {\\n    \
            \    headerRow: ctx.periods.map((pi, index) => ({ programIncrement: pi,\
            \ x: index + 2, y: 1 })),\\n        milestoneRow: ctx.milestones,\\n \
            \       programms: {},\\n        capabilities: {},\\n    };\\n    let\
            \ yOffset = 3;\\n    ctx.programs.forEach((program) => {\\n        let\
            \ maxNumberOfCapabilitiesPerProgram = 0;\\n\\n        const capabilitiesByPi\
            \ = ctx.periods.map((programIncrement, indexPI) => {\\n            const\
            \ filteredCapabilities = ctx.capabilities.filter((capability) => {\\n\
            \                const programIds = capability.get(TYPE_CAPABILITY.ATTR.PROGRAM)?.map((p)\
            \ => p.getId()) || [];\\n                // Get all capabilities that\
            \ are associated to the current programm & the current program increment\\\
            n                return programIds.includes(program.getId()) && capability.getOptional(TYPE_CAPABILITY.ATTR.PROGRAM_INCREMENT).getId()\
            \ === programIncrement.getId();\\n            });\\n            // Check\
            \ if the number of capabilities for this PI is the largest\\n        \
            \    if (filteredCapabilities.length > maxNumberOfCapabilitiesPerProgram)\
            \ {\\n                maxNumberOfCapabilitiesPerProgram = filteredCapabilities.length;\\\
            n            }\\n\\n            return filteredCapabilities;\\n      \
            \  });\\n\\n        const rowHeight = Math.ceil(maxNumberOfCapabilitiesPerProgram\
            \ * CAPABILITY_HEIGHT);\\n        const x = 1;\\n        const y = yOffset\
            \ + (rowHeight - 1) / 2;\\n\\n        // Iterate over the programm Increments\
            \ to put the capabilities in the right place\\n        matrixData.programms[program.getName()]\
            \ = {\\n            program,\\n            data: capabilitiesByPi.map((c)\
            \ => c.map((c) => c.getId())),\\n            x,\\n            y,\\n  \
            \          rowHeight,\\n        };\\n        capabilitiesByPi.map((capabilities,\
            \ indexPI) => {\\n            capabilities.map((capability, indexCapability)\
            \ => {\\n                if (matrixData.capabilities[capability.getId()])\
            \ {\\n                    matrixData.capabilities[capability.getId()].push({\\\
            n                        x: x + 1 + indexPI,\\n                      \
            \  y: y - (rowHeight - 1) / 2 + CAPABILITY_HEIGHT * (indexCapability -\
            \ 1),\\n                        capability,\\n                       \
            \ programId: program.getId(),\\n                    });\\n           \
            \     } else {\\n                    matrixData.capabilities[capability.getId()]\
            \ = [\\n                        {\\n                            x: x +\
            \ 1 + indexPI,\\n                            y: y - (rowHeight - 1) /\
            \ 2 + CAPABILITY_HEIGHT * (indexCapability - 1),\\n                  \
            \          capability,\\n                            programId: program.getId(),\\\
            n                        },\\n                    ];\\n              \
            \  }\\n            });\\n        });\\n        yOffset += rowHeight; //+\
            \ (rowHeight - 1) / 2;\\n    });\\n\\n    const capabilitiesWithoutProgram\
            \ = ctx.capabilities.filter(\\n        (capability) =>\\n            //\
            \ @ts-ignore\\n            !capability.get(TYPE_CAPABILITY.ATTR.PROGRAM)\
            \ || capability.get(TYPE_CAPABILITY.ATTR.PROGRAM).length === 0\\n    );\\\
            n\\n    // Check if there are any capabilities without a programm and\
            \ add them to the matrix\\n    if (capabilitiesWithoutProgram.length >\
            \ 0) {\\n        let maxNumberOfCapabilitiesPerProgram = 0;\\n       \
            \ // Ad capabilities without a program\\n        const capabilitiesWithoutProgrammByPi\
            \ = ctx.periods.map((programIncrement) => {\\n            const filteredCapabilities\
            \ = capabilitiesWithoutProgram.filter(\\n                (capability)\
            \ => capability.getOptional(TYPE_CAPABILITY.ATTR.PROGRAM_INCREMENT).getId()\
            \ === programIncrement.getId()\\n            );\\n\\n            if (filteredCapabilities.length\
            \ > maxNumberOfCapabilitiesPerProgram) {\\n                maxNumberOfCapabilitiesPerProgram\
            \ = filteredCapabilities.length;\\n            }\\n            return\
            \ filteredCapabilities;\\n        });\\n\\n        const rowHeight = Math.ceil(maxNumberOfCapabilitiesPerProgram\
            \ * CAPABILITY_HEIGHT);\\n        const x = 1;\\n        const y = yOffset\
            \ + (rowHeight - 1) / 2;\\n\\n        matrixData.programms[\\\"w/o Program\\\
            \"] = {\\n            program: null,\\n            data: capabilitiesWithoutProgrammByPi.map((c)\
            \ => c.map((c) => c.getId())),\\n            x,\\n            y,\\n  \
            \          rowHeight,\\n        };\\n        capabilitiesWithoutProgrammByPi.map((capabilities,\
            \ indexPI) => {\\n            capabilities.map((capability, indexCapability)\
            \ => {\\n                if (matrixData.capabilities[capability.getId()])\
            \ {\\n                    matrixData.capabilities[capability.getId()].push({\\\
            n                        x: x + 1 + indexPI,\\n                      \
            \  y: y - (rowHeight - 1) / 2 + CAPABILITY_HEIGHT * (indexCapability -\
            \ 1),\\n                        capability,\\n                       \
            \ programId: \\\"w/o Program\\\",\\n                    });\\n       \
            \         } else {\\n                    matrixData.capabilities[capability.getId()]\
            \ = [\\n                        {\\n                            x: x +\
            \ 1 + indexPI,\\n                            y: y - (rowHeight - 1) /\
            \ 2 + CAPABILITY_HEIGHT * (indexCapability - 1),\\n                  \
            \          capability,\\n                            programId: \\\"w/o\
            \ Program\\\",\\n                        },\\n                    ];\\\
            n                }\\n            });\\n        });\\n        yOffset +=\
            \ rowHeight;\\n    }\\n    ctx.maxHeight = yOffset;\\n    ctx.matrixData\
            \ = matrixData;\\n}\\n/**\\n *\\n * @param {Context} ctx\\n */\\nfunction\
            \ transformMatrixDataIntoSeries(ctx) {\\n    const matrixData = ctx.matrixData;\\\
            n\\n    const series = [];\\n\\n    if (!matrixData) {\\n        return\
            \ series;\\n    }\\n\\n    // 1. Add PIs\\n    series.push(\\n       \
            \ ...matrixData.headerRow.map((headerEntry, index) => {\\n           \
            \ return {\\n                name: headerEntry.programIncrement.getName(),\\\
            n                colsize: 1,\\n                rowsize: 1,\\n        \
            \        dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n     \
            \           enableMouseTracking: false,\\n                data: [\\n \
            \                   {\\n                        x: headerEntry.x,\\n \
            \                       y: headerEntry.y,\\n                        value:\
            \ 1,\\n                        name: `<a href=\\\"${headerEntry.programIncrement.getUrl()}\\\
            \">${headerEntry.programIncrement.getName()}</a>`,\\n                \
            \        color: \\\"#dddddd\\\",\\n                    },\\n         \
            \       ],\\n            };\\n        })\\n    );\\n\\n    // 2. Add Milestones\\\
            n    series.push({\\n        name: \\\"SAFe Milestones\\\",\\n       \
            \ colsize: 1,\\n        rowsize: 1,\\n        dataLabels: { rotation:\
            \ 0, color: \\\"#000000\\\" },\\n        enableMouseTracking: false,\\\
            n        data: [{ x: 1, y: 2, value: 1, name: '<a href=\\\"wip\\\">SAFe\
            \ Milestones</a>', color: \\\"#E2F3F2\\\" }],\\n    });\\n\\n    let top\
            \ = true;\\n    const safeMilestoneData = [];\\n\\n    matrixData.milestoneRow.forEach((safeMilestone)\
            \ => {\\n        const safeMilestoneName = safeMilestone.getName();\\\
            n        const safeMilestoneDate = safeMilestone.get(TYPE_MILESTONE.ATTR.DATE);\\\
            n        // @ts-ignore\\n        const safeMilestoneDateString = safeMilestoneDate?.toString(\\\
            \"dd.MM.yyyy\\\");\\n        // get milestone Position\\n        // @ts-ignore\\\
            n        const safeMilestonePosition = getDatePosition(safeMilestoneDate.getMillis(),\
            \ ctx);\\n        // add milestone only if position is not null\\n   \
            \     if (safeMilestonePosition > 0) {\\n            safeMilestoneData.push({\\\
            n                x: safeMilestonePosition,\\n                y: 2,\\n\
            \                name: '<a href=\\\"' + safeMilestone.getUrl() + '\\\"\
            >' + safeMilestoneName + \\\"</a>\\\",\\n                value: safeMilestoneDateString,\\\
            n                dataLabels: {\\n                    verticalAlign: top\
            \ ? \\\"top\\\" : \\\"bottom\\\",\\n                },\\n            });\\\
            n            top = !top;\\n        }\\n    });\\n\\n    series.push({\\\
            n        type: \\\"scatter\\\",\\n        lineWidth: 0,\\n        findNearestPointBy:\
            \ \\\"xy\\\",\\n        data: safeMilestoneData,\\n        marker: {\\\
            n            fillColor: COLORS.SAFE_MILESTONE,\\n        },\\n    });\\\
            n\\n    // 3. Add Programms\\n    let rowHeight = 2.5;\\n    Object.keys(matrixData.programms).forEach((programName)\
            \ => {\\n        const data = matrixData.programms[programName];\\n  \
            \      // Add the Programms\\n        series.push({\\n            name:\
            \ programName,\\n            rowsize: data.rowHeight,\\n            dataLabels:\
            \ { rotation: 0, color: \\\"#000000\\\" },\\n            enableMouseTracking:\
            \ false,\\n            data: [\\n                {\\n                \
            \    x: data.x,\\n                    y: data.y,\\n                  \
            \  value: 1,\\n                    name: `<a href=\\\\\\\"${data.program?.getUrl()\
            \ || \\\"wip\\\"}\\\\\\\">${programName}</a>`,\\n                    color:\
            \ \\\"#dddddd\\\",\\n                },\\n            ],\\n        });\\\
            n        // Add the capabilities of the programm\\n        data.data.map((capabilitiesByPI,\
            \ indexPI) => {\\n            series.push({\\n                name: programName\
            \ + indexPI,\\n                rowsize: CAPABILITY_HEIGHT,\\n        \
            \        colsize: 0.8,\\n                dataLabels: { rotation: 0, color:\
            \ \\\"#000000\\\", overflow: \\\"justify\\\" },\\n                enableMouseTracking:\
            \ false,\\n                data: capabilitiesByPI.map((capabilityId, indexCapability)\
            \ => {\\n                    const capabilityData = matrixData.capabilities[capabilityId].filter((c)\
            \ => c.programId === (data.program ? data.program.getId() : \\\"w/o Program\\\
            \"))[0];\\n                    const capability = capabilityData.capability;\\\
            n                    const isEnabler = capability.get(TYPE_CAPABILITY.ATTR.TYPE)\
            \ === \\\"enabler\\\";\\n                    return {\\n             \
            \           x: capabilityData.x,\\n                        y: capabilityData.y,\\\
            n                        value: 1,\\n                        name: `<a\
            \ href=\\\\\\\"${capability.getUrl() || \\\"wip\\\"}\\\\\\\">${limitStringSize(capability.getName(),\
            \ 40)}</a>`,\\n                        color: isEnabler ? \\\"#ffc80c\\\
            \" : \\\"#0aa5ff\\\",\\n                    };\\n                }),\\\
            n            });\\n        });\\n        rowHeight += data.rowHeight;\\\
            n    });\\n\\n    // 4. Add Dependencies\\n    ctx.dependencies.forEach((dependency)\
            \ => {\\n        const from = dependency.get(TYPE_DEPENDENCY.ATTR.B);\\\
            n        const to = dependency.get(TYPE_DEPENDENCY.ATTR.A);\\n       \
            \ if (!from || !to) {\\n            return;\\n        }\\n        const\
            \ fromId = from.getId();\\n        const toId = to.getId();\\n\\n    \
            \    const fromCapabilities = ctx.matrixData?.capabilities[fromId];\\\
            n        const toCapabilities = ctx.matrixData?.capabilities[toId];\\\
            n\\n        if (!fromCapabilities) {\\n            return;\\n        }\\\
            n        const maxValue = ctx.maxHeight;\\n        fromCapabilities.forEach((fromCapabilityData)\
            \ => {\\n            let x1 = fromCapabilityData.x;\\n            let\
            \ y1 = fromCapabilityData.y;\\n            // y1 += -0.4 + 0.4 / maxValue\
            \ + ((x1-1) * 0.8) / maxValue;\\n\\n            if (!toCapabilities) {\\\
            n                return;\\n            }\\n            toCapabilities.forEach((toCapabilityData)\
            \ => {\\n                let x2 = toCapabilityData.x;\\n             \
            \   let y2 = toCapabilityData.y;\\n                // y2 += -0.4 + 0.4\
            \ / maxValue + ((x1-1) * 0.8) / maxValue;\\n\\n                const description\
            \ = dependency.get(TYPE_DEPENDENCY.ATTR.DESCRIPTION) || \\\" \\\";\\n\
            \                const dependencyType = dependency.get(TYPE_DEPENDENCY.ATTR.TYPE);\\\
            n                const status = dependency.get(TYPE_DEPENDENCY.ATTR.STATUS);\\\
            n                const dependencySeries = {\\n                    type:\
            \ \\\"spline\\\",\\n                    name: \\\"<b>\\\" + to.getName()\
            \ + \\\"</b><br/>relates to:<br/>\\\" + from.getName() + \\\"<br>\\\"\
            \ + description,\\n                    lineWidth: 1.5,\\n            \
            \        color: COLORS.DEPEND,\\n                    dashStyle: \\\"shortdot\\\
            \",\\n                    findNearestPointBy: \\\"xy\\\",\\n         \
            \           data: [\\n                        { x: x1 + 0.4, y: y1 },\\\
            n                        { x: x1 + 0.45, y: y1 === y2 ? y1 + 0.02 : y1\
            \ },\\n                        { x: x2 - 0.45, y: y1 === y2 ? y2 - 0.02\
            \ : y2 },\\n                        { x: x2 - 0.4, y: y2, marker: { enabled:\
            \ true, symbol: \\\"diamond\\\" } },\\n                    ],\\n     \
            \           };\\n                if (dependencyType === TYPE_DEPENDENCY.ENUM.TYPE.BLOCKED_BY)\
            \ {\\n                    dependencySeries.name = \\\"<b>\\\" + to.getName()\
            \ + \\\"</b><br/>blocked by:<br/>\\\" + from.getName() + \\\"<br>\\\"\
            \ + description;\\n                    // @ts-ignore\\n              \
            \      dependencySeries.dashStyle = null;\\n                }\\n     \
            \           if (status === TYPE_DEPENDENCY.ENUM.STATUS.CONFLICT) {\\n\
            \                    dependencySeries.color = COLORS.DEPEND_HIGHLIGHT;\\\
            n                } else if (status === TYPE_DEPENDENCY.ENUM.STATUS.RESOLVED)\
            \ {\\n                    dependencySeries.color = COLORS.DEPEND_RESOLVED;\\\
            n                }\\n                series.push(dependencySeries);\\\
            n            });\\n        });\\n    });\\n\\n    return series;\\n}\\\
            n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                     Chart Config                 \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n *\\n * @param {Context} ctx\\n */\\nfunction generateChartConfig(ctx)\
            \ {\\n    if (!ctx.matrixData) {\\n        return;\\n    }\\n    const\
            \ series = transformMatrixDataIntoSeries(ctx);\\n    // @ts-ignore\\n\
            \    const today = new DateTime();\\n    let todayPosition = getDatePosition(today.getMillis(),\
            \ ctx);\\n\\n    return {\\n        chart: {\\n            type: \\\"\
            heatmap\\\",\\n            marginTop: 0,\\n            marginBottom: 0,\\\
            n            plotBorderWidth: 0,\\n            scrollablePlotArea: {\\\
            n                minHeight: 1200,\\n                minWidth: 2200,\\\
            n            },\\n        },\\n        title: {\\n            text: null,\\\
            n        },\\n        xAxis: {\\n            categories: [],\\n      \
            \      title: null,\\n            gridLineWidth: 0,\\n            lineWidth:\
            \ 0,\\n            labels: {\\n                enabled: false,\\n    \
            \        },\\n            plotLines: [\\n                {\\n        \
            \            dashStyle: \\\"dash\\\",\\n                    color: COLORS.TODAY_PLOTLINE,\\\
            n                    width: 2,\\n                    value: todayPosition,\\\
            n                    zIndex: 1,\\n                },\\n            ],\\\
            n        },\\n        yAxis: {\\n            categories: [],\\n      \
            \      title: null,\\n            gridLineWidth: 1,\\n            tickInterval:\
            \ 1,\\n            lineWidth: 0,\\n            min: 1,\\n            max:\
            \ ctx.maxHeight,\\n            labels: {\\n                enabled: false,\\\
            n            },\\n            reversed: true,\\n            scrollbar:\
            \ {\\n                enabled: true,\\n            },\\n            plotBands:\
            \ [\\n                {\\n                    color: COLORS.MILESTONE_PLOTBAND,\\\
            n                    borderColor: \\\"white\\\",\\n                  \
            \  borderWidth: 2,\\n                    from: 1.5,\\n               \
            \     to: 2.5,\\n                    zIndex: 0,\\n                },\\\
            n                // {\\n                //     color: COLORS.RELEASE_PLOTBAND,\\\
            n                //     borderColor: 'white',\\n                //   \
            \  borderWidth: 2,\\n                //     from: 1.5,\\n            \
            \    //     to: 2.5,\\n                //     zIndex: 0\\n           \
            \     // }\\n            ],\\n        },\\n        colors: [\\\"#D5001C\\\
            \", \\\"#92D050\\\"],\\n        colorAxis: {\\n            dataClassColor:\
            \ \\\"category\\\",\\n            dataClasses: [\\n                {\\\
            n                    to: 0.5,\\n                },\\n                {\\\
            n                    from: 0.5,\\n                },\\n            ],\\\
            n        },\\n        legend: {\\n            enabled: false,\\n     \
            \   },\\n        tooltip: {\\n            useHTML: true,\\n          \
            \  followPointer: false,\\n        },\\n        plotOptions: {\\n    \
            \        series: {\\n                borderColor: \\\"#ffffff\\\",\\n\
            \                borderWidth: 2,\\n                dataLabels: {\\n  \
            \                  allowOverlap: false,\\n                    inside:\
            \ true,\\n                    crop: true,\\n                    overflow:\
            \ \\\"justify\\\",\\n                    position: \\\"left\\\",\\n  \
            \                  shape: \\\"circle\\\",\\n                    enabled:\
            \ true,\\n                    color: \\\"#000000\\\",\\n             \
            \       format: \\\"{point.name}\\\",\\n                    style: {\\\
            n                        textOutline: \\\"none\\\",\\n               \
            \         textOverflow: \\\"clip\\\",\\n                    },\\n    \
            \            },\\n                stickyTracking: false,\\n          \
            \      tooltip: {\\n                    headerFormat: \\\"\\\",\\n   \
            \                 pointFormat: \\\"<b>{point.name}</b>\\\",\\n       \
            \             findNearestPointBy: \\\"xy\\\",\\n                },\\n\
            \                states: {\\n                    inactive: {\\n      \
            \                  opacity: 1,\\n                    },\\n           \
            \     },\\n            },\\n            spline: {\\n                tooltip:\
            \ {\\n                    headerFormat: \\\"{series.name}\\\",\\n    \
            \                pointFormat: \\\"\\\",\\n                    findNearestPointBy:\
            \ \\\"xy\\\",\\n                },\\n                marker: {\\n    \
            \                enabled: false,\\n                    fillColor: COLORS.DEPEND,\\\
            n                    radius: 6,\\n                    states: {\\n   \
            \                     hover: {\\n                            enabled:\
            \ false,\\n                        },\\n                    },\\n    \
            \            },\\n            },\\n            scatter: {\\n         \
            \       tooltip: {\\n                    headerFormat: \\\"\\\",\\n  \
            \                  pointFormat: \\\"<b>{point.name}</b><br>{point.value}\\\
            \",\\n                    findNearestPointBy: \\\"xy\\\",\\n         \
            \       },\\n                dataLabels: {\\n                    enabled:\
            \ true,\\n                },\\n                marker: {\\n          \
            \          enabled: true,\\n                    symbol: \\\"diamond\\\"\
            ,\\n                    radius: 10,\\n                    states: {\\\
            n                        hover: {\\n                            enabled:\
            \ true,\\n                        },\\n                    },\\n     \
            \           },\\n            },\\n        },\\n        series: series,\\\
            n        // series: [\\n        //     {\\n        //         name: \\\
            \"PI 22.4\\\",\\n        //         colsize: 1,\\n        //         rowsize:\
            \ 1,\\n        //         dataLabels: { rotation: 0, color: \\\"#000000\\\
            \" },\\n        //         enableMouseTracking: false,\\n        //  \
            \       data: [\\n        //             {\\n        //              \
            \   x: 2,\\n        //                 y: 1,\\n        //            \
            \     value: 1,\\n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/1bk9kpxn7s36vz3w80ji7t5oo/PI-22.4\\\
            \">PI 22.4</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.1\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 3,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/4l6jbaa8qgzinif5qetj499g5/PI-23.1\\\
            \">PI 23.1</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.2\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 4,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/tksr708c2119mek2pzzopu9qb/PI-23.2\\\
            \">PI 23.2</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.3\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 5,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/i4o8azmi8m0oqvqqu3hejgu80/PI-23.3\\\
            \">PI 23.3</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.4\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 6,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/nrymz33xo7ew3x6qcgdk3fl7l/PI-23.4\\\
            \">PI 23.4</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 24.1\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 7,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/0wtzrg3m4bdpfhut5xbgiza73/PI-24.1\\\
            \">PI 24.1</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"SAFe Milestones\\\",\\\
            n        //         colsize: 1,\\n        //         rowsize: 1,\\n  \
            \      //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\\
            n        //         enableMouseTracking: false,\\n        //         data:\
            \ [{ x: 1, y: 2, value: 1, name: '<a href=\\\"wip\\\">SAFe Milestones</a>',\
            \ color: \\\"#E2F3F2\\\" }],\\n        //     },\\n        //     {\\\
            n        //         name: \\\"Smart Infotainment\\\",\\n        //   \
            \      rowsize: 2,\\n        //         dataLabels: { rotation: 0, color:\
            \ \\\"#000000\\\" },\\n        //         enableMouseTracking: false,\\\
            n        //         data: [\\n        //             {\\n        //  \
            \               x: 1,\\n        //                 y: 3.5,\\n        //\
            \                 value: 1,\\n        //                 name: '<a href=\\\
            \"https://solution-templates.cplace.de/large-solution-safe/pages/qg000odouviwwtx4rz2bvaoi8/Smart-Infotainment\\\
            \">Smart Infotainment</a>',\\n        //                 color: \\\"#dddddd\\\
            \",\\n        //             },\\n        //         ],\\n        // \
            \    },\\n        //     {\\n        //         name: \\\"Powertrain and\
            \ Safety\\\",\\n        //         rowsize: 4,\\n        //         dataLabels:\
            \ { rotation: 0, color: \\\"#000000\\\" },\\n        //         enableMouseTracking:\
            \ false,\\n        //         data: [\\n        //             {\\n  \
            \      //                 x: 1,\\n        //                 y: 5 + (4-1)/2,\\\
            n        //                 value: 1,\\n        //                 name:\
            \ '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/4flf7a0349c5ximei6olrhife/Powertrain-and-Safety\\\
            \">Powertrain and Safety</a>',\\n        //                 color: \\\"\
            red\\\",\\n        //             },\\n        //         ],\\n      \
            \  //     },\\n        // ],\\n    };\\n}\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                        Utils                     \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n * Limit string to specified size\\n * @param {string} str\\\
            n * @param {number} maxSize\\n * @returns\\n */\\nfunction limitStringSize(str,\
            \ maxSize) {\\n    if (str.length > maxSize) {\\n        return str.substring(0,\
            \ maxSize - 3) + \\\"...\\\";\\n    }\\n    return str;\\n}\\n\\n/**\\\
            n *\\n * @param {number} date\\n * @param {Context} ctx\\n * @returns\\\
            n */\\nfunction getDatePosition(date, ctx) {\\n    let xPosition = 0;\\\
            n    ctx.periods.every((pi, idx) => {\\n        // @ts-ignore\\n     \
            \   let categoryStartDate = pi.get(TYPE_PROGRAM_INCREMENT.ATTR.START)?.getMillis();\\\
            n        // @ts-ignore\\n        let categoryEndDate = pi.get(TYPE_PROGRAM_INCREMENT.ATTR.END)?.getMillis();\\\
            n\\n        // Check whether release date lies in between start and end\
            \ date of category\\n        if (categoryStartDate && categoryEndDate\
            \ && date >= categoryStartDate && date <= categoryEndDate) {\\n      \
            \      // find x-Value of category and subtract 0.5 for starting point\
            \ as offset\\n            let x = idx + 2 - 0.5;\\n            // calculate\
            \ the relative position of date between Category StartDate and EndDate\
            \ and add it to the offset value\\n            xPosition = x + (date -\
            \ categoryStartDate) / (categoryEndDate - categoryStartDate);\\n     \
            \       // exit the every loop\\n            return false;\\n        }\\\
            n        // continue the every loop\\n        return true;\\n    });\\\
            n    // if there was no match, just return null\\n    return xPosition;\\\
            n}\\n\\n/**\\n * Checks if a cplace page is of the specified type\\n *\
            \ @param {Page} page\\n * @param {string} type\\n * @returns {boolean}\\\
            n */\\nfunction isPageOfType(page, type) {\\n    return page.getBuiltinFeatureValue(\\\
            \"customType\\\") === type;\\n}\\n\\n/**\\n * Log to cplace\\n * @param\
            \ {any} text\\n */\\nfunction log(text) {\\n    if (!DEBUG) {\\n     \
            \   return;\\n    }\\n    const logOutput = typeof text !== \\\"string\\\
            \" ? JSON.stringify(text) : text;\\n    cplace.log(logOutput);\\n}\",\"\
            upgradeAck\":true,\"description\":\"\"}"
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: height
          value: d800
        - name: sortOrder
          value: sAufsteigend
        - name: tableWidgetId
          value: s_c43cb19vnxdtekfbptt2pller
        - name: title
          value: "m{\"en\":\"Roadmap of Capabilities with Dependencies\",\"de\":\"\
            Roadmap der Capabilities mit ihren Abh\xE4ngigkeiten\"}"
        collapsed: false
        id: _s0vm8qx7962jgcekhp90ewacw
        widgetType: cf.cplace.visualizations.scriptingHighcharts
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"'cf.cplace.solution.safe.description'","visible":true},{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":true},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":true},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":true},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.program'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.features'","visible":false},{"name":"'cf.cplace.solution.safe.progressOfFeatures'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfDone'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: height
          value: d600
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution.reference","referenceOperator":"parentOfEmbeddingPage"}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Capabilities","en":"Capabilities"}
        collapsed: false
        id: _c43cb19vnxdtekfbptt2pller
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 6
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.successor'","visible":true},{"name":"'cf.cplace.solution.safe.type'","visible":true},{"name":"'cf.cplace.solution.safe.predecessor'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStartA'","visible":false},{"name":"'cf.cplace.solution.safe.dateA'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEndB'","visible":false},{"name":"'cf.cplace.solution.safe.dateB'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.status'","visible":false}]
        - name: connectedTableWidgetId
          value: s_c43cb19vnxdtekfbptt2pller
        - name: groupColumn
          value: s'cf.cplace.solution.safe.status'
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"or":[{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"relativeCustomReference":"cf.cplace.solution.safe.successor","referenceOperator":"connectedTable"}]},{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"relativeCustomReference":"cf.cplace.solution.safe.predecessor","referenceOperator":"connectedTable"}]}]}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"de\":\"Abh\xE4ngigkeiten der ausgew\xE4hlten Capability\",\"\
            en\":\"Dependencies of selected capability\"}"
        collapsed: false
        id: _tirguwh735l0jz55h4l6or6q9
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: de.visualistik.visualRoadmap.dataSource
          value: sconnectedTable
        - name: de.visualistik.visualRoadmap.script
          value: 's{"version":1,"script":"/**\n * Set to false to suspend logging\n
            * @type {Boolean}\n */\n const DEBUG = true;\n\n /**\n  * Get millisecond
            starting time of the script\n  * @type {Number}\n  */\n const START_TIME
            = new Date().getTime()\n \n /** @type {Number} */\n let LAST_TIME = START_TIME;\n
            \n /**\n  * Hint: set a declarative name for all of your logs\n  */\n
            cplace.setLogName(''Roadmap: Solution Roadmap'');\n \n //--------------------------------------------------------------------------------------//\n
            //                                       CONFIGURATION                                  //\n
            //--------------------------------------------------------------------------------------//\n
            \n const CUSTOM_SETTINGS = {\n   UNDEFINED_GROUP_TITLE: ''No Portfolio
            Epics defined'', // if the ROADMAP_STRUCTURE.BASEITEM.GROUP value is changed,
            adjust this title\n   UNDEFINED_SWIMLANE_TITLE: '''',\n   UNDEFINED_SUBSWIMLANE_TITLE:
            ''''\n }\n const ROADMAP_STRUCTURE = {\n   CONFIGURATION: {\n     TYPE:
            ''de.visualistik.visualRoadmap.visualRoadmapConfiguration'',\n     TYPE_MAP:
            ''de.visualistik.visualRoadmap.configurationTypeMap'',\n     ITEM_TYPE:
            ''de.visualistik.visualRoadmap.itemType'',\n     DISPLAYED_VALUE: ''de.visualistik.visualRoadmap.displayedValue'',\n     ATTRIBUTE:
            ''de.visualistik.visualRoadmap.propertyKey'',\n     PROPERTY_KEY_VALUES:
            ''de.visualistik.visualRoadmap.propertyKeyValues''\n   },\n   BASEITEM:
            {\n     TYPE: ''cf.cplace.solution.safe.capability'',\n     GROUP: ''cf.cplace.solution.safe.portfolioEpic'',\n     LABEL_PREFIX:
            ''cf.cplace.solution.safe.progressOfFeatures'',\n     LABEL: ''cf.cplace.solution.safe.title'',
            // not used\n     SWIMLANE: ''cf.cplace.solution.safe.solution.reference'',\n
            \n     START_DATE: ''cf.cplace.solution.safe.plannedStart'',\n     END_DATE:
            ''cf.cplace.solution.safe.plannedEnd'',\n \n     STATE: ''cf.cplace.solution.safe.state'',\n
            \n     // state values\n     IMPLEMENTING: ''#45 - Implementing'',\n     FUNNEL:
            ''#15 - Funnel'',\n     \n   },\n   SUBITEM: {\n     TYPE: ''cf.cplace.solution.safe.feature'',\n     SWIMLANE:
            ''cf.cplace.solution.safe.program'',\n     LABEL: ''cf.cplace.solution.roadmap.title'',\n     PART_OF:
            ''cf.cplace.solution.safe.capability'',\n     START_DATE: ''cf.cplace.solution.safe.plannedStart'',\n     END_DATE:
            ''cf.cplace.solution.safe.plannedEnd'',\n \n     //STATE: ''cf.cplace.solution.roadmap.workflow'',\n   },\n   QUALITY_LINES:
            {\n     TYPE: ''cf.cplace.solution.safe.safeMilestone'',\n     DATE: ''cf.cplace.solution.safe.date'',\n     IS_ROADMAP_RELEVANT
            : ''cf.cplace.solution.safe.isRoadmapRelevant''\n   }\n }\n \n //--------------------------------------------------------------------------------------//\n
            //                                       INITIALIZATION                                  //\n
            //--------------------------------------------------------------------------------------//\n
            \n const enableLinks = true; // enable links on items and subitems\n const
            branding = true; // display branding visualistik\n const allGroupsOpen
            = true; // true if all groups are open on default\n \n /**\n  * @type
            {import(\"../templates/data-model\").Configuration}\n  */\n let config
            = null;\n \n /**\n  * @type {Object}\n  */\n let groups = {}\n \n /**
            @type {import(\"../templates/data-model\").QualityLine[]} */\n let qualityLines
            = null;\n \n //--------------------------------------------------------------------------------------//\n
            //                                       OUTPUT                                         //\n
            //--------------------------------------------------------------------------------------//\n
            \n cplace.each(pages, function (page) {\n   if (page.getBuiltinFeatureValue(''customType'')
            !== ROADMAP_STRUCTURE.BASEITEM.TYPE || page.get(ROADMAP_STRUCTURE.BASEITEM.START_DATE)
            == null || page.get(ROADMAP_STRUCTURE.BASEITEM.END_DATE) == null) {\n     return;\n   }\n
            \n   if (config === null) {\n     config = loadConfiguration(enableLinks,
            branding, page);\n   }\n \n   if (qualityLines === null) {\n     qualityLines
            = createQualityLines(page);\n   }\n \n   let groupPages = preparePages(page,
            ROADMAP_STRUCTURE.BASEITEM.GROUP);\n   \n   cplace.each(groupPages, function(groupPage)
            {\n     cplace.log(''groupPages''+groupPage)\n     let group = null;\n     let
            groupName = CUSTOM_SETTINGS.UNDEFINED_GROUP_TITLE;\n     let groupId =
            CUSTOM_SETTINGS.UNDEFINED_GROUP_TITLE;\n \n     if (groupPage != null)
            {\n       groupName = groupPage.getName();\n       groupId = groupPage.getId();\n     }\n
            \n     if (groups.hasOwnProperty(groupId)) {\n       group = groups[groupId]\n     }
            else {\n       group = {\n         name: groupName,\n         id: groupId,\n         swimlanes:
            [],\n         swimlaneObject: {}\n       }\n       if (allGroupsOpen)
            {\n         config.groupsOpen.push(groupId);\n       }\n \n       groups[groupId]
            = group;\n     }\n \n     let swimlanePages = preparePages(page, ROADMAP_STRUCTURE.BASEITEM.SWIMLANE);\n     cplace.log(''swimlanePages''+swimlanePages)\n
            \n     cplace.each(swimlanePages, function (swimlanePage) {\n       cplace.log(''swimlanePage''+swimlanePage)\n       let
            swimlane = null;\n       let swimlaneId = CUSTOM_SETTINGS.UNDEFINED_SWIMLANE_TITLE;\n       let
            swimlaneName = CUSTOM_SETTINGS.UNDEFINED_SWIMLANE_TITLE;\n \n       if
            (swimlanePage != null) { // using !== null does not work for some reason.\n         swimlaneId
            = swimlanePage.getId();\n         swimlaneName = swimlanePage.getName();\n       }\n
            \n       if (group.swimlaneObject.hasOwnProperty(swimlaneId)) {\n         swimlane
            = group.swimlaneObject[swimlaneId]\n       } else {\n         swimlane
            = {\n           name: '''', //swimlaneName,\n           baseItemElements:
            []\n         }\n         group.swimlaneObject[swimlaneId] = swimlane;\n       }\n
            \n       let baseItem = baseItemElement(page);\n       if (baseItem ===
            null) {\n         return;\n       }\n \n       let subItemPages = page.getIncomingPagesFromAllSpaces(ROADMAP_STRUCTURE.SUBITEM.TYPE,
            ROADMAP_STRUCTURE.SUBITEM.PART_OF);\n       cplace.log(''subItemPages''+subItemPages);\n       cplace.log(''pageName''+page.getName());\n       let
            features = page.get(''cf.cplace.solution.safe.features'');\n       cplace.log(''features''+features)\n       buildSubItems(baseItem,
            subItemPages);\n \n       swimlane.baseItemElements.push(baseItem);\n     });\n   })\n
            \n });\n \n return roadmap(config, qualityLines, groups);\n \n //--------------------------------------------------------------------------------------//\n
            //                                       BUSINESS FUNCTIONS                             //\n
            //--------------------------------------------------------------------------------------//\n
            \n /**\n  * prepare pages for swimlane creation\n  * @param {Page} page\n  *
            @param {Attribute} attribute\n  * @returns {Page[]}\n  */\n function preparePages(page,
            attribute) {\n   let result = [];\n   let value = page.get(attribute,
            false);\n \n   if (value == null || value.length === 0) {\n     return
            [null];\n   }\n \n   const className = typeof value === ''object'' ? String(value.getClass())
            : ''String''\n   switch (className) {\n     case ''class cf.cplace.platform.scripting.api.wrapper.entity.WrappedPage'':\n     case
            ''class cf.cplace.platform.scripting.api.wrapper.entity.WrappedPerson'':\n       result.push(page.get(attribute));\n       break;\n     case
            ''class com.google.common.collect.SingletonImmutableList'':\n     case
            ''class com.google.common.collect.RegularImmutableList'':\n       result
            = page.get(attribute);\n       break;\n     default:\n       cplace.log(''Class
            of '' + value + '' is \"'' + value.class + ''\"'');\n       cplace.log(typeof
            value.class);\n       cplace.log(typeof value);\n   }\n \n   return result;\n
            }\n \n /**\n  * create subItems for base items\n  * @param {Object} baseItem\n  *
            @param {Page[]} subItems\n  */\n function buildSubItems(baseItem, subItems)
            {\n \n   // iterate through all sub items\n   cplace.each(subItems, function
            (subItem) {\n     if (subItem === null) {\n       return;\n     }\n \n     /**\n      *
            Show only certain sub items\n      */\n     /*if ([ROADMAP_STRUCTURE.BASEITEM.PLANNED,ROADMAP_STRUCTURE.BASEITEM.DEVELOPMENT,ROADMAP_STRUCTURE.BASEITEM.LAUNCHED].indexOf(subItem.get(ROADMAP_STRUCTURE.SUBITEM.STATE))
            === -1) {\n       return;\n     }*/\n \n     let subSwimlane = null;\n     let
            subItemCategory = null;\n     let subItemCategoryName = CUSTOM_SETTINGS.UNDEFINED_SUBSWIMLANE_TITLE;\n     let
            subItemCategoryId = CUSTOM_SETTINGS.UNDEFINED_SUBSWIMLANE_TITLE;\n     \n     //
            get swimlane of subitem\n     subItemCategory = subItem.get(ROADMAP_STRUCTURE.SUBITEM.SWIMLANE);\n     //
            if not null save id. If null, a fallback subSwimlane should be used\n     if
            (subItemCategory) {\n       subItemCategoryId = subItemCategory.getId();\n       subItemCategoryName
            = subItemCategory.getName();\n     }\n \n     if (baseItem.subSwimlaneObject.hasOwnProperty(subItemCategoryId))
            {\n       // if the subSwimlane for subItem exist get this subSwimlane\n       subSwimlane
            = baseItem.subSwimlaneObject[subItemCategoryId];\n     } else {\n       //
            if there is no subSwimlane -> create the subSwimlane\n       subSwimlane
            = {\n         name: subItemCategoryName,\n         subItemElements: []\n       }\n       baseItem.subSwimlaneObject[subItemCategoryId]
            = subSwimlane;\n     }\n     // create the subItem object and push to
            subSwimlane\n     let createdSubItem = subItemElement(subItem);\n \n     if
            (createdSubItem === null) {\n       return;\n     }\n \n     subSwimlane.subItemElements.push(createdSubItem);\n   });\n
            }\n \n /**\n  * create roadmap output\n  * @param {import(\"../templates/data-model\").Configuration}
            config\n  * @param {import(\"../templates/data-model\").QualityLine[]}
            qualityLines\n  * @param {Object} groups\n  * @returns\n  */\n function
            roadmap(config, qualityLines, groups) {\n   let groupArray = [];\n   for
            (let key in groups) {\n     for (let keys in groups[key].swimlaneObject)
            {\n \n       cplace.each(groups[key].swimlaneObject[keys].baseItemElements,
            function (baseItemElement) {\n         for (let subSwimlaneKey in baseItemElement.subSwimlaneObject)
            {\n           let subSwimlane = JSON.stringify(baseItemElement.subSwimlaneObject[subSwimlaneKey]);\n           baseItemElement.subSwimlanes.push(JSON.parse(subSwimlane));\n         }\n       });\n
            \n       let swimlane = JSON.stringify(groups[key].swimlaneObject[keys]);\n       groups[key].swimlanes.push(JSON.parse(swimlane));\n     }\n     groupArray.push(groups[key])\n   }\n   return
            {\n     configuration: config,\n     qualityLines: qualityLines,\n     groups:
            groupArray\n   }\n }\n \n /**\n  * create baseItemElement\n  * @param
            {Page} page\n  */\n function baseItemElement(page) {\n   if (page ===
            null) {\n     return null;\n   }\n \n   let startDate = null;\n   let
            endDate = null;\n \n   startDate = page.get(ROADMAP_STRUCTURE.BASEITEM.START_DATE);\n   endDate
            = page.get(ROADMAP_STRUCTURE.BASEITEM.END_DATE);\n \n   // if start or
            end date not set -> nothing to do\n   if (startDate === null || endDate
            === null) {\n     return null;\n   }\n \n   const labelPrefix = page.get(ROADMAP_STRUCTURE.BASEITEM.LABEL_PREFIX);\n   let
            baseItem = {\n     name:page.getName(),\n     id: page.getId(),\n     url:
            page.getUrl(),\n     startDate: startDate.toString(''MM-dd-yyyy''),\n     endDate:
            endDate.toString(''MM-dd-yyyy''),\n     subSwimlanes: [],\n     subSwimlaneObject:
            {}\n   }\n \n   if (config !== null) {\n \n     if (config.colorMap !==
            null && config.colorMap.baseItem !== null && config.colorMap.baseItem.length
            > 0) {\n       const attribute = config.colorMap.baseItem[0].attribute;\n       //
            baseItem.color = page.get(attribute).get(''cf.cplace.solution.roadmap.color'');\n       baseItem.color
            = page.get(attribute);\n     }\n     if (config.hatchingMap !== null &&
            config.hatchingMap.baseItem !== null && config.hatchingMap.baseItem.length
            > 0) {\n       const attribute = config.hatchingMap.baseItem[0].attribute;\n       baseItem.hatching
            = page.get(attribute);\n     }\n \n     if (config.iconMap !== null &&
            config.iconMap.baseItem !== null && config.iconMap.baseItem.length > 0)
            {\n       const attribute = config.iconMap.baseItem[0].attribute;\n       baseItem.icon
            = page.get(attribute);\n     }\n   }\n \n   return baseItem;\n }\n \n
            /**\n  * create subItemElement\n  * @param {Page} page\n  */\n function
            subItemElement(page) {\n   cplace.log(''subItemElement''+page)\n   if
            (page === null) {\n     return null;\n   }\n \n   let startDate = page.get(ROADMAP_STRUCTURE.SUBITEM.START_DATE);\n   let
            endDate = page.get(ROADMAP_STRUCTURE.SUBITEM.END_DATE);\n \n   // if start
            or end date not set -> nothing to do\n   if (startDate === null || endDate
            === null) {\n     return null;\n   }\n \n   let subItem = {\n     name:
            page.getName(),\n     id: page.getId(),\n     url: page.getUrl(),\n     startDate:
            startDate.toString(''MM-dd-yyyy''),\n     endDate: endDate.toString(''MM-dd-yyyy''),\n   }\n
            \n   if (config !== null) {\n \n     if (config.colorMap !== null && config.colorMap.subItem
            !== null && config.colorMap.subItem.length > 0) {\n       const attribute
            = config.colorMap.subItem[0].attribute;\n       subItem.color = page.get(attribute);\n     }\n     if
            (config.hatchingMap !== null && config.hatchingMap.subItem !== null &&
            config.hatchingMap.subItem.length > 0) {\n       const attribute = config.hatchingMap.subItem[0].attribute;\n       subItem.hatching
            = page.get(attribute);\n     }\n     if (config.iconMap !== null && config.iconMap.subItem
            !== null && config.iconMap.subItem.length > 0) {\n       const attribute
            = config.iconMap.subItem[0].attribute;\n       subItem.icon = page.get(attribute);\n     }\n   }\n   cplace.log(''subItem''+subItem)\n   return
            subItem;\n }\n \n //--------------------------------------------------------------------------------------//\n
            //                                       QUALITY LINES.                                 //\n
            //--------------------------------------------------------------------------------------//\n
            \n function createQualityLines(page) {\n   let result = [];\n \n   cplace.each(getPages(ROADMAP_STRUCTURE.QUALITY_LINES.TYPE,
            page), function (event) {\n     let date = event.get(ROADMAP_STRUCTURE.QUALITY_LINES.DATE);\n     let
            isRoadmapRelevant = true //!!event.get(ROADMAP_STRUCTURE.QUALITY_LINES.IS_ROADMAP_RELEVANT)\n
            \n     if (date === null || !isRoadmapRelevant) {\n       return;\n     }\n
            \n     result.push({\n       name: event.getName(),\n       date: date.toString(''MM-dd-yyyy'')\n     });\n   });\n
            \n   return result;\n }\n \n //--------------------------------------------------------------------------------------//\n
            //                                       CONFIGURATION.                                 //\n
            //--------------------------------------------------------------------------------------//\n
            \n function loadConfiguration(enableLinks, branding, page) {\n   let result
            = {\n     hatchingMap: {\n       baseItem: [],\n       subItem: []\n     },\n     colorMap:
            {\n       baseItem: [],\n       subItem: []\n     },\n     iconMap: {\n       baseItem:
            [],\n       subItem: []\n     },\n     groupsOpen: [],\n     enableLinks:
            enableLinks,\n     branding: branding\n   };\n \n   cplace.each(getPages(ROADMAP_STRUCTURE.CONFIGURATION.TYPE,
            page), function (configurationPage) {\n     let configurationType = configurationPage.get(ROADMAP_STRUCTURE.CONFIGURATION.TYPE_MAP);\n     let
            itemType = configurationPage.get(ROADMAP_STRUCTURE.CONFIGURATION.ITEM_TYPE);\n     let
            displayedValue = configurationPage.get(ROADMAP_STRUCTURE.CONFIGURATION.DISPLAYED_VALUE);\n     let
            attribute = configurationPage.get(ROADMAP_STRUCTURE.CONFIGURATION.ATTRIBUTE);\n     let
            values = configurationPage.get(ROADMAP_STRUCTURE.CONFIGURATION.PROPERTY_KEY_VALUES);\n
            \n     result[configurationType][itemType].push({\n       key: displayedValue,\n       value:
            values,\n       attribute: attribute\n     });\n   });\n \n   return result;\n
            }\n \n //--------------------------------------------------------------------------------------//\n
            //                                       HELPER FUNCTIONS                               //\n
            //--------------------------------------------------------------------------------------//\n
            \n function getPages(type, page) {\n   return new Search()\n     .setEmbeddingEntity(page)\n     .add(Filters.embeddingSpace())\n     .add(Filters.type(type))\n     .findAllPages();\n
            }\n \n /**\n  * Log to cplace\n  * @param {any} text\n  */\n function
            log(text) {\n   if (!DEBUG) {\n     return\n   }\n   let logOutput = (typeof
            text !== ''string'') ? JSON.stringify(text) : text;\n \n   cplace.log(logOutput);\n
            }\n \n \n function timeSinceStart(msg) {\n   if (!DEBUG) {\n     return\n   }\n   let
            now = new Date().getTime();\n   cplace.log([(now - START_TIME) + ''ms'',
            (now - LAST_TIME) + ''ms'', msg].join('' -- ''))\n   LAST_TIME = now;\n
            }","upgradeAck":true,"description":""}'
        - name: height
          value: d800
        - name: sortOrder
          value: sAufsteigend
        - name: tableWidgetId
          value: s_gi8oxtef2dwz1ph48dgp91jjp
        collapsed: false
        id: _4b31sozhaao7hgh10dyfm6qmk
        widgetType: de.visualistik.visualRoadmap.widget
      - attributes:
          name: tableWidgetId
          value: s_gi8oxtef2dwz1ph48dgp91jjp
        collapsed: false
        id: _qmkddhbnu8rfka98oovwb5764
        widgetType: cf.platform.connectedTableFilter
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":true},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":true},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":true},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":true},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":true},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":true},{"name":"'cf.cplace.solution.safe.flowTime'","visible":true},{"name":"'cf.cplace.solution.safe.features'","visible":true},{"name":"'cf.cplace.solution.safe.iteration'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.state'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.progressOfFeatures'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfDone'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.state'
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.state","values":["s#15
            - Funnel","s#25 - Analyzing","s#35 - Backlog","s#45 - Implementing","s#55
            - Validating","s#65 - Deploying","s#75 - Releasing","s#85 - Done"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution.reference","referenceOperator":"parentOfEmbeddingPage"}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Capabilities","en":"Capabilities"}
        collapsed: false
        id: _gi8oxtef2dwz1ph48dgp91jjp
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.layoutTabsWidget.cplacejsLayouts
          value: 's{"version":1,"script":"var layoutConfig = {\n    layouts: selectedLayouts,\n    active:
            selectedActiveLayout\n};\n\nreturn layoutConfig;","upgradeAck":true,"description":""}'
        - name: cf.cplace.layoutTabsWidget.layouts
          value: s{"layouts":["cf.cplace.solution.layout.solutionRoadmap","cf.cplace.solution.safe.layout.capabilities"]}
        - name: cf.cplace.layoutTabsWidget.sourceForLayouts
          value: ssimpleLayoutSelection
        collapsed: false
        id: _bmoecevqbr2z91znxq4h7xqju
        widgetType: cf.cplace.layoutTabsWidget.widget
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
          name: content
          value: "r<table class=\"wip-counter\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>&nbsp;</th>\n\
            \t\t\t<th>Funnel</th>\n\t\t\t<th>Analyzing</th>\n\t\t\t<th>Backlog</th>\n\
            \t\t\t<th>Implementing</th>\n\t\t\t<th>Validating</th>\n\t\t\t<th>Deploying</th>\n\
            \t\t\t<th>Releasing</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\
            \t\t\t<td>WIP</td>\n\t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3hicmNsODFpMnRiZzVyb2F2dDc5MnQ1cWkiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjMTUgLSBGdW5uZWxcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3Nsa2czMGFneW56ZGc3dXc5d2ZqZm1vN3AiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjMjUgLSBBbmFseXppbmdcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3N2b2wxaWN2bHNqNWVvN2d4bWNpM3BoanUiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjMzUgLSBCYWNrbG9nXFxcIjtcXG5cXG5jb25zdCBXSVBfTUFQID0gXC8qKiBAdHlwZSB7Y29uc3R9ICpcLyAoe1xcbiAgICBcXFwiIzE1IC0gRnVubmVsXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmZ1bm5lbFdJUExpbWl0XFxcIixcXG4gICAgXFxcIiMyNSAtIEFuYWx5emluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5hbmFseXppbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjMzUgLSBCYWNrbG9nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmJhY2tsb2dXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNDUgLSBJbXBsZW1lbnRpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuaW1wbGVtZW50aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzU1IC0gVmFsaWRhdGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS52YWxpZGF0aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzY1IC0gRGVwbG95aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmRlcGxveWluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM3NSAtIFJlbGVhc2luZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5yZWxlYXNpbmdXSVBMaW1pdFxcXCIsXFxufSk7XFxuXFxuY29uc3QgU09MVVRJT04gPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvKHtcXG4gICAgVFlQRTogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uXFxcIixcXG59KTtcXG5cXG5jb25zdCBDQVBBQklMSVRZID0gXC8qKiBAdHlwZSB7Y29uc3R9ICpcLyAoe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVxcXCIsXFxuICAgIEFUVFI6IHtcXG4gICAgICAgIFNUQVRFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc3RhdGVcXFwiLFxcbiAgICB9LFxcbn0pO1xcblxcbmZ1bmN0aW9uIG1haW4oKSB7XFxuICAgIGNvbnN0IHNvbHV0aW9uID0gZ2V0U29sdXRpb24oZW1iZWRkaW5nUGFnZS5nZXRTcGFjZUlkKCkpO1xcbiAgICBcLyoqIEB0eXBlIHtudW1iZXIgfCBudWxsfSAqXC9cXG4gICAgY29uc3Qgd2lwTGltaXQgPSBzb2x1dGlvbi5nZXQoV0lQX01BUFtTVEFURV0pO1xcblxcbiAgICBpZiAod2lwTGltaXQgPT09IG51bGwpIHtcXG4gICAgICAgIFwvXC8gTm8gV0lQIGxpbWl0IHNldFxcbiAgICAgICAgcmV0dXJuIFxcXCItXFxcIjtcXG4gICAgfVxcblxcbiAgICBjb25zdCBudW1iZXJPZkNhcGFiaWxpdGllcyA9IGdldE51bWJlck9mQ2FwYWJpbGl0aWVzSW5TdGF0ZShzb2x1dGlvbiwgU1RBVEUpO1xcblxcbiAgICByZXR1cm4gYCR7bnVtYmVyT2ZDYXBhYmlsaXRpZXMudG9TdHJpbmcoMTApfVwvJHt3aXBMaW1pdC50b1N0cmluZygxMCl9YDtcXG59XFxuXFxuXC8qKlxcbiAqIEdldCB0aGUgc29sdXRpb24gb2YgdGhlIGVtYmVkZGluZyB3b3Jrc3BhY2VcXG4gKiBAcGFyYW0ge3N0cmluZ30gd29ya3NwYWNlXFxuICogQHJldHVybnMge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59XFxuICpcL1xcbmZ1bmN0aW9uIGdldFNvbHV0aW9uKHdvcmtzcGFjZSkge1xcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgU2VhcmNoKCkuYWRkKEZpbHRlcnMudHlwZShTT0xVVElPTi5UWVBFKSkuYWRkKEZpbHRlcnMuc3BhY2Uod29ya3NwYWNlKSkuZmluZEFsbFBhZ2VzKCk7XFxuICAgIHJldHVybiBJdGVyYWJsZXMuZ2V0Rmlyc3QocmVzdWx0LCBudWxsKTtcXG59XFxuXFxuXC8qKlxcbiAqIEdldCB0aGUgbnVtYmVyIG9mIGNhcGFiaWxpdGllcyBvZiB0aGUgc29sdXRpb24gaW4gdGhlIHByb3ZpZGVkIHN0YXRlXFxuICogQHBhcmFtIHtQYWdlPCdjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zb2x1dGlvbic-fSBzb2x1dGlvblxcbiAqIEBwYXJhbSB7Q3BsYWNlVHlwZXNbJ2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmNhcGFiaWxpdHknXVtcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc3RhdGVcXFwiXX0gc3RhdGVcXG4gKlwvXFxuZnVuY3Rpb24gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBzdGF0ZSkge1xcbiAgICBjb25zdCBudW1iZXJPZkNhcGFiaWxpdGllcyA9IG5ldyBTZWFyY2goKVxcbiAgICAgICAgLmFkZChGaWx0ZXJzLnNwYWNlKHNvbHV0aW9uLmdldFNwYWNlSWQoKSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMudHlwZShDQVBBQklMSVRZLlRZUEUpKVxcbiAgICAgICAgLmFkZChGaWx0ZXJzLmN1c3RvbUF0dHJpYnV0ZShDQVBBQklMSVRZLkFUVFIuU1RBVEUpLmVxKHN0YXRlKSlcXG4gICAgICAgIC5nZXRIaXRDb3VudCgpO1xcbiAgICByZXR1cm4gbnVtYmVyT2ZDYXBhYmlsaXRpZXM7XFxufVxcblxcblxcbnJldHVybiBtYWluKClcIixcInVwZ3JhZGVBY2tcIjp0cnVlLFwiZGVzY3JpcHRpb25cIjpcIlwifSJ9XX1dfQ</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzQ0NHl5OGEwczljZ21mMW01d2d6aGZvNmsiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjNDUgLSBJbXBsZW1lbnRpbmdcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2F0ejB5cjlocW1mdTh2cWo3YWZuZmw1NmgiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjtcXG5cXG5jb25zdCBXSVBfTUFQID0gXC8qKiBAdHlwZSB7Y29uc3R9ICpcLyAoe1xcbiAgICBcXFwiIzE1IC0gRnVubmVsXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmZ1bm5lbFdJUExpbWl0XFxcIixcXG4gICAgXFxcIiMyNSAtIEFuYWx5emluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5hbmFseXppbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjMzUgLSBCYWNrbG9nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmJhY2tsb2dXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNDUgLSBJbXBsZW1lbnRpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuaW1wbGVtZW50aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzU1IC0gVmFsaWRhdGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS52YWxpZGF0aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzY1IC0gRGVwbG95aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmRlcGxveWluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM3NSAtIFJlbGVhc2luZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5yZWxlYXNpbmdXSVBMaW1pdFxcXCIsXFxufSk7XFxuXFxuY29uc3QgU09MVVRJT04gPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvKHtcXG4gICAgVFlQRTogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uXFxcIixcXG59KTtcXG5cXG5jb25zdCBDQVBBQklMSVRZID0gXC8qKiBAdHlwZSB7Y29uc3R9ICpcLyAoe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVxcXCIsXFxuICAgIEFUVFI6IHtcXG4gICAgICAgIFNUQVRFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc3RhdGVcXFwiLFxcbiAgICB9LFxcbn0pO1xcblxcbmZ1bmN0aW9uIG1haW4oKSB7XFxuICAgIGNvbnN0IHNvbHV0aW9uID0gZ2V0U29sdXRpb24oZW1iZWRkaW5nUGFnZS5nZXRTcGFjZUlkKCkpO1xcbiAgICBcLyoqIEB0eXBlIHtudW1iZXIgfCBudWxsfSAqXC9cXG4gICAgY29uc3Qgd2lwTGltaXQgPSBzb2x1dGlvbi5nZXQoV0lQX01BUFtTVEFURV0pO1xcblxcbiAgICBpZiAod2lwTGltaXQgPT09IG51bGwpIHtcXG4gICAgICAgIFwvXC8gTm8gV0lQIGxpbWl0IHNldFxcbiAgICAgICAgcmV0dXJuIFxcXCItXFxcIjtcXG4gICAgfVxcblxcbiAgICBjb25zdCBudW1iZXJPZkNhcGFiaWxpdGllcyA9IGdldE51bWJlck9mQ2FwYWJpbGl0aWVzSW5TdGF0ZShzb2x1dGlvbiwgU1RBVEUpO1xcblxcbiAgICByZXR1cm4gYCR7bnVtYmVyT2ZDYXBhYmlsaXRpZXMudG9TdHJpbmcoMTApfVwvJHt3aXBMaW1pdC50b1N0cmluZygxMCl9YDtcXG59XFxuXFxuXC8qKlxcbiAqIEdldCB0aGUgc29sdXRpb24gb2YgdGhlIGVtYmVkZGluZyB3b3Jrc3BhY2VcXG4gKiBAcGFyYW0ge3N0cmluZ30gd29ya3NwYWNlXFxuICogQHJldHVybnMge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59XFxuICpcL1xcbmZ1bmN0aW9uIGdldFNvbHV0aW9uKHdvcmtzcGFjZSkge1xcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgU2VhcmNoKCkuYWRkKEZpbHRlcnMudHlwZShTT0xVVElPTi5UWVBFKSkuYWRkKEZpbHRlcnMuc3BhY2Uod29ya3NwYWNlKSkuZmluZEFsbFBhZ2VzKCk7XFxuICAgIHJldHVybiBJdGVyYWJsZXMuZ2V0Rmlyc3QocmVzdWx0LCBudWxsKTtcXG59XFxuXFxuXC8qKlxcbiAqIEdldCB0aGUgbnVtYmVyIG9mIGNhcGFiaWxpdGllcyBvZiB0aGUgc29sdXRpb24gaW4gdGhlIHByb3ZpZGVkIHN0YXRlXFxuICogQHBhcmFtIHtQYWdlPCdjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zb2x1dGlvbic-fSBzb2x1dGlvblxcbiAqIEBwYXJhbSB7Q3BsYWNlVHlwZXNbJ2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmNhcGFiaWxpdHknXVtcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc3RhdGVcXFwiXX0gc3RhdGVcXG4gKlwvXFxuZnVuY3Rpb24gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBzdGF0ZSkge1xcbiAgICBjb25zdCBudW1iZXJPZkNhcGFiaWxpdGllcyA9IG5ldyBTZWFyY2goKVxcbiAgICAgICAgLmFkZChGaWx0ZXJzLnNwYWNlKHNvbHV0aW9uLmdldFNwYWNlSWQoKSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMudHlwZShDQVBBQklMSVRZLlRZUEUpKVxcbiAgICAgICAgLmFkZChGaWx0ZXJzLmN1c3RvbUF0dHJpYnV0ZShDQVBBQklMSVRZLkFUVFIuU1RBVEUpLmVxKHN0YXRlKSlcXG4gICAgICAgIC5nZXRIaXRDb3VudCgpO1xcbiAgICByZXR1cm4gbnVtYmVyT2ZDYXBhYmlsaXRpZXM7XFxufVxcblxcblxcbnJldHVybiBtYWluKClcIixcInVwZ3JhZGVBY2tcIjp0cnVlLFwiZGVzY3JpcHRpb25cIjpcIlwifSJ9XX1dfQ</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzIzbnY2bWp1OWZ2dzZjcGhlc3VudXJrMTEiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2RnaXR4dGJzM3kwenhhcmJvdHl3anphdXoiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjNzUgLSBSZWxlYXNpbmdcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t</tr>\n\t</tbody>\n</table>"
        collapsed: false
        id: id_aopgavcepgb6y8x0pew4f676l
        widgetType: cf.cplace.demoWidgets.demoRichString
      - attributes:
        - name: cf.cplace.cboard.columnMapping
          value: s{"mappedAttributes":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","attributeSimpleName":"cf.cplace.solution.safe.state"}],"elements":[{"id":"g9unw5npx6wz3vkjhkjd5p43c","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#15
            - Funnel"],"referenceValues":[]}],"localizedNames":{"de":"Funnel","en":"Funnel"}},{"id":"vznjcj4c9zudtfki7zqhsropa","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#25
            - Analyzing"],"referenceValues":[]}],"localizedNames":{"de":"Analyzing","en":"Analyzing"}},{"id":"g36h066uzhg2i3icylbda9uee","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#35
            - Backlog"],"referenceValues":[]}],"localizedNames":{"de":"Backlog","en":"Backlog"}},{"id":"1l9p3wte5zpwx9hapgbfftnm4","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#45
            - Implementing"],"referenceValues":[]}],"localizedNames":{"de":"Implementing","en":"Implementing"}},{"id":"znv18oi3vfjy9ts87k79v1pdz","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#55
            - Validating"],"referenceValues":[]}],"localizedNames":{"de":"Validating","en":"Validating"}},{"id":"nos4yen8sspfa702npid3fjrx","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#65
            - Deploying"],"referenceValues":[]}],"localizedNames":{"de":"Deploying","en":"Deploying"}},{"id":"77t5tqlfkg222ka3q03d39urv","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#75
            - Releasing"],"referenceValues":[]}],"localizedNames":{"de":"Releasing","en":"Releasing"}},{"id":"fhhc4zt1xa0vbknzklavwl02h","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#85
            - Done"],"referenceValues":[]}],"localizedNames":{"de":"Done","en":"Done"}}],"dynamic":false}
        - name: cf.cplace.cboard.height
          value: d800
        - name: cf.cplace.cboard.searchConfigurations
          value: s{"search":"{\"filters\":[{\"relativeSpace\":\"true\"},{\"types\":[\"cf.cplace.solution.safe.capability\"]}]}","searchId":"fol4wjc1jphsm3xz55lyy1y8c","colorAttribute":{"key":"cf.cplace.solution.safe.capabilityType","selection":{"capability":"#0aa5ff","enabler":"#ffc80c"}},"visibleDateAttribute":"","patternForCardTitle":"","patternForCardDescription":"\u0026lt;cf.cplace.solution.safe.description\u0026gt;","userReference":"cf.cplace.solution.safe.capabilityowner","color":"","attributeTags":[{"attributeSimpleName":"cf.cplace.solution.safe.wsjf","attributeLocalizedName":"","valueLocalizedName":"","color":""},{"attributeSimpleName":"cf.cplace.solution.safe.programIncrement","attributeLocalizedName":"","valueLocalizedName":"","color":""}],"customIconAttributes":[{"enabled":false,"attributeSimpleName":"cf.cplace.solution.safe.capabilityType"}],"cardActions":[{"cardActionId":"default/openInNewTab","enabled":true},{"cardActionId":"default/deleteCard","enabled":true}]}
        - name: cf.cplace.cboard.swimlaneMapping
          value: s{"dynamic":false,"mappedAttributes":[],"elements":[]}
        - name: cf.cplace.cboard.title
          value: m{"de":"Solution Kanban","en":"Solution Kanban"}
        - name: cf.cplace.cboard.visualComponents
          value: s{"unmappedCardsContainerEnabled":false,"unmappedCardsContainerLocalizedNames":{},"cardDetailsViewEnabled":true,"spaceAfterLastColumnEnabled":true,"recentHistoryButtonEnabled":false,"recentHistoryTimeRangeWeeks":2,"addCardButtonEnabled":false}
        collapsed: false
        id: id_qtjgxjv97jo1td4jo97zircmx
        widgetType: cf.cplace.cboard.main.board
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
          name: content
          value: "r<table class=\"wip-counter\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>&nbsp;</th>\n\
            \t\t\t<th>Funnel</th>\n\t\t\t<th>Analyzing</th>\n\t\t\t<th>Backlog</th>\n\
            \t\t\t<th>Implementing</th>\n\t\t\t<th>Validating</th>\n\t\t\t<th>Deploying</th>\n\
            \t\t\t<th>Releasing</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\
            \t\t\t<td>WIP</td>\n\t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3hicmNsODFpMnRiZzVyb2F2dDc5MnQ1cWkiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjMTUgLSBGdW5uZWxcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3Nsa2czMGFneW56ZGc3dXc5d2ZqZm1vN3AiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjMjUgLSBBbmFseXppbmdcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3N2b2wxaWN2bHNqNWVvN2d4bWNpM3BoanUiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjMzUgLSBCYWNrbG9nXFxcIjtcXG5cXG5jb25zdCBXSVBfTUFQID0gXC8qKiBAdHlwZSB7Y29uc3R9ICpcLyAoe1xcbiAgICBcXFwiIzE1IC0gRnVubmVsXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmZ1bm5lbFdJUExpbWl0XFxcIixcXG4gICAgXFxcIiMyNSAtIEFuYWx5emluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5hbmFseXppbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjMzUgLSBCYWNrbG9nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmJhY2tsb2dXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNDUgLSBJbXBsZW1lbnRpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuaW1wbGVtZW50aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzU1IC0gVmFsaWRhdGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS52YWxpZGF0aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzY1IC0gRGVwbG95aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmRlcGxveWluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM3NSAtIFJlbGVhc2luZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5yZWxlYXNpbmdXSVBMaW1pdFxcXCIsXFxufSk7XFxuXFxuY29uc3QgU09MVVRJT04gPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvKHtcXG4gICAgVFlQRTogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uXFxcIixcXG59KTtcXG5cXG5jb25zdCBDQVBBQklMSVRZID0gXC8qKiBAdHlwZSB7Y29uc3R9ICpcLyAoe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVxcXCIsXFxuICAgIEFUVFI6IHtcXG4gICAgICAgIFNUQVRFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc3RhdGVcXFwiLFxcbiAgICB9LFxcbn0pO1xcblxcbmZ1bmN0aW9uIG1haW4oKSB7XFxuICAgIGNvbnN0IHNvbHV0aW9uID0gZ2V0U29sdXRpb24oZW1iZWRkaW5nUGFnZS5nZXRTcGFjZUlkKCkpO1xcbiAgICBcLyoqIEB0eXBlIHtudW1iZXIgfCBudWxsfSAqXC9cXG4gICAgY29uc3Qgd2lwTGltaXQgPSBzb2x1dGlvbi5nZXQoV0lQX01BUFtTVEFURV0pO1xcblxcbiAgICBpZiAod2lwTGltaXQgPT09IG51bGwpIHtcXG4gICAgICAgIFwvXC8gTm8gV0lQIGxpbWl0IHNldFxcbiAgICAgICAgcmV0dXJuIFxcXCItXFxcIjtcXG4gICAgfVxcblxcbiAgICBjb25zdCBudW1iZXJPZkNhcGFiaWxpdGllcyA9IGdldE51bWJlck9mQ2FwYWJpbGl0aWVzSW5TdGF0ZShzb2x1dGlvbiwgU1RBVEUpO1xcblxcbiAgICByZXR1cm4gYCR7bnVtYmVyT2ZDYXBhYmlsaXRpZXMudG9TdHJpbmcoMTApfVwvJHt3aXBMaW1pdC50b1N0cmluZygxMCl9YDtcXG59XFxuXFxuXC8qKlxcbiAqIEdldCB0aGUgc29sdXRpb24gb2YgdGhlIGVtYmVkZGluZyB3b3Jrc3BhY2VcXG4gKiBAcGFyYW0ge3N0cmluZ30gd29ya3NwYWNlXFxuICogQHJldHVybnMge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59XFxuICpcL1xcbmZ1bmN0aW9uIGdldFNvbHV0aW9uKHdvcmtzcGFjZSkge1xcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgU2VhcmNoKCkuYWRkKEZpbHRlcnMudHlwZShTT0xVVElPTi5UWVBFKSkuYWRkKEZpbHRlcnMuc3BhY2Uod29ya3NwYWNlKSkuZmluZEFsbFBhZ2VzKCk7XFxuICAgIHJldHVybiBJdGVyYWJsZXMuZ2V0Rmlyc3QocmVzdWx0LCBudWxsKTtcXG59XFxuXFxuXC8qKlxcbiAqIEdldCB0aGUgbnVtYmVyIG9mIGNhcGFiaWxpdGllcyBvZiB0aGUgc29sdXRpb24gaW4gdGhlIHByb3ZpZGVkIHN0YXRlXFxuICogQHBhcmFtIHtQYWdlPCdjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zb2x1dGlvbic-fSBzb2x1dGlvblxcbiAqIEBwYXJhbSB7Q3BsYWNlVHlwZXNbJ2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmNhcGFiaWxpdHknXVtcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc3RhdGVcXFwiXX0gc3RhdGVcXG4gKlwvXFxuZnVuY3Rpb24gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBzdGF0ZSkge1xcbiAgICBjb25zdCBudW1iZXJPZkNhcGFiaWxpdGllcyA9IG5ldyBTZWFyY2goKVxcbiAgICAgICAgLmFkZChGaWx0ZXJzLnNwYWNlKHNvbHV0aW9uLmdldFNwYWNlSWQoKSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMudHlwZShDQVBBQklMSVRZLlRZUEUpKVxcbiAgICAgICAgLmFkZChGaWx0ZXJzLmN1c3RvbUF0dHJpYnV0ZShDQVBBQklMSVRZLkFUVFIuU1RBVEUpLmVxKHN0YXRlKSlcXG4gICAgICAgIC5nZXRIaXRDb3VudCgpO1xcbiAgICByZXR1cm4gbnVtYmVyT2ZDYXBhYmlsaXRpZXM7XFxufVxcblxcblxcbnJldHVybiBtYWluKClcIixcInVwZ3JhZGVBY2tcIjp0cnVlLFwiZGVzY3JpcHRpb25cIjpcIlwifSJ9XX1dfQ</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzQ0NHl5OGEwczljZ21mMW01d2d6aGZvNmsiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjNDUgLSBJbXBsZW1lbnRpbmdcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2F0ejB5cjlocW1mdTh2cWo3YWZuZmw1NmgiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjtcXG5cXG5jb25zdCBXSVBfTUFQID0gXC8qKiBAdHlwZSB7Y29uc3R9ICpcLyAoe1xcbiAgICBcXFwiIzE1IC0gRnVubmVsXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmZ1bm5lbFdJUExpbWl0XFxcIixcXG4gICAgXFxcIiMyNSAtIEFuYWx5emluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5hbmFseXppbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjMzUgLSBCYWNrbG9nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmJhY2tsb2dXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNDUgLSBJbXBsZW1lbnRpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuaW1wbGVtZW50aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzU1IC0gVmFsaWRhdGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS52YWxpZGF0aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzY1IC0gRGVwbG95aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmRlcGxveWluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM3NSAtIFJlbGVhc2luZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5yZWxlYXNpbmdXSVBMaW1pdFxcXCIsXFxufSk7XFxuXFxuY29uc3QgU09MVVRJT04gPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvKHtcXG4gICAgVFlQRTogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uXFxcIixcXG59KTtcXG5cXG5jb25zdCBDQVBBQklMSVRZID0gXC8qKiBAdHlwZSB7Y29uc3R9ICpcLyAoe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVxcXCIsXFxuICAgIEFUVFI6IHtcXG4gICAgICAgIFNUQVRFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc3RhdGVcXFwiLFxcbiAgICB9LFxcbn0pO1xcblxcbmZ1bmN0aW9uIG1haW4oKSB7XFxuICAgIGNvbnN0IHNvbHV0aW9uID0gZ2V0U29sdXRpb24oZW1iZWRkaW5nUGFnZS5nZXRTcGFjZUlkKCkpO1xcbiAgICBcLyoqIEB0eXBlIHtudW1iZXIgfCBudWxsfSAqXC9cXG4gICAgY29uc3Qgd2lwTGltaXQgPSBzb2x1dGlvbi5nZXQoV0lQX01BUFtTVEFURV0pO1xcblxcbiAgICBpZiAod2lwTGltaXQgPT09IG51bGwpIHtcXG4gICAgICAgIFwvXC8gTm8gV0lQIGxpbWl0IHNldFxcbiAgICAgICAgcmV0dXJuIFxcXCItXFxcIjtcXG4gICAgfVxcblxcbiAgICBjb25zdCBudW1iZXJPZkNhcGFiaWxpdGllcyA9IGdldE51bWJlck9mQ2FwYWJpbGl0aWVzSW5TdGF0ZShzb2x1dGlvbiwgU1RBVEUpO1xcblxcbiAgICByZXR1cm4gYCR7bnVtYmVyT2ZDYXBhYmlsaXRpZXMudG9TdHJpbmcoMTApfVwvJHt3aXBMaW1pdC50b1N0cmluZygxMCl9YDtcXG59XFxuXFxuXC8qKlxcbiAqIEdldCB0aGUgc29sdXRpb24gb2YgdGhlIGVtYmVkZGluZyB3b3Jrc3BhY2VcXG4gKiBAcGFyYW0ge3N0cmluZ30gd29ya3NwYWNlXFxuICogQHJldHVybnMge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59XFxuICpcL1xcbmZ1bmN0aW9uIGdldFNvbHV0aW9uKHdvcmtzcGFjZSkge1xcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgU2VhcmNoKCkuYWRkKEZpbHRlcnMudHlwZShTT0xVVElPTi5UWVBFKSkuYWRkKEZpbHRlcnMuc3BhY2Uod29ya3NwYWNlKSkuZmluZEFsbFBhZ2VzKCk7XFxuICAgIHJldHVybiBJdGVyYWJsZXMuZ2V0Rmlyc3QocmVzdWx0LCBudWxsKTtcXG59XFxuXFxuXC8qKlxcbiAqIEdldCB0aGUgbnVtYmVyIG9mIGNhcGFiaWxpdGllcyBvZiB0aGUgc29sdXRpb24gaW4gdGhlIHByb3ZpZGVkIHN0YXRlXFxuICogQHBhcmFtIHtQYWdlPCdjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zb2x1dGlvbic-fSBzb2x1dGlvblxcbiAqIEBwYXJhbSB7Q3BsYWNlVHlwZXNbJ2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmNhcGFiaWxpdHknXVtcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc3RhdGVcXFwiXX0gc3RhdGVcXG4gKlwvXFxuZnVuY3Rpb24gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBzdGF0ZSkge1xcbiAgICBjb25zdCBudW1iZXJPZkNhcGFiaWxpdGllcyA9IG5ldyBTZWFyY2goKVxcbiAgICAgICAgLmFkZChGaWx0ZXJzLnNwYWNlKHNvbHV0aW9uLmdldFNwYWNlSWQoKSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMudHlwZShDQVBBQklMSVRZLlRZUEUpKVxcbiAgICAgICAgLmFkZChGaWx0ZXJzLmN1c3RvbUF0dHJpYnV0ZShDQVBBQklMSVRZLkFUVFIuU1RBVEUpLmVxKHN0YXRlKSlcXG4gICAgICAgIC5nZXRIaXRDb3VudCgpO1xcbiAgICByZXR1cm4gbnVtYmVyT2ZDYXBhYmlsaXRpZXM7XFxufVxcblxcblxcbnJldHVybiBtYWluKClcIixcInVwZ3JhZGVBY2tcIjp0cnVlLFwiZGVzY3JpcHRpb25cIjpcIlwifSJ9XX1dfQ</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzIzbnY2bWp1OWZ2dzZjcGhlc3VudXJrMTEiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t\t<td><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2RnaXR4dGJzM3kwenhhcmJvdHl3anphdXoiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJcLyoqIEB0eXBlIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSAqXC9cXG5jb25zdCBTVEFURSA9IFxcXCIjNzUgLSBSZWxlYXNpbmdcXFwiO1xcblxcbmNvbnN0IFdJUF9NQVAgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFxcXCIjMTUgLSBGdW5uZWxcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZnVubmVsV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzI1IC0gQW5hbHl6aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmFuYWx5emluZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiMzNSAtIEJhY2tsb2dcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuYmFja2xvZ1dJUExpbWl0XFxcIixcXG4gICAgXFxcIiM0NSAtIEltcGxlbWVudGluZ1xcXCI6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5pbXBsZW1lbnRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNTUgLSBWYWxpZGF0aW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnZhbGlkYXRpbmdXSVBMaW1pdFxcXCIsXFxuICAgIFxcXCIjNjUgLSBEZXBsb3lpbmdcXFwiOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwbG95aW5nV0lQTGltaXRcXFwiLFxcbiAgICBcXFwiIzc1IC0gUmVsZWFzaW5nXFxcIjogXFxcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnJlbGVhc2luZ1dJUExpbWl0XFxcIixcXG59KTtcXG5cXG5jb25zdCBTT0xVVElPTiA9IFwvKiogQHR5cGUge2NvbnN0fSAqXC8oe1xcbiAgICBUWVBFOiBcXFwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb25cXFwiLFxcbn0pO1xcblxcbmNvbnN0IENBUEFCSUxJVFkgPSBcLyoqIEB0eXBlIHtjb25zdH0gKlwvICh7XFxuICAgIFRZUEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XFxcIixcXG4gICAgQVRUUjoge1xcbiAgICAgICAgU1RBVEU6IFxcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCIsXFxuICAgIH0sXFxufSk7XFxuXFxuZnVuY3Rpb24gbWFpbigpIHtcXG4gICAgY29uc3Qgc29sdXRpb24gPSBnZXRTb2x1dGlvbihlbWJlZGRpbmdQYWdlLmdldFNwYWNlSWQoKSk7XFxuICAgIFwvKiogQHR5cGUge251bWJlciB8IG51bGx9ICpcL1xcbiAgICBjb25zdCB3aXBMaW1pdCA9IHNvbHV0aW9uLmdldChXSVBfTUFQW1NUQVRFXSk7XFxuXFxuICAgIGlmICh3aXBMaW1pdCA9PT0gbnVsbCkge1xcbiAgICAgICAgXC9cLyBObyBXSVAgbGltaXQgc2V0XFxuICAgICAgICByZXR1cm4gXFxcIi1cXFwiO1xcbiAgICB9XFxuXFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gZ2V0TnVtYmVyT2ZDYXBhYmlsaXRpZXNJblN0YXRlKHNvbHV0aW9uLCBTVEFURSk7XFxuXFxuICAgIHJldHVybiBgJHtudW1iZXJPZkNhcGFiaWxpdGllcy50b1N0cmluZygxMCl9XC8ke3dpcExpbWl0LnRvU3RyaW5nKDEwKX1gO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBzb2x1dGlvbiBvZiB0aGUgZW1iZWRkaW5nIHdvcmtzcGFjZVxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VcXG4gKiBAcmV0dXJucyB7UGFnZTwnY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc29sdXRpb24nPn1cXG4gKlwvXFxuZnVuY3Rpb24gZ2V0U29sdXRpb24od29ya3NwYWNlKSB7XFxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZWFyY2goKS5hZGQoRmlsdGVycy50eXBlKFNPTFVUSU9OLlRZUEUpKS5hZGQoRmlsdGVycy5zcGFjZSh3b3Jrc3BhY2UpKS5maW5kQWxsUGFnZXMoKTtcXG4gICAgcmV0dXJuIEl0ZXJhYmxlcy5nZXRGaXJzdChyZXN1bHQsIG51bGwpO1xcbn1cXG5cXG5cLyoqXFxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgcHJvdmlkZWQgc3RhdGVcXG4gKiBAcGFyYW0ge1BhZ2U8J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uJz59IHNvbHV0aW9uXFxuICogQHBhcmFtIHtDcGxhY2VUeXBlc1snY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eSddW1xcXCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5zdGF0ZVxcXCJdfSBzdGF0ZVxcbiAqXC9cXG5mdW5jdGlvbiBnZXROdW1iZXJPZkNhcGFiaWxpdGllc0luU3RhdGUoc29sdXRpb24sIHN0YXRlKSB7XFxuICAgIGNvbnN0IG51bWJlck9mQ2FwYWJpbGl0aWVzID0gbmV3IFNlYXJjaCgpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuc3BhY2Uoc29sdXRpb24uZ2V0U3BhY2VJZCgpKSlcXG4gICAgICAgIC5hZGQoRmlsdGVycy50eXBlKENBUEFCSUxJVFkuVFlQRSkpXFxuICAgICAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlKENBUEFCSUxJVFkuQVRUUi5TVEFURSkuZXEoc3RhdGUpKVxcbiAgICAgICAgLmdldEhpdENvdW50KCk7XFxuICAgIHJldHVybiBudW1iZXJPZkNhcGFiaWxpdGllcztcXG59XFxuXFxuXFxucmV0dXJuIG1haW4oKVwiLFwidXBncmFkZUFja1wiOnRydWUsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></td>\n\
            \t\t</tr>\n\t</tbody>\n</table>"
        collapsed: false
        id: id_00cd0wfhv0gyy1nr8ydd1hqip
        widgetType: cf.cplace.demoWidgets.demoRichString
      - attributes:
        - name: cf.cplace.cboard.columnMapping
          value: s{"mappedAttributes":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","attributeSimpleName":"cf.cplace.solution.safe.state"}],"elements":[{"id":"g9unw5npx6wz3vkjhkjd5p43c","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#15
            - Funnel"],"referenceValues":[]}],"localizedNames":{"de":"Funnel","en":"Funnel"}},{"id":"vznjcj4c9zudtfki7zqhsropa","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#25
            - Analyzing"],"referenceValues":[]}],"localizedNames":{"de":"Analyzing","en":"Analyzing"}},{"id":"g36h066uzhg2i3icylbda9uee","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#35
            - Backlog"],"referenceValues":[]}],"localizedNames":{"de":"Backlog","en":"Backlog"}},{"id":"1l9p3wte5zpwx9hapgbfftnm4","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#45
            - Implementing"],"referenceValues":[]}],"localizedNames":{"de":"Implementing","en":"Implementing"}},{"id":"znv18oi3vfjy9ts87k79v1pdz","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#55
            - Validating"],"referenceValues":[]}],"localizedNames":{"de":"Validating","en":"Validating"}},{"id":"nos4yen8sspfa702npid3fjrx","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#65
            - Deploying"],"referenceValues":[]}],"localizedNames":{"de":"Deploying","en":"Deploying"}},{"id":"77t5tqlfkg222ka3q03d39urv","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#75
            - Releasing"],"referenceValues":[]}],"localizedNames":{"de":"Releasing","en":"Releasing"}},{"id":"fhhc4zt1xa0vbknzklavwl02h","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#85
            - Done"],"referenceValues":[]}],"localizedNames":{"de":"Done","en":"Done"}}],"dynamic":false}
        - name: cf.cplace.cboard.height
          value: d700
        - name: cf.cplace.cboard.searchConfigurations
          value: s{"search":"{\"filters\":[{\"relativeSpace\":\"true\"},{\"types\":[\"cf.cplace.solution.safe.capability\"]}]}","searchId":"fol4wjc1jphsm3xz55lyy1y8c","colorAttribute":{"key":"cf.cplace.solution.safe.capabilityType","selection":{"capability":"#0aa5ff","enabler":"#ffc80c"}},"visibleDateAttribute":"","patternForCardTitle":"","patternForCardDescription":"\u0026lt;cf.cplace.solution.safe.description\u0026gt;","userReference":"cf.cplace.solution.safe.capabilityowner","color":"","attributeTags":[{"attributeSimpleName":"cf.cplace.solution.safe.wsjf","attributeLocalizedName":"","valueLocalizedName":"","color":""},{"attributeSimpleName":"cf.cplace.solution.safe.programIncrement","attributeLocalizedName":"","valueLocalizedName":"","color":""}],"customIconAttributes":[{"enabled":false,"attributeSimpleName":"cf.cplace.solution.safe.capabilityType"},{"enabled":true,"attributeSimpleName":"cf.cplace.solution.safe.conflictState"}],"cardActions":[{"cardActionId":"default/openInNewTab","enabled":true},{"cardActionId":"default/deleteCard","enabled":true}]}
        - name: cf.cplace.cboard.swimlaneMapping
          value: s{"dynamic":false,"mappedAttributes":[],"elements":[]}
        - name: cf.cplace.cboard.title
          value: m{"de":"Solution Kanban","en":"Solution Kanban"}
        - name: cf.cplace.cboard.visualComponents
          value: s{"unmappedCardsContainerEnabled":false,"unmappedCardsContainerLocalizedNames":{},"cardDetailsViewEnabled":true,"spaceAfterLastColumnEnabled":true,"recentHistoryButtonEnabled":false,"recentHistoryTimeRangeWeeks":2,"addCardButtonEnabled":false}
        collapsed: false
        id: id_syzb9031ch121bq85rqwjvuhn
        widgetType: cf.cplace.cboard.main.board
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":true},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":true},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":true},{"name":"'cf.cplace.solution.safe.conflictState'","visible":true},{"name":"'cf.cplace.solution.safe.flowTime'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":true},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":true},{"name":"'cf.cplace.solution.safe.definitionOfDone'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.state'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.features'","visible":false},{"name":"'cf.cplace.solution.safe.progressOfFeatures'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.state'
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution.reference","referenceOperator":"parentOfEmbeddingPage"},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.state","values":["s#15
            - Funnel","s#25 - Analyzing","s#35 - Backlog","s#45 - Implementing","s#55
            - Validating","s#65 - Deploying","s#75 - Releasing","s#85 - Done"]}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Capabilities","en":"Capabilities"}
        collapsed: false
        id: _legq82osaci3orzo23cvg1jmk
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.state'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.features'","visible":false},{"name":"'cf.cplace.solution.safe.progressOfFeatures'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfDone'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.state'
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: multiSortColumns
          value: s[{"sortColumn":"'cf.cplace.solution.safe.wsjf'","sortOrder":"desc","sortingPriorityIndex":1}]
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution.reference","referenceOperator":"parentOfEmbeddingPage"},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.state","values":["s#35
            - Backlog"]}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"en":"Backlog","de":"Backlog"}
        collapsed: false
        id: id_8lqbm8x686t3t9e9258xciekn
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 4
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.epicOwner'","visible":true},{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"'cf.cplace.solution.safe.name'","visible":false},{"name":"'cf.cplace.solution.safe.kanbanState'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.businessOutcome'","visible":false},{"name":"'cf.cplace.solution.safe.leadingIndivators'","visible":false},{"name":"'cf.cplace.solution.safe.nfrs'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":false},{"name":"'cf.cplace.solution.safe.implementationStart'","visible":false},{"name":"'cf.cplace.solution.safe.implementationEnd'","visible":false},{"name":"'cf.cplace.solution.safe.funnelEntry'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.portfolio'","visible":false},{"name":"'cf.cplace.solution.safe.valueStream'","visible":false},{"name":"'cf.cplace.solution.safe.dependsOn'","visible":false},{"name":"'cf.cplace.solution.safe.safeMilestones'","visible":false},{"name":"'cf.cplace.solution.safe.conflictState'","visible":false},{"name":"'cf.cplace.solution.safe.progress'","visible":false},{"name":"'cf.cplace.solution.safe.totalPlannedImplementationCosts'","visible":false},{"name":"'cf.cplace.solution.safe.plannedMVPCosts'","visible":false},{"name":"'cf.cplace.solution.safe.actualCosts'","visible":false},{"name":"'cf.cplace.solution.safe.enterpriseArchitect'","visible":false},{"name":"'cf.cplace.solution.safe.objective'","visible":false},{"name":"'cf.cplace.solution.safe.implementationPhase'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.type'","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.type'
        - name: groupOrder
          value: sasc
        - name: height
          value: d600
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.epic"]}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Portfolio Epics","en":"Portfolio Epics"}
        collapsed: false
        id: _p8bo0h21oqcdnfcoyv0wu7kl6
        widgetType: cf.platform.embeddedSearchAsTable
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.epicOwner'","visible":true},{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"'cf.cplace.solution.safe.name'","visible":false},{"name":"'cf.cplace.solution.safe.kanbanState'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.businessOutcome'","visible":false},{"name":"'cf.cplace.solution.safe.leadingIndivators'","visible":false},{"name":"'cf.cplace.solution.safe.nfrs'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":false},{"name":"'cf.cplace.solution.safe.implementationStart'","visible":false},{"name":"'cf.cplace.solution.safe.implementationEnd'","visible":false},{"name":"'cf.cplace.solution.safe.funnelEntry'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.portfolio'","visible":false},{"name":"'cf.cplace.solution.safe.valueStream'","visible":false},{"name":"'cf.cplace.solution.safe.dependsOn'","visible":false},{"name":"'cf.cplace.solution.safe.safeMilestones'","visible":false},{"name":"'cf.cplace.solution.safe.conflictState'","visible":false},{"name":"'cf.cplace.solution.safe.progress'","visible":false},{"name":"'cf.cplace.solution.safe.totalPlannedImplementationCosts'","visible":false},{"name":"'cf.cplace.solution.safe.plannedMVPCosts'","visible":false},{"name":"'cf.cplace.solution.safe.actualCosts'","visible":false},{"name":"'cf.cplace.solution.safe.enterpriseArchitect'","visible":false},{"name":"'cf.cplace.solution.safe.objective'","visible":false},{"name":"'cf.cplace.solution.safe.implementationPhase'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.type'","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.type'
        - name: groupOrder
          value: sasc
        - name: height
          value: d300
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.epic"]},{"not":{"and":[{"types":["cf.cplace.solution.safe.epic"]},{"customIncomingSubSearch":"cf.cplace.solution.safe.portfolioEpic","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.capability"]}]}}]}}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Portfolio Epics ohne Capability","en":"Portfolio Epics without
            Capability"}
        collapsed: true
        id: _ljoyk8ulynggvbm5krppzxb75
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 4
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.program'","visible":false},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":false},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false}]
        - name: connectedTableWidgetId
          value: s_p8bo0h21oqcdnfcoyv0wu7kl6
        - name: groupColumn
          value: s'cf.cplace.solution.safe.capabilityType'
        - name: groupOrder
          value: sasc
        - name: height
          value: d600
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.portfolioEpic","referenceOperator":"connectedTable"},{"relativeCustomReference":"cf.cplace.solution.safe.solution.reference","referenceOperator":"ca_cf.cplace.solution.safe.parent"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"de\":\"Capabilities des ausgew\xE4hlten Epics\",\"en\":\"Capabilities\
            \ of selected epic\"}"
        collapsed: false
        id: _v3dcxeaqrbd67hkuph769s3yt
        widgetType: cf.platform.embeddedSearchAsTable
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.program'","visible":false},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":false},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false}]
        - name: connectedTableWidgetId
          value: s_p8bo0h21oqcdnfcoyv0wu7kl6
        - name: groupColumn
          value: s'cf.cplace.solution.safe.capabilityType'
        - name: groupOrder
          value: sasc
        - name: height
          value: d400
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.portfolioEpic","referenceOperator":"connectedTable"},{"relativeCustomReference":"cf.cplace.solution.safe.solution.reference","referenceOperator":"ca_cf.cplace.solution.safe.parent"},{"not":{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"customIncomingSubSearch":"cf.cplace.solution.safe.capability","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.feature"]}]}
            }]} }]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"de\":\"Capabilities des ausgew\xE4hlten Epics ohne Features\"\
            ,\"en\":\"Capabilities of selected epic without features\"}"
        collapsed: true
        id: _mlovt0rh76j5anph6wsljbkpz
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 4
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.status'","visible":true},{"name":"'cf.cplace.solution.safe.progress'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":false},{"name":"'cf.cplace.solution.safe.dependsOn'","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.safeMilestone'","visible":false},{"name":"'cf.cplace.solution.safe.capability'","visible":false},{"name":"'cf.cplace.solution.safe.release'","visible":false},{"name":"'cf.cplace.solution.safe.releaseDate'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"'cf.cplace.solution.safe.conflictState'","visible":false},{"name":"'cf.cplace.solution.safe.calculateDateConflicts'","visible":false},{"name":"'cf.cplace.solution.safe.calculatedConflicts'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.programKey'","visible":false},{"name":"'cf.cplace.solution.safe.featureType'","visible":false},{"name":"'cf.cplace.solution.safe.teams'","visible":false},{"name":"'cf.cplace.solution.safe.requiresAssistenceOf'","visible":false},{"name":"'cf.cplace.solution.safe.periodStatus'","visible":false},{"name":"'cf.cplace.solution.safe.iterations'","visible":false},{"name":"'cf.cplace.solution.safe.stories'","visible":false},{"name":"'cf.cplace.solution.safe.featureOwner'","visible":false},{"name":"'cf.cplace.solution.safe.storyPointsTotal'","visible":false},{"name":"'cf.cplace.solution.safe.storyPointsDone'","visible":false},{"name":"'cf.cplace.solution.safe.numberStoriesTotal'","visible":false},{"name":"'cf.cplace.solution.safe.numberStoriesOpen'","visible":false},{"name":"'cf.cplace.solution.safe.numberStoriesDone'","visible":false},{"name":"'cf.cplace.solution.safe.manualPrioritization'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false}]
        - name: connectedTableWidgetId
          value: s_v3dcxeaqrbd67hkuph769s3yt
        - name: groupColumn
          value: s'cf.cplace.solution.safe.featureType'
        - name: groupOrder
          value: sasc
        - name: height
          value: d600
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.feature"]},{"relativeCustomReference":"cf.cplace.solution.safe.capability","referenceOperator":"connectedTable"}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"de\":\"Features der ausgew\xE4hlten Capability\",\"en\":\"Features\
            \ of the selected capability\"}"
        collapsed: false
        id: _4b8k8ftc9y70i0jaanbsmgue3
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 8
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.successor'","visible":true},{"name":"'cf.cplace.solution.safe.type'","visible":true},{"name":"'cf.cplace.solution.safe.predecessor'","visible":true},{"name":"'cf.cplace.solution.safe.status'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStartA'","visible":false},{"name":"'cf.cplace.solution.safe.dateA'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEndB'","visible":false},{"name":"'cf.cplace.solution.safe.dateB'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.status'
        - name: groupOrder
          value: sasc
        - name: height
          value: d500
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"types":["cf.cplace.solution.safe.dependency"]},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.status","values":["s25
            - conflict","s35 - resolved"]}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Konflikte","en":"Conflicts"}
        collapsed: false
        id: _rk7lmeeo9sdibkbwvu46zfyzr
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 4
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_95p2u0q0tgxlmhct2il5yl1hs\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_h0xlkha5v0ma6k1woja2kools\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_ebdjbayylb1eshiji9l0lgp0h\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_95p2u0q0tgxlmhct2il5yl1hs\",\"configuration\":\"[{\\\"name\\\":\\\"attributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedStartA\\u0027\\\"}]},{\\\"name\\\":\\\"inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"showAttributeScript\\\",\\\"values\\\":[{\\\"string\\\":\\\"{\\\\\\\"version\\\\\\\":1,\\\\\\\"script\\\\\\\":\\\\\\\"const
            date \\u003d targetEntity.get(\\u0027cf.cplace.solution.safe.plannedStartA\\u0027);\\\\\\\\n\\\\\\\\nif
            (date) {\\\\\\\\n  return true;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleSelectionWidgetId\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u003cempty\\u003e\\\"}]},{\\\"name\\\":\\\"withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.connectedSingleAttribute\"},{\"id\":\"id_h0xlkha5v0ma6k1woja2kools\",\"configuration\":\"[{\\\"name\\\":\\\"attributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedEndB\\u0027\\\"}]},{\\\"name\\\":\\\"inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"showAttributeScript\\\",\\\"values\\\":[{\\\"string\\\":\\\"{\\\\\\\"version\\\\\\\":1,\\\\\\\"script\\\\\\\":\\\\\\\"const
            date \\u003d targetEntity.get(\\u0027cf.cplace.solution.safe.plannedEndB\\u0027);\\\\\\\\n\\\\\\\\nif
            (date) {\\\\\\\\n  return true;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleSelectionWidgetId\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u003cempty\\u003e\\\"}]},{\\\"name\\\":\\\"withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.connectedSingleAttribute\"},{\"id\":\"id_ebdjbayylb1eshiji9l0lgp0h\",\"configuration\":\"[{\\\"name\\\":\\\"attributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.description\\u0027\\\"}]},{\\\"name\\\":\\\"inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleSelectionWidgetId\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u003cempty\\u003e\\\"}]},{\\\"name\\\":\\\"withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.connectedSingleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: "m{\"de\":\"Details des ausgew\xE4hlten Konflikts\",\"en\":\"Details\
            \ of selected conflict\"}"
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.useNewFrontend
          value: bfalse
        - name: height
          value: d500
        - name: singleColumn
          value: btrue
        - name: singleSelectionWidgetId
          value: s_rk7lmeeo9sdibkbwvu46zfyzr
        collapsed: false
        id: _ui6v6ulmuqxp3bmoq6r3ql6oc
        widgetType: cf.cplace.platform.connectedAttributesGroup
- rows:
  - columns:
    - proportion: 3
      widgets:
      - attributes:
        - name: content
          value: 'r<div class="cts-card cts-icon-square-right v2">

            <div class="cts-card-body">

            <div class="cts-card-description cts-card-title-top">

            <div class="cts-card-title"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzk3MnFjcXowa3l4bndqcGFkYmsxd2lzbmsiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJzcGFjZUlkc1wiOltcIm15cjM2aHB3dGZ4ZzA3cjdtbjJwMmFrZmpcIl19LHtcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZXBpY1wiXX1dfSJ9XX1dfQ</embeddedwidget></div>


            <div class="cts-card-subtitle">Epics</div>

            </div>



            </div>

            </div>'
        - name: localizedWidgetTitle
          value: m{"en":"Epics"}
        collapsed: false
        id: _pronuu08tfdqf4gad3oxlwlc4
        widgetType: cf.cplace.demoWidgets.demoRichString
    - proportion: 3
      widgets:
      - attributes:
        - name: content
          value: 'r<div class="cts-card cts-icon-square-right v2">

            <div class="cts-card-body">

            <div class="cts-card-description cts-card-title-top">

            <div class="cts-card-title"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3hmc202MHhsOXZrMnV3bXFoOThtaHFjeTEiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJyZWxhdGl2ZVNwYWNlXCI6XCJ0cnVlXCJ9LHtcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVwiXX1dfSJ9XX1dfQ</embeddedwidget></div>


            <div class="cts-card-subtitle">Capabilities</div>

            </div>



            </div>

            </div>'
        - name: localizedWidgetTitle
          value: m{"de":"Capabilities","en":"Capabilities"}
        collapsed: false
        id: _miucvw9l2vh0vnntf4sr2fnt8
        widgetType: cf.cplace.demoWidgets.demoRichString
    - proportion: 3
      widgets:
      - attributes:
        - name: content
          value: 'r<div class="cts-card cts-icon-square-right v2">

            <div class="cts-card-body">

            <div class="cts-card-description cts-card-title-top">

            <div class="cts-card-title"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2k5c3VlNHVmbGY3NjJmaGMzYXFleG02cG8iLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJ0eXBlc1wiOltcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLmZlYXR1cmVcIl19LHtcImN1c3RvbU91dGdvaW5nU3ViU2VhcmNoXCI6XCJjZi5jcGxhY2Uuc29sdXRpb24uc2FmZS5jYXBhYmlsaXR5XCIsXCJzZWFyY2hcIjp7XCJmaWx0ZXJzXCI6W3tcImNvbnRlbnRUeXBlc1wiOltcInBhZ2VcIl19LHtcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuY2FwYWJpbGl0eVwiXX0se1wicmVsYXRpdmVDdXN0b21SZWZlcmVuY2VcIjpcImNmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnNvbHV0aW9uLnJlZmVyZW5jZVwiLFwicmVmZXJlbmNlT3BlcmF0b3JcIjpcImNhX2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnBhcmVudFwifV19fV19In1dfV19</embeddedwidget></div>


            <div class="cts-card-subtitle">Features</div>

            </div>

            </div>

            </div>'
        - name: localizedWidgetTitle
          value: m{"en":"Features","de":"Features"}
        collapsed: false
        id: _3r4gnc29rqq6q4gxg016rmp53
        widgetType: cf.cplace.demoWidgets.demoRichString
    - proportion: 3
      widgets:
      - attributes:
        - name: content
          value: 'r<div class="cts-card cts-icon-square-right v2">

            <div class="cts-card-body">

            <div class="cts-card-description cts-card-title-top">

            <div class="cts-card-title"><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX3N3ZGc3OWYybGNocTJ4YjJzMG50ZnZxenkiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0ubnVtYmVyT2ZTZWFyY2hSZXN1bHRzIiwicHJvcGVydGllcyI6W3sibmFtZSI6InNlYXJjaCIsInZhbHVlcyI6W3sic3RyaW5nIjoie1wiZmlsdGVyc1wiOlt7XCJyZWxhdGl2ZVNwYWNlXCI6XCJ0cnVlXCJ9LHtcInR5cGVzXCI6W1wiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuZGVwZW5kZW5jeVwiXX0se1wiY3VzdG9tQXR0cmlidXRlTXVsdGlFeGFjdFZhbHVlc1wiOlwiY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUuc3RhdHVzXCIsXCJ2YWx1ZXNcIjpbXCJzMjUgLSBjb25mbGljdFwiXX1dfSJ9XX1dfQ</embeddedwidget></div>


            <div class="cts-card-subtitle">Conflicts</div>

            </div>


            <div class="cts-card-icon"><i class="fa fa-ban"></i></div>

            </div>

            </div>'
        - name: localizedWidgetTitle
          value: m{"en":"Conflicts","de":"Conflicts"}
        collapsed: false
        id: _jbkgf8ewt27hugt67ehnujr99
        widgetType: cf.cplace.demoWidgets.demoRichString
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.layoutTabsWidget.cplacejsLayouts
          value: 's{"version":1,"script":"var layoutConfig = {\n    layouts: selectedLayouts,\n    active:
            selectedActiveLayout\n};\n\nreturn layoutConfig;","upgradeAck":true,"description":""}'
        - name: cf.cplace.layoutTabsWidget.layouts
          value: s{"layouts":["cf.cplace.solution.safe","cf.cplace.solution.safe.layout.backlog","cf.cplace.solution.safe.layout.breakdown","cf.cplace.solution.safe.layout.conflicts"]}
        - name: cf.cplace.layoutTabsWidget.sourceForLayouts
          value: ssimpleLayoutSelection
        collapsed: false
        id: _4t40opzv35e8vamc806hftj0e
        widgetType: cf.cplace.layoutTabsWidget.widget
- rows:
  - columns:
    - proportion: 4
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: sconnectedTable
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"cplace.setLogName(''HC: Prioritization Matrix'')\n\n/**\n
            * Define colors for the chart\n */\n const CHART_LABELS = {\n   XAXIS_TITLE:
            ''<- Cost of Delay ->'',\n   YAXIS_TITLE: ''<- Job Duration ->''\n }\n
            const CHART_COLORS = {\n  PLOTLINES: ''#b5b5b5'',\n  DONT_DO_TEXT: ''#EC7E80'',\n  DO_NEXT_TEXT:
            ''#3A4454'',\n  DO_LATER_TEXT: ''#313C4E'',\n  DO_NOW_TEXT:  ''#7EC587'',\n  ENABLER:
            ''#E6D32B'',\n  CAPABILITY: ''#0CA2D4'',\n}\n\nconst CAPABILITY = {\n    TYPE:''cf.cplace.solution.safe.capability'',\n    ATTR:
            {\n      JOB_SIZE: ''cf.cplace.solution.safe.jobSize'',\n      BUSINESS_VALUE:
            ''cf.cplace.solution.safe.businessValue'',\n      TIME_CRITICALITY: ''cf.cplace.solution.safe.timeCriticality'',\n      RISK_REDUCTION:
            ''cf.cplace.solution.safe.riskReduction'',\n      WSJF: ''cf.cplace.solution.safe.wsjf'',\n      STATUS:
            '''',\n      TYPE: ''cf.cplace.solution.safe.capabilityType''\n    },\n    ENUM_STATUS:
            {\n\n    },\n    ENUM_TYPE: {\n        ENABLER: ''enabler'',\n        CAPABILITY:
            ''capability''\n    }\n  }\n\n/*//find colors for types\nlet typeColorConfigurations
            = new Search()\n  .add(Filters.type(''de.visualistik.visualRoadmap.visualRoadmapConfiguration''))\n  .add(Filters.customAttribute(''de.visualistik.visualRoadmap.configurationTypeMap'').eq(''colorMap''))\n  .add(Filters.customAttribute(''de.visualistik.visualRoadmap.propertyKey'').eq(''cf.cplace.solution.safe.type''))\n  .findAllPages();\n\n  cplace.each(typeColorConfigurations,
            configuration => {\n    let values = configuration.get(''de.visualistik.visualRoadmap.propertyKeyValues'');\n    let
            color = configuration.get(''de.visualistik.visualRoadmap.displayedValue'');\n    if
            (values.indexOf(''#15 - Enabler'') > -1){\n      CHART_COLORS.ENABLER
            = color\n    }\n    if (values.indexOf(''#25 - Epic'') > -1){\n      CHART_COLORS.EPIC
            = color\n    }\n  })*/\n\n  const language = cplace.utils().getCurrentUser().getUserLanguage();\n\n/**\n
            * create serie and data items\n */\nlet serie = createBubbleSerie()\nlet
            maxBubbleSize = 0;\n\ncplace.each(pages, function (capability) {\n    let
            z = capability.get(CAPABILITY.ATTR.WSJF);\n    if (z) {\n        let time
            = capability.get(CAPABILITY.ATTR.TIME_CRITICALITY);\n        let business
            = capability.get(CAPABILITY.ATTR.BUSINESS_VALUE);\n        let risk =
            capability.get(CAPABILITY.ATTR.RISK_REDUCTION);\n        let x = time
            + business + risk;\n        let jobSize = capability.get(CAPABILITY.ATTR.JOB_SIZE);\n        let
            y = switchSize(jobSize);\n        let type = capability.get(CAPABILITY.ATTR.TYPE);\n    \n        if
            (z > maxBubbleSize) {\n            maxBubbleSize = z;\n        }\n        serie.data.push(createDataItem(capability,
            x, y, z, type));\n    }\n});\n\nserie.data.push(createHiddenDataItem(0,
            0, maxBubbleSize));\nserie.data.push(createHiddenDataItem(0, 20, maxBubbleSize));\nserie.data.push(createHiddenDataItem(60,
            0, maxBubbleSize));\nserie.data.push(createHiddenDataItem(60, 20, maxBubbleSize));\n\nlet
            xAxisPlotLines = [];\nlet yAxisPlotLines = [];\n\n// Create quadrant divider\nxAxisPlotLines.push(createQuadrantPlotline(30));\nyAxisPlotLines.push(createQuadrantPlotline(10));\n\n//
            Create labels for each quadrant\nlet label = createLabelPlotline(''DON\\''\\T
            DO'', 0, ''left'',  CHART_COLORS.DONT_DO_TEXT, -10, 37);\nyAxisPlotLines.push(label);\nlabel
            = createLabelPlotline(''DO NEXT'', 0, ''right'',  CHART_COLORS.DO_NEXT_TEXT,
            0, 37);\nyAxisPlotLines.push(label);\nlabel = createLabelPlotline(''DO
            LATER'', 20, ''left'',  CHART_COLORS.DO_LATER_TEXT, -10, -25);\nyAxisPlotLines.push(label);\nlabel
            = createLabelPlotline(''DO NOW'', 20, ''right'',  CHART_COLORS.DO_NOW_TEXT,
            0, -25);\nyAxisPlotLines.push(label);\n\n/**\n * BUILD CHART\n */\nlet
            config = {\n    chart: {\n        type: ''bubble'',\n    },\n\n    legend:
            {\n        enabled: false\n    },\n\n    title: {\n        text: ''''\n    },\n\n    xAxis:
            {\n        title: {\n            text: CHART_LABELS.XAXIS_TITLE\n        },\n        lineWidth:
            0,\n        gridLineWidth: 0,\n        labels: {\n            enabled:
            false\n        },\n        tickWidth: 0,\n        tickInterval: 5,\n        startOnTick:
            false,\n        endOnTick: false,\n        showLastLabel: true,\n        plotLines:
            xAxisPlotLines\n    },\n\n    yAxis: {\n        title: {\n            text:
            CHART_LABELS.YAXIS_TITLE\n        },\n        lineWidth: 0,\n        gridLineWidth:
            0,\n        labels: {\n            enabled: false\n        },\n        tickWidth:
            0,\n        tickInterval: 5,\n        startOnTick: false,\n        endOnTick:
            false,\n        plotLines: yAxisPlotLines\n    },\n\n    tooltip: {\n        useHTML:
            true,\n        headerFormat: '''',\n        pointFormat: ''{point.tooltip}'',\n        style:
            {\n            pointerEvents: ''auto''\n        }\n    },\n\n    plotOptions:
            {\n        bubble: {\n            dataLabels: {\n                enabled:
            false,\n            },\n            minSize: 1,\n            maxSize:
            50\n        }\n    },\n    series: [serie]\n};\n\nreturn config;\n\n/**\n
            * ================\n * HELPER FUNCTIONS\n * ================\n */\n\nfunction
            createBubbleSerie() {\n    return {\n        data: [],\n        marker:
            {\n            fillOpacity: 0.13,\n            lineWidth: 0\n        }\n    };\n}\n\nfunction
            createDataItem(page, x, y, z, type) {\n    let color = getColor(type);\n    let
            rgba = hexToRGBA(color, 0.1);\n    return {\n        name: page.getName(),\n        url:
            page.getUrl(),\n        x: x,\n        y: y,\n        z: z,\n        tooltip:
            getTooltip(page),\n        color: rgba,\n        marker: {\n            lineColor:
            color,\n        },\n        dataLabels: {\n            enabled: true,\n            format:
            ''{point.name}'',\n            style: {\n                textOutline:
            false,\n                color: color\n            }\n        }\n    }\n}\n\nfunction
            getTooltip(page) {\n    let tooltip = ''<a style=\"font-weight:bold\"
            href='' + page.getUrl()+ ''target=\"_blank\">'' + page.getName() + ''</a><br/>''+\n    ''Time
            Criticality: '' + page.get(CAPABILITY.ATTR.TIME_CRITICALITY) + ''<br/>''
            +\n    ''Business Value: '' + page.get(CAPABILITY.ATTR.BUSINESS_VALUE)
            + ''<br/>'' +\n    ''Risk Reduction: '' + page.get(CAPABILITY.ATTR.RISK_REDUCTION)
            + ''<br/>'' +\n    ''Job Size: '' + page.get(CAPABILITY.ATTR.JOB_SIZE)
            + ''<br/>'' +\n    ''<b> WSJF: '' + page.get(CAPABILITY.ATTR.WSJF) + ''<br/>'';\n    //''Status:
            '' + page.get(FEATURE.ATTR.STATUS, language) + ''</b>'';\n    return tooltip;\n}\n\nfunction
            createHiddenDataItem(x, y, z) {\n    return {\n        x: x,\n        y:
            y,\n        z: z,\n        enableMouseTracking: false,\n        marker:
            {\n            enabled: false\n        }\n    }\n}\n\nfunction createQuadrantPlotline(value)
            {\n    return {\n        color: CHART_COLORS.PLOTLINES,\n        dashStyle:
            ''solid'',\n        width: 1,\n        value: value,\n        zIndex:
            3\n    }\n}\n\nfunction createLabelPlotline(text, value, align, color,
            xOffset, yOffset) {\n    return {\n        width: 0,\n        value: value,\n        zIndex:
            3,\n        label: {\n            text: text,\n            align: align,\n            style:
            {\n                color: color,\n                fontWeight: ''bold''\n            },\n            x:
            xOffset,\n            y: yOffset\n        }\n    }\n}\n\nfunction hexToRGBA(hex,
            alpha) {\n    let r = parseInt(hex.slice(1, 3), 16),\n        g = parseInt(hex.slice(3,
            5), 16),\n        b = parseInt(hex.slice(5, 7), 16);\n\n    return \"rgba(\"
            + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n}\n\nfunction
            switchSize(size){\n    let switchedSize\n    switch (size) {\n        case
            20:\n            switchedSize = 1;\n            break;\n        case 13:\n            switchedSize
            = 8;\n            break;\n        case 8:\n            switchedSize =
            13;\n            break;\n        case 5:\n            switchedSize = 16;\n            break;\n        case
            3:\n            switchedSize = 18;\n            break;\n        case 2:\n            switchedSize
            = 19;\n            break;\n        case 1:\n            switchedSize =
            20;\n            break;\n    }\n    return switchedSize;\n}\n\nfunction
            getColor(type){\n    switch (type) {\n        case CAPABILITY.ENUM_TYPE.ENABLER:\n            return
            CHART_COLORS.ENABLER;\n        case CAPABILITY.ENUM_TYPE.CAPABILITY:\n            return
            CHART_COLORS.CAPABILITY\n        default: \n            return ''#b5b5b5''\n    }\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: height
          value: d500
        - name: sortOrder
          value: sAufsteigend
        - name: tableWidgetId
          value: s_b8bymzbqgd3o78k65ngy1a4t3
        - name: title
          value: m{"de":"Priorisierungsmatrix","en":"Prioritization Matrix"}
        collapsed: false
        id: _ki7nz98s75lopkj7swcb8s523
        widgetType: cf.cplace.visualizations.scriptingHighcharts
    - proportion: 8
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.businessValue'","visible":true},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":true},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":true},{"name":"'cf.cplace.solution.safe.jobSize'","visible":true},{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":false},{"name":"'cf.cplace.solution.safe.program'","visible":false},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: height
          value: d500
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: multiSortColumns
          value: s[{"sortColumn":"'cf.cplace.solution.safe.wsjf'","sortOrder":"desc","sortingPriorityIndex":1}]
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.state","values":["s#25
            - Analyzing","s#35 - Backlog"]}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Capabilities","en":"Capabilities"}
        collapsed: false
        id: _b8bymzbqgd3o78k65ngy1a4t3
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 8
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.successor'","visible":true},{"name":"'cf.cplace.solution.safe.type'","visible":true},{"name":"'cf.cplace.solution.safe.predecessor'","visible":true},{"name":"'cf.cplace.solution.safe.status'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStartA'","visible":false},{"name":"'cf.cplace.solution.safe.dateA'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEndB'","visible":false},{"name":"'cf.cplace.solution.safe.dateB'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.status'
        - name: groupOrder
          value: sasc
        - name: height
          value: d400
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"or":[{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.successor","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.capability","cf.cplace.solution.safe.safeMilestone"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"ca_cf.cplace.solution.safe.currentPi"}]}
            }]},{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.predecessor","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.capability","cf.cplace.solution.safe.safeMilestone"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"ca_cf.cplace.solution.safe.currentPi"}]}
            }]}]}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"de\":\"Abh\xE4ngigkeiten von Capabilities im laufenden PI\"\
            ,\"en\":\"Dependencies of capabilities in the current PI\"}"
        collapsed: false
        id: id_gb7uy80p96jb1sj4lqvqxx3e7
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 4
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_95p2u0q0tgxlmhct2il5yl1hs\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_h0xlkha5v0ma6k1woja2kools\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_ebdjbayylb1eshiji9l0lgp0h\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_95p2u0q0tgxlmhct2il5yl1hs\",\"configuration\":\"[{\\\"name\\\":\\\"attributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedStartA\\u0027\\\"}]},{\\\"name\\\":\\\"inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"showAttributeScript\\\",\\\"values\\\":[{\\\"string\\\":\\\"{\\\\\\\"version\\\\\\\":1,\\\\\\\"script\\\\\\\":\\\\\\\"const
            date \\u003d targetEntity.get(\\u0027cf.cplace.solution.safe.plannedStartA\\u0027);\\\\\\\\n\\\\\\\\nif
            (date) {\\\\\\\\n  return true;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleSelectionWidgetId\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u003cempty\\u003e\\\"}]},{\\\"name\\\":\\\"withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.connectedSingleAttribute\"},{\"id\":\"id_h0xlkha5v0ma6k1woja2kools\",\"configuration\":\"[{\\\"name\\\":\\\"attributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.plannedEndB\\u0027\\\"}]},{\\\"name\\\":\\\"inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"showAttributeScript\\\",\\\"values\\\":[{\\\"string\\\":\\\"{\\\\\\\"version\\\\\\\":1,\\\\\\\"script\\\\\\\":\\\\\\\"const
            date \\u003d targetEntity.get(\\u0027cf.cplace.solution.safe.plannedEndB\\u0027);\\\\\\\\n\\\\\\\\nif
            (date) {\\\\\\\\n  return true;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleSelectionWidgetId\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u003cempty\\u003e\\\"}]},{\\\"name\\\":\\\"withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.connectedSingleAttribute\"},{\"id\":\"id_ebdjbayylb1eshiji9l0lgp0h\",\"configuration\":\"[{\\\"name\\\":\\\"attributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.description\\u0027\\\"}]},{\\\"name\\\":\\\"inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"singleSelectionWidgetId\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u003cempty\\u003e\\\"}]},{\\\"name\\\":\\\"withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.connectedSingleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: "m{\"de\":\"Details der ausgew\xE4hlten Abh\xE4ngigkeit\",\"en\"\
            :\"Details of selected dependency\"}"
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.useNewFrontend
          value: bfalse
        - name: height
          value: d400
        - name: singleColumn
          value: btrue
        - name: singleSelectionWidgetId
          value: sid_gb7uy80p96jb1sj4lqvqxx3e7
        collapsed: false
        id: id_h9n56yjmw4ps4gaao1tzofvvp
        widgetType: cf.cplace.platform.connectedAttributesGroup
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.cboard.columnMapping
          value: s{"mappedAttributes":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","attributeSimpleName":"cf.cplace.solution.safe.state"}],"elements":[{"id":"g36h066uzhg2i3icylbda9uee","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#35
            - Backlog"],"referenceValues":[]}],"localizedNames":{"de":"Backlog","en":"Backlog"}},{"id":"1l9p3wte5zpwx9hapgbfftnm4","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#45
            - Implementing"],"referenceValues":[]}],"localizedNames":{"de":"Implementing","en":"Implementing"}},{"id":"znv18oi3vfjy9ts87k79v1pdz","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#55
            - Validating"],"referenceValues":[]}],"localizedNames":{"de":"Validating","en":"Validating"}},{"id":"nos4yen8sspfa702npid3fjrx","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#65
            - Deploying"],"referenceValues":[]}],"localizedNames":{"de":"Deploying","en":"Deploying"}},{"id":"77t5tqlfkg222ka3q03d39urv","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#75
            - Releasing"],"referenceValues":[]}],"localizedNames":{"de":"Releasing","en":"Releasing"}},{"id":"fhhc4zt1xa0vbknzklavwl02h","mappedValues":[{"searchId":"fol4wjc1jphsm3xz55lyy1y8c","values":["#85
            - Done"],"referenceValues":[]}],"localizedNames":{"de":"Done","en":"Done"}}],"dynamic":false}
        - name: cf.cplace.cboard.height
          value: d600
        - name: cf.cplace.cboard.searchConfigurations
          value: s{"search":"{\"filters\":[{\"relativeSpace\":\"true\"},{\"types\":[\"cf.cplace.solution.safe.capability\"]},{\"customOutgoingSubSearch\":\"cf.cplace.solution.safe.programIncrement\",\"search\":{\"filters\":[{\"contentTypes\":[\"page\"]},{\"types\":[\"cf.cplace.solution.safe.programIncrement\"]},{\"spaceIds\":[\"yzsjfzcs3f2n1gs8a27u8o38z\"]},{\"customAttributeMultiExactValues\":\"cf.cplace.solution.safe.periodStatus\",\"values\":[\"s#25
            - active\"]}]} }]}","searchId":"fol4wjc1jphsm3xz55lyy1y8c","colorAttribute":{"key":"cf.cplace.solution.safe.capabilityType","selection":{"capability":"#0aa5ff","enabler":"#ffc80c"}},"visibleDateAttribute":"","patternForCardTitle":"","patternForCardDescription":"\u0026lt;cf.cplace.solution.safe.description\u0026gt;","userReference":"cf.cplace.solution.safe.capabilityowner","color":"","attributeTags":[{"attributeSimpleName":"cf.cplace.solution.safe.jobSize","attributeLocalizedName":"","valueLocalizedName":"","color":""}],"customIconAttributes":[{"enabled":false,"attributeSimpleName":"cf.cplace.solution.safe.capabilityType"},{"enabled":true,"attributeSimpleName":"cf.cplace.solution.safe.conflictState"}],"cardActions":[{"cardActionId":"default/openInNewTab","enabled":true},{"cardActionId":"default/deleteCard","enabled":true}]}
        - name: cf.cplace.cboard.swimlaneMapping
          value: s{"dynamic":false,"mappedAttributes":[],"elements":[]}
        - name: cf.cplace.cboard.title
          value: m{"de":"Solution Kanban","en":"Solution Kanban"}
        - name: cf.cplace.cboard.visualComponents
          value: s{"unmappedCardsContainerEnabled":false,"unmappedCardsContainerLocalizedNames":{},"cardDetailsViewEnabled":true,"spaceAfterLastColumnEnabled":true,"recentHistoryButtonEnabled":false,"recentHistoryTimeRangeWeeks":2,"addCardButtonEnabled":true}
        collapsed: false
        id: _3mptfvem0r8iwqexjefgfxi67
        widgetType: cf.cplace.cboard.main.board
- rows:
  - columns:
    - proportion: 9
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.statement'","visible":true},{"name":"'cf.cplace.solution.safe.commitment'","visible":true},{"name":"'cf.cplace.solution.safe.businessValue'","visible":true},{"name":"'cf.cplace.solution.safe.actualValue'","visible":true},{"name":"'cf.cplace.solution.safe.objectivetitle'","visible":false},{"name":"'cf.cplace.solution.safe.timebox'","visible":false},{"name":"'cf.cplace.solution.safe.SAFeLevel'","visible":false},{"name":"'cf.cplace.solution.safe.SAFeLevel.Reference'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.commitment'
        - name: groupOrder
          value: sasc
        - name: height
          value: d500
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.objective"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.timebox","search":{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]},{"customIncomingSubSearch":"cf.cplace.solution.safe.currentPi","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.solution"]}]}}]}},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.SAFeLevel","values":["s#15
            - Solution"]},{"customAttributeValue":"cf.cplace.solution.safe.SAFeLevel.Reference","linkValue":"page/vaz9x2vt9b4szlugpaz3h8w4p","operator":"equals"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: bfalse
        - name: title
          value: "m{\"de\":\"Objectives f\xFCr Current PI - Solution Level\",\"en\"\
            :\"Objectives for Current PI - Solution Level\"}"
        collapsed: false
        id: _z5a4b5q0ralh4l90mdo95zk34
        widgetType: cf.platform.embeddedSearchAsTable
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.SAFeLevel.Reference'","visible":true},{"name":"'cf.cplace.solution.safe.statement'","visible":true},{"name":"'cf.cplace.solution.safe.commitment'","visible":true},{"name":"'cf.cplace.solution.safe.businessValue'","visible":true},{"name":"'cf.cplace.solution.safe.actualValue'","visible":true},{"name":"'cf.cplace.solution.safe.objectivetitle'","visible":false},{"name":"'cf.cplace.solution.safe.timebox'","visible":false},{"name":"'cf.cplace.solution.safe.SAFeLevel'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupColumn
          value: s'cf.cplace.solution.safe.commitment'
        - name: groupOrder
          value: sasc
        - name: height
          value: d500
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.objective"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.timebox","search":{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]},{"customIncomingSubSearch":"cf.cplace.solution.safe.currentPi","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.solution"]}]}}]}},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.SAFeLevel","values":["s#25
            - Program"]}]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: bfalse
        - name: title
          value: "m{\"de\":\"Objectives f\xFCr Current PI -  Program Level\",\"en\"\
            :\"Objectives for Current PI - Program Level\"}"
        collapsed: false
        id: _b6dpcyaco90jb2f4wvyb8qqy9
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 3
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * HIGHCHART\\n * @customType\
            \ cf.cplace.solution.safe.currentPiDashboard\\n * @layout default layout\\\
            n * @author Christopher W\xF6lfle <christopher.woelfle@cplace.com>\\n\
            \ * @version 1.0\\n * @description Displays the confidence vote of a single\
            \ PI which is passed in via search results as as bar chart\\n */\\n\\\
            nconst CONFIDENCE_VOTE = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.confidenceVote\\\
            \",\\n    ATTR: {\\n        PROGRAMM_INCREMENT: \\\"cf.cplace.solution.safe.confidenceVote.PI\\\
            \",\\n        RESULT: \\\"cf.cplace.solution.safe.confidenceVote.result\\\
            \",\\n        ONE_FINGER: \\\"cf.cplace.solution.safe.confidenceVote.oneFinger\\\
            \",\\n        TWO_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.twoFingers\\\
            \",\\n        THREE_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.threeFingers\\\
            \",\\n        FOUR_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.fourFingers\\\
            \",\\n        FIVE_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.fiveFingers\\\
            \",\\n    },\\n});\\n\\nconst red = \\\"#FF0000\\\";\\nconst orange =\
            \ \\\"#FFA500\\\";\\nconst yellow = \\\"#FFFF00\\\";\\nconst lightgreen\
            \ = \\\"#9ACD32\\\";\\nconst green = \\\"#008000\\\";\\n\\nfunction main()\
            \ {\\n    // @ts-ignore\\n    const confidenceVote = Iterables.getFirst(pages,\
            \ null);\\n\\n    if (!confidenceVote) {\\n        return;\\n    }\\n\\\
            n    const oneFinger = confidenceVote.get(CONFIDENCE_VOTE.ATTR.ONE_FINGER);\\\
            n    const twoFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.TWO_FINGERS);\\\
            n    const threeFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.THREE_FINGERS);\\\
            n    const fourFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.FOUR_FINGERS);\\\
            n    const fiveFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.FIVE_FINGERS);\\\
            n    const totalFingers = oneFinger + 2 * twoFingers + 3 * threeFingers\
            \ + 4 * fourFingers + 5 * fiveFingers;\\n    const numberOfConvidenceVotes\
            \ = oneFinger + twoFingers + threeFingers + fourFingers + fiveFingers;\\\
            n\\n    const averageConfidenceVote = totalFingers / numberOfConvidenceVotes;\\\
            n\\n    // Create the chart\\n    const config = {\\n        chart: {\\\
            n            type: \\\"pie\\\",\\n        },\\n        title: {\\n   \
            \         text: averageConfidenceVote.toFixed(1),\\n            align:\
            \ \\\"center\\\",\\n            verticalAlign: \\\"middle\\\",\\n    \
            \        margin: 0,\\n            useHtml: true,\\n            style:\
            \ {\\n                fontSize: \\\"3vw\\\",\\n                margin:\
            \ 0,\\n                padding: 0,\\n                fontWeight: \\\"\
            bold\\\",\\n                lineHeight: 1,\\n            },\\n       \
            \ },\\n        subtitle: {\\n            text: \\\"Average\\\",\\n   \
            \         align: \\\"center\\\",\\n            verticalAlign: \\\"middle\\\
            \",\\n            y: -30,\\n            style: {\\n                fontWeight:\
            \ \\\"normal\\\",\\n                fontSize: \\\"1vw\\\",\\n        \
            \    },\\n        },\\n        legend: {\\n            enabled: false,\\\
            n            layout: \\\"horizontal\\\",\\n            align: \\\"center\\\
            \",\\n            verticalAlign: \\\"bottom\\\",\\n            itemStyle:\
            \ {\\n                fontWeight: \\\"normal\\\",\\n            },\\n\
            \        },\\n        plotOptions: {\\n            pie: {\\n         \
            \       borderWidth: 10,\\n                cursor: \\\"pointer\\\",\\\
            n                dataLabels: {\\n                    enabled: false,\\\
            n                },\\n                colors: [red, orange, yellow, lightgreen,\
            \ green],\\n            },\\n        },\\n        series: [\\n       \
            \     {\\n                name: \\\"Count\\\",\\n                cursor:\
            \ \\\"pointer\\\",\\n                innerSize: \\\"70%\\\",\\n      \
            \          data: [\\n                    { name: \\\"One Finger\\\", y:\
            \ oneFinger },\\n                    { name: \\\"Two Fingers\\\", y: twoFingers\
            \ },\\n                    { name: \\\"Three Fingers\\\", y: threeFingers\
            \ },\\n                    { name: \\\"Four Fingers\\\", y: fourFingers\
            \ },\\n                    { name: \\\"Five Fingers\\\", y: fiveFingers\
            \ },\\n                ],\\n            },\\n        ],\\n    };\\n  \
            \  return config;\\n}\\n\\n// @ts-ignore\\nreturn main();\",\"upgradeAck\"\
            :true,\"description\":\"\"}"
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.confidenceVote"]},{"relativeCustomReference":"cf.cplace.solution.safe.confidenceVote.PI","referenceOperator":"ca_cf.cplace.solution.safe.currentPi"}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"Confidence Vote Overview","en":"Confidence Vote Overview"}
        collapsed: false
        id: _7jfwgt1jp2e2nj8e9fijee8uo
        widgetType: cf.cplace.visualizations.scriptingHighcharts
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_mv4j143wnxnwvgn3t5agzjkfd\",\"collapsed\":false},{\"id\":\"id_smty2oimwrzojt1lyubx0um7t\",\"collapsed\":false},{\"id\":\"id_cwnc7r3gfnfqkn5zs7f82lsay\",\"collapsed\":false},{\"id\":\"id_br29j87dpaz0967ap3n8aghcx\",\"collapsed\":false},{\"id\":\"id_ze0wspfr2ovscgzc0cvg7mhlw\",\"collapsed\":false},{\"id\":\"id_rg6fuphpmkxzei58kj0g3lupg\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_mv4j143wnxnwvgn3t5agzjkfd\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.localizedAlternativeLabel\\\",\\\"values\\\":[{\\\"localizedString\\\":\\\"{\\\\\\\"de\\\\\\\":\\\\\\\"Confidence
            Vote\\\\\\\",\\\\\\\"en\\\\\\\":\\\\\\\"Confidence Vote\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.result\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_smty2oimwrzojt1lyubx0um7t\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.oneFinger\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_cwnc7r3gfnfqkn5zs7f82lsay\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.twoFingers\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_br29j87dpaz0967ap3n8aghcx\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.threeFingers\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_ze0wspfr2ovscgzc0cvg7mhlw\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.fourFingers\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_rg6fuphpmkxzei58kj0g3lupg\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.fiveFingers\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Confidence Vote","en":"Confidence Vote"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: srelative
        - name: cf.cplace.platform.attributesGroup.relativeSelection
          value: scf.cplace.solution.safe.confidenceVote
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: bfalse
        collapsed: false
        id: _i6t3un6bp20uf2r2my0s5lzr0
        widgetType: cf.cplace.platform.attributesGroup
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: sconnectedTable
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * Displays all items grouped\
            \ by Solution and PI.\\n * Dependencies between items are displayed as\
            \ a line.\\n *\\n * Milestones that lie within the period of the PIs are\
            \ displayed in a separate row.\\n *\\n * @author Christopher W\xF6lfle\\\
            n * @version 15.03.2023\\n */\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       LOG AND DEBUG              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            nconst DEBUG = false;\\ncplace.setLogName(\\\"highcharts-solution-dependency-map\\\
            \");\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       CONFIGURATION              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\nconst CAPABILITY_HEIGHT = 0.3;\\n\\nconst TYPE_CAPABILITY = /** @type\
            \ {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.capability\\\"\
            ,\\n    ATTR: {\\n        TITLE: \\\"cf.cplace.solution.safe.title\\\"\
            ,\\n        TYPE: \\\"cf.cplace.solution.safe.capabilityType\\\",\\n \
            \       FEATURES: \\\"cf.cplace.solution.safe.feature\\\",\\n        PROGRAM:\
            \ \\\"cf.cplace.solution.safe.program\\\",\\n        SOLUTION: \\\"cf.cplace.solution.safe.solution.reference\\\
            \",\\n        PROGRAM_INCREMENT: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n        EPIC: \\\"cf.cplace.solution.safe.portfolioEpic\\\",\\n\
            \        ITERATIONS: \\\"cf.cplace.solution.safe.iteration\\\",\\n   \
            \ },\\n    ENUM: {\\n        TYPE: {\\n            CAPABILITY: \\\"capability\\\
            \",\\n            ENABLER: \\\"enabler\\\",\\n        },\\n    },\\n});\\\
            n\\nconst TYPE_MILESTONE = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.safeMilestone\\\
            \",\\n    ATTR: {\\n        TITLE: \\\"cf.cplace.solution.safe.title\\\
            \",\\n        DATE: \\\"cf.cplace.solution.safe.date\\\",\\n        TYPE:\
            \ \\\"cf.cplace.solution.safe.type\\\",\\n        RELEVANT_FOR: \\\"cf.cplace.solution.safe.relevantFor\\\
            \", // refers to Program\\n    },\\n    ENUM: {\\n        TYPE: {\\n \
            \           PI_MILESTONE: \\\"#15 - PI Meilenstein\\\",\\n           \
            \ FIXED_DATE: \\\"#25 - Fixiertes Datum\\\",\\n            LEARNING_MILESTONE:\
            \ \\\"#35 - Learning Meilenstein\\\",\\n        },\\n    },\\n});\\n\\\
            nconst TYPE_DEPENDENCY = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.dependency\\\
            \",\\n    ATTR: {\\n        A: \\\"cf.cplace.solution.safe.successor\\\
            \",\\n        B: \\\"cf.cplace.solution.safe.predecessor\\\",\\n     \
            \   TYPE: \\\"cf.cplace.solution.safe.type\\\",\\n        STATUS: \\\"\
            cf.cplace.solution.safe.status\\\",\\n        DESCRIPTION: \\\"cf.cplace.solution.safe.description\\\
            \",\\n    },\\n    ENUM: {\\n        TYPE: {\\n            RELATED_TO:\
            \ \\\"related to\\\",\\n            BLOCKED_BY: \\\"blocked by\\\",\\\
            n        },\\n        STATUS: {\\n            IDENTIFIED: \\\"15 - identified\\\
            \",\\n            CONFLICT: \\\"25 - conflict\\\",\\n            RESOLVED:\
            \ \\\"35 - resolved\\\",\\n        },\\n    },\\n});\\n\\n\\nconst TYPE_ITERATION\
            \ = /** @type {const} */ ({\\n    TYPE: 'cf.cplace.solution.safe.iteration',\\\
            n    ATTR: {\\n        TITLE: 'cf.cplace.solution.safe.title',\\n    \
            \    PROGRAM_INCREMENT: 'cf.cplace.solution.safe.programIncrement',\\\
            n        START: 'cf.cplace.solution.safe.startDate',\\n        END: 'cf.cplace.solution.safe.endDate',\\\
            n        PREDECESSOR: 'cf.cplace.solution.safe.predecessor' // Iteration\\\
            n    }\\n});\\n\\nconst COLORS = {\\n    INACTIVE: \\\"#88bbee\\\",\\\
            n    ACTIVE: \\\"#4488aa\\\",\\n    DEPEND: \\\"#888888\\\",\\n    DEPEND_HIGHLIGHT:\
            \ \\\"#A21622\\\",\\n    DEPEND_RESOLVED: \\\"#19ad48\\\",\\n    SAFE_MILESTONE:\
            \ \\\"#3D8F8C\\\",\\n    RELEASE: \\\"#366C81\\\",\\n    MILESTONE_PLOTBAND:\
            \ \\\"#E2F3F2\\\",\\n    RELEASE_PLOTBAND: \\\"#E2EEF3\\\",\\n    CAPABILITY:\
            \ \\\"#0aa5ff\\\",\\n    ENABLER: \\\"#ffc80c\\\",\\n    TODAY_PLOTLINE:\
            \ \\\"lightgrey\\\",\\n};\\n\\nconst CATEGORY = {\\n    SAFE_MILESTONE:\
            \ \\\"SAFe Milestones\\\",\\n};\\n\\nconst ROW_SIZE = {\\n    PERIOD:\
            \ 2,\\n    ITEM: 1,\\n};\\n\\nconst HEIGHTS = {\\n    HEADER: 40,\\n \
            \   ITEM: 25,\\n};\\n\\nconst MAX_DATA_LABEL_LENGTH = 25;\\nconst DATA_LABEL_PADDING\
            \ = 0.05;\\n\\nconst SEPARATOR = {\\n    V: \\\" //VSEP// \\\",\\n   \
            \ H: \\\" --HSEP-- \\\",\\n};\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       INITIALIZATION             \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n/*\\n*****************\\nThis highchart is based on a heatmap, i.e. the\
            \ chart is divided into a set of X * Y equally sized cells.\\n* The first\
            \ column(s) of the cells are used to show the vertical categories (categoriesVertical),\
            \ which are provided as separate \\\"category\\\" series\\n* The first\
            \ row(s) of the cells are used to show the horizontal categories (categoriesHorizontal),\
            \ which are provided as separate \\\"category\\\" series\\n* The rest\
            \ of the cells represent the data itself\\n    * each cell can be identified\
            \ by its set of vertical and horizontal categories saved as 'key' in the\
            \ 'keys'-array in the form of a string like \\\"X Cat Level 1 - X Cat\
            \ Level 2 / Y Cat Level 1 - Y Cat Level 2 - Y Cat Level 3\\\" (in theory\
            \ the levels can be \\\"dynamic\\\", which is not used in this specific\
            \ example. In this example only 1 level is used)\\n    * for each cell\
            \ the number of entities to be shown is counted as 'value' in the 'values'-array.\\\
            n    * the entities for each cell are represented as boxes/cards within\
            \ the cell and are pushed as separate serie to the main data series\\\
            n    * dependencies between entities are represented as separate spline\
            \ series, whereas start and end point of the splines are the left or right\
            \ edge of the corresponding entity boxes/cards on the map\\n\\n/*****\
            \ config options *****/\\n\\nfunction main() {\\n    const ctx = fetchData(Array.from(pages));\\\
            n\\n    if (ctx.capabilities.length === 0 || ctx.periods.length === 0)\
            \ {\\n        return {\\n            title: {\\n                text:\
            \ null,\\n            },\\n        };\\n    }\\n\\n    generateMatrix(ctx);\\\
            n\\n    const chart = generateChartConfig(ctx);\\n\\n    return chart;\\\
            n}\\n// @ts-ignore\\nreturn main();\\n//--------------------------------------------------------------------------------------//\\\
            n//                                    Data Fetching                 \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n * Fetches all required data\\n * @param {Page<any>[]} searchResults\\\
            n * @returns {Context<\\\"cf.cplace.solution.safe.iteration\\\">}\\n */\\\
            nfunction fetchData(searchResults) {\\n    /** @type {Page<'cf.cplace.solution.safe.capability'>[]}\
            \ */\\n    const capabilities = searchResults.filter((page) => page.getBuiltinFeatureValue(\\\
            \"customType\\\") === TYPE_CAPABILITY.TYPE);\\n    const missinCapabilities\
            \ = getMissingCapabilities(capabilities);\\n    capabilities.push(...missinCapabilities);\\\
            n    log(`Added ${missinCapabilities.length} missing items that the input\
            \ items depend on.`);\\n    log(capabilities.length)\\n    const periods\
            \ = getAllPeriods(capabilities);\\n    log(\\\"Periods: \\\" + periods.length);\\\
            n\\n    const programs = getPrograms(capabilities);\\n    const milestones\
            \ = getSafeMilestones(periods);\\n    const dependencies = getDependencies(capabilities);\\\
            n\\n    const capabilitiesById = capabilities.reduce((acc, capability)\
            \ => {\\n        acc[capability.getId()] = { x: 0, y: 0, capability };\\\
            n        return acc;\\n    }, {});\\n\\n    const ctx = {\\n        matrixData:\
            \ undefined,\\n        capabilities,\\n        capabilitiesById,\\n  \
            \      periods,\\n        programs,\\n        milestones,\\n        dependencies,\\\
            n        maxHeight: 1,\\n    };\\n    return ctx;\\n}\\n\\n/**\\n * Searches\
            \ dependencies of the capabilities and returns those capabilities that\
            \ are not yet included\\n * @param {Page<'cf.cplace.solution.safe.capability'>[]}\
            \ capabilities\\n * @return {Page<'cf.cplace.solution.safe.capability'>[]}\\\
            n */\\nfunction getMissingCapabilities(capabilities) {\\n    // @ts-ignore\\\
            n    const newCapabilities = new HashSet();\\n    capabilities.forEach((item)\
            \ => {\\n        // @ts-ignore\\n        const dependencies = Array.from(item.getIncomingPages(TYPE_DEPENDENCY.TYPE,\
            \ TYPE_DEPENDENCY.ATTR.A) || []);\\n        dependencies.forEach((itemDependency)\
            \ => {\\n            const capability = itemDependency.get(TYPE_DEPENDENCY.ATTR.B);\\\
            n            if (isPageOfType(capability, TYPE_CAPABILITY.TYPE)) {\\n\
            \                newCapabilities.add(capability);\\n            }\\n \
            \       });\\n    });\\n    return Array.from(newCapabilities).filter((a)\
            \ => !capabilities.some((b) => b.getId() === a.getId()));\\n}\\n\\n/**\\\
            n * Determines the periods used as columns of the board\\n * @param {Page<\\\
            \"cf.cplace.solution.safe.capability\\\">[]} items Capabilities\\n * @returns\
            \ {Page<\\\"cf.cplace.solution.safe.iteration\\\">[]} Iterations in chronological\
            \ order\\n */\\nfunction getAllPeriods(items) {\\n    // @ts-ignore\\\
            n    const periodsSet = new HashSet();\\n    items.forEach(item => {\\\
            n        const pi = item.get(TYPE_CAPABILITY.ATTR.PROGRAM_INCREMENT);\\\
            n        if (!pi) {\\n            return;\\n        }\\n        const\
            \ iterations = pi.getIncomingPagesFromAllSpaces(TYPE_ITERATION.TYPE, TYPE_ITERATION.ATTR.PROGRAM_INCREMENT);\\\
            n        cplace.each(iterations, iteration => {\\n            periodsSet.add(iteration);\\\
            n        });\\n    });\\n    /** @type {Page<'cf.cplace.solution.safe.iteration'>[]}\
            \ */\\n    const periods = Array.from(periodsSet);\\n    return periods.sort((a,\
            \ b) => a.get(TYPE_ITERATION.ATTR.START).isBefore(b.get(TYPE_ITERATION.ATTR.START))\
            \ ? -1 : 1);\\n}\\n/**\\n * Gets all dependencies of the capabilities\\\
            n * @param {Page<'cf.cplace.solution.safe.capability'>[]} capabilities\
            \ Capabilities\\n * @returns {Page<'cf.cplace.solution.safe.dependency'>[]}\
            \ PIs in chronological order\\n */\\nfunction getDependencies(capabilities)\
            \ {\\n    const dependencies = [];\\n    capabilities.forEach((capabilitiy)\
            \ => {\\n        const itemDependencies = Array.from(\\n            //\
            \ @ts-ignore\\n            capabilitiy.getIncomingPages(TYPE_DEPENDENCY.TYPE,\
            \ TYPE_DEPENDENCY.ATTR.A) || []\\n        );\\n        dependencies.push(...itemDependencies);\\\
            n    });\\n    return dependencies;\\n}\\n/**\\n * @param {Page<\\\"cf.cplace.solution.safe.iteration\\\
            \">[]} iterations\\n * @returns\\n */\\nfunction getSafeMilestones(iterations)\
            \ {\\n    const periodStartDate = iterations.length > 0 ? iterations[0].get(TYPE_ITERATION.ATTR.START)\
            \ : new DateTime();\\n    const periodEndDate = iterations.length > 0\
            \ ? iterations[iterations.length - 1].get(TYPE_ITERATION.ATTR.END) : new\
            \ DateTime();\\n    const safeMilestoneSearch = new Search();\\n    safeMilestoneSearch.add(Filters.embeddingSpace());\\\
            n    safeMilestoneSearch.add(Filters.type(TYPE_MILESTONE.TYPE));\\n  \
            \  safeMilestoneSearch.add(Filters.customAttribute(TYPE_MILESTONE.ATTR.DATE).gte(periodStartDate));\\\
            n    safeMilestoneSearch.add(Filters.customAttribute(TYPE_MILESTONE.ATTR.DATE).lte(periodEndDate));\\\
            n    safeMilestoneSearch.addBuiltinAttributeSort(TYPE_MILESTONE.ATTR.DATE,\
            \ true);\\n    const safeMilestones = safeMilestoneSearch.findAllPages();\\\
            n    // @ts-ignore\\n    return Array.from(safeMilestones);\\n}\\n/**\\\
            n * Get all the programs of the capabilities\\n * @param {Page<'cf.cplace.solution.safe.capability'>[]}\
            \ capabilities\\n * @returns {Page<'cf.cplace.solution.safe.program'>[]}\\\
            n */\\nfunction getPrograms(capabilities) {\\n    // @ts-ignore\\n   \
            \ const programSet = new HashSet();\\n    capabilities.forEach(item =>\
            \ {\\n        const programs = item.get(TYPE_CAPABILITY.ATTR.PROGRAM);\\\
            n        if (!programs) {\\n            return;\\n        }\\n       \
            \ cplace.each(programs, program => programSet.add(program));\\n    });\\\
            n    /** @type {Page<'cf.cplace.solution.safe.program'>[]} */\\n    const\
            \ programms = Array.from(programSet)\\n    return programms.sort((a,b)\
            \ => a.getName().localeCompare(b.getName()));\\n}\\n\\n/**\\n * Generate\
            \ the matrix\\n * @param {Context<\\\"cf.cplace.solution.safe.iteration\\\
            \">} ctx\\n */\\nfunction generateMatrix(ctx) {\\n    /** @type {MatrixData<\\\
            \"cf.cplace.solution.safe.iteration\\\">} */\\n    const matrixData =\
            \ {\\n        headerRow: ctx.periods.map((pi, index) => ({ programIncrement:\
            \ pi, x: index + 2, y: 1 })),\\n        milestoneRow: ctx.milestones,\\\
            n        programms: {},\\n        capabilities: {},\\n    };\\n    let\
            \ yOffset = 3;\\n    ctx.programs.forEach((program) => {\\n        let\
            \ maxNumberOfCapabilitiesPerProgram = 0;\\n\\n        const capabilitiesByPi\
            \ = ctx.periods.map((period, indexPI) => {\\n            const filteredCapabilities\
            \ = ctx.capabilities.filter((capability) => {\\n                const\
            \ programIds = capability.get(TYPE_CAPABILITY.ATTR.PROGRAM)?.map((p) =>\
            \ p.getId()) || [];\\n                // Get all capabilities that are\
            \ associated to the current programm & the current program increment\\\
            n                return programIds.includes(program.getId()) && getLastIteration(capability)?.getId()\
            \ === period.getId();\\n            });\\n            // Check if the\
            \ number of capabilities for this PI is the largest\\n            if (filteredCapabilities.length\
            \ > maxNumberOfCapabilitiesPerProgram) {\\n                maxNumberOfCapabilitiesPerProgram\
            \ = filteredCapabilities.length;\\n            }\\n\\n            return\
            \ filteredCapabilities;\\n        });\\n\\n        const rowHeight = Math.ceil(maxNumberOfCapabilitiesPerProgram\
            \ * CAPABILITY_HEIGHT);\\n        const x = 1;\\n        const y = yOffset\
            \ + (rowHeight - 1) / 2;\\n\\n        // Iterate over the programm Increments\
            \ to put the capabilities in the right place\\n        matrixData.programms[program.getName()]\
            \ = {\\n            program,\\n            data: capabilitiesByPi.map((c)\
            \ => c.map((c) => c.getId())),\\n            x,\\n            y,\\n  \
            \          rowHeight,\\n        };\\n        capabilitiesByPi.map((capabilities,\
            \ indexPI) => {\\n            capabilities.map((capability, indexCapability)\
            \ => {\\n                if (matrixData.capabilities[capability.getId()])\
            \ {\\n                    matrixData.capabilities[capability.getId()].push({\\\
            n                        x: x + 1 + indexPI,\\n                      \
            \  y: y - (rowHeight - 1) / 2 + CAPABILITY_HEIGHT * (indexCapability -\
            \ 1),\\n                        capability,\\n                       \
            \ programId: program.getId(),\\n                    });\\n           \
            \     } else {\\n                    matrixData.capabilities[capability.getId()]\
            \ = [\\n                        {\\n                            x: x +\
            \ 1 + indexPI,\\n                            y: y - (rowHeight - 1) /\
            \ 2 + CAPABILITY_HEIGHT * (indexCapability - 1),\\n                  \
            \          capability,\\n                            programId: program.getId(),\\\
            n                        },\\n                    ];\\n              \
            \  }\\n            });\\n        });\\n        yOffset += rowHeight; //+\
            \ (rowHeight - 1) / 2;\\n    });\\n\\n    const capabilitiesWithoutProgram\
            \ = ctx.capabilities.filter(\\n        (capability) =>\\n            //\
            \ @ts-ignore\\n            !capability.get(TYPE_CAPABILITY.ATTR.PROGRAM)\
            \ || capability.get(TYPE_CAPABILITY.ATTR.PROGRAM).length === 0\\n    );\\\
            n\\n    // Check if there are any capabilities without a programm and\
            \ add them to the matrix\\n    if (capabilitiesWithoutProgram.length >\
            \ 0) {\\n        let maxNumberOfCapabilitiesPerProgram = 0;\\n       \
            \ // Ad capabilities without a program\\n        const capabilitiesWithoutProgrammByPi\
            \ = ctx.periods.map((programIncrement) => {\\n            const filteredCapabilities\
            \ = capabilitiesWithoutProgram.filter(\\n                (capability)\
            \ => getLastIteration(capability)?.getId() === programIncrement.getId()\\\
            n            );\\n\\n            if (filteredCapabilities.length > maxNumberOfCapabilitiesPerProgram)\
            \ {\\n                maxNumberOfCapabilitiesPerProgram = filteredCapabilities.length;\\\
            n            }\\n            return filteredCapabilities;\\n        });\\\
            n\\n        const rowHeight = Math.ceil(maxNumberOfCapabilitiesPerProgram\
            \ * CAPABILITY_HEIGHT);\\n        const x = 1;\\n        const y = yOffset\
            \ + (rowHeight - 1) / 2;\\n\\n        matrixData.programms[\\\"w/o Program\\\
            \"] = {\\n            program: null,\\n            data: capabilitiesWithoutProgrammByPi.map((c)\
            \ => c.map((c) => c.getId())),\\n            x,\\n            y,\\n  \
            \          rowHeight,\\n        };\\n        capabilitiesWithoutProgrammByPi.map((capabilities,\
            \ indexPI) => {\\n            capabilities.map((capability, indexCapability)\
            \ => {\\n                if (matrixData.capabilities[capability.getId()])\
            \ {\\n                    matrixData.capabilities[capability.getId()].push({\\\
            n                        x: x + 1 + indexPI,\\n                      \
            \  y: y - (rowHeight - 1) / 2 + CAPABILITY_HEIGHT * (indexCapability -\
            \ 1),\\n                        capability,\\n                       \
            \ programId: \\\"w/o Program\\\",\\n                    });\\n       \
            \         } else {\\n                    matrixData.capabilities[capability.getId()]\
            \ = [\\n                        {\\n                            x: x +\
            \ 1 + indexPI,\\n                            y: y - (rowHeight - 1) /\
            \ 2 + CAPABILITY_HEIGHT * (indexCapability - 1),\\n                  \
            \          capability,\\n                            programId: \\\"w/o\
            \ Program\\\",\\n                        },\\n                    ];\\\
            n                }\\n            });\\n        });\\n        yOffset +=\
            \ rowHeight;\\n    }\\n    ctx.maxHeight = yOffset;\\n    ctx.matrixData\
            \ = matrixData;\\n}\\n/**\\n *\\n * @param {Context<\\\"cf.cplace.solution.safe.iteration\\\
            \">} ctx\\n */\\nfunction transformMatrixDataIntoSeries(ctx) {\\n    const\
            \ matrixData = ctx.matrixData;\\n\\n    const series = [];\\n\\n    if\
            \ (!matrixData) {\\n        return series;\\n    }\\n\\n    // 1. Add\
            \ PIs\\n    series.push(\\n        ...matrixData.headerRow.map((headerEntry,\
            \ index) => {\\n            return {\\n                name: headerEntry.programIncrement.getName(),\\\
            n                colsize: 1,\\n                rowsize: 1,\\n        \
            \        dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n     \
            \           enableMouseTracking: false,\\n                data: [\\n \
            \                   {\\n                        x: headerEntry.x,\\n \
            \                       y: headerEntry.y,\\n                        value:\
            \ 1,\\n                        name: `<a href=\\\"${headerEntry.programIncrement.getUrl()}\\\
            \">${headerEntry.programIncrement.getName()}</a>`,\\n                \
            \        color: \\\"#dddddd\\\",\\n                    },\\n         \
            \       ],\\n            };\\n        })\\n    );\\n\\n    // 2. Add Milestones\\\
            n    series.push({\\n        name: \\\"SAFe Milestones\\\",\\n       \
            \ colsize: 1,\\n        rowsize: 1,\\n        dataLabels: { rotation:\
            \ 0, color: \\\"#000000\\\" },\\n        enableMouseTracking: false,\\\
            n        data: [{ x: 1, y: 2, value: 1, name: '<a href=\\\"wip\\\">SAFe\
            \ Milestones</a>', color: \\\"#E2F3F2\\\" }],\\n    });\\n\\n    let top\
            \ = true;\\n    const safeMilestoneData = [];\\n\\n    matrixData.milestoneRow.forEach((safeMilestone)\
            \ => {\\n        const safeMilestoneName = safeMilestone.getName();\\\
            n        const safeMilestoneDate = safeMilestone.get(TYPE_MILESTONE.ATTR.DATE);\\\
            n        // @ts-ignore\\n        const safeMilestoneDateString = safeMilestoneDate?.toString(\\\
            \"dd.MM.yyyy\\\");\\n        // get milestone Position\\n        // @ts-ignore\\\
            n        const safeMilestonePosition = getDatePosition(safeMilestoneDate.getMillis(),\
            \ ctx);\\n        // add milestone only if position is not null\\n   \
            \     if (safeMilestonePosition > 0) {\\n            safeMilestoneData.push({\\\
            n                x: safeMilestonePosition,\\n                y: 2,\\n\
            \                name: '<a href=\\\"' + safeMilestone.getUrl() + '\\\"\
            >' + safeMilestoneName + \\\"</a>\\\",\\n                value: safeMilestoneDateString,\\\
            n                dataLabels: {\\n                    verticalAlign: top\
            \ ? \\\"top\\\" : \\\"bottom\\\",\\n                },\\n            });\\\
            n            top = !top;\\n        }\\n    });\\n\\n    series.push({\\\
            n        type: \\\"scatter\\\",\\n        lineWidth: 0,\\n        findNearestPointBy:\
            \ \\\"xy\\\",\\n        data: safeMilestoneData,\\n        marker: {\\\
            n            fillColor: COLORS.SAFE_MILESTONE,\\n        },\\n    });\\\
            n\\n    // 3. Add Programms\\n    let rowHeight = 2.5;\\n    Object.keys(matrixData.programms).forEach((programName)\
            \ => {\\n        const data = matrixData.programms[programName];\\n  \
            \      // Add the Programms\\n        series.push({\\n            name:\
            \ programName,\\n            rowsize: data.rowHeight,\\n            dataLabels:\
            \ { rotation: 0, color: \\\"#000000\\\" },\\n            enableMouseTracking:\
            \ false,\\n            data: [\\n                {\\n                \
            \    x: data.x,\\n                    y: data.y,\\n                  \
            \  value: 1,\\n                    name: `<a href=\\\\\\\"${data.program?.getUrl()\
            \ || \\\"wip\\\"}\\\\\\\">${programName}</a>`,\\n                    color:\
            \ \\\"#dddddd\\\",\\n                },\\n            ],\\n        });\\\
            n        // Add the capabilities of the programm\\n        data.data.map((capabilitiesByPI,\
            \ indexPI) => {\\n            series.push({\\n                name: programName\
            \ + indexPI,\\n                rowsize: CAPABILITY_HEIGHT,\\n        \
            \        colsize: 0.8,\\n                dataLabels: { rotation: 0, color:\
            \ \\\"#000000\\\", overflow: 'justify' },\\n                enableMouseTracking:\
            \ false,\\n                data: capabilitiesByPI.map((capabilityId, indexCapability)\
            \ => {\\n                    const capabilityData = matrixData.capabilities[capabilityId].filter((c)\
            \ => c.programId === (data.program ? data.program.getId() : \\\"w/o Program\\\
            \"))[0];\\n                    const capability = capabilityData.capability;\\\
            n                    const isEnabler = capability.get(TYPE_CAPABILITY.ATTR.TYPE)\
            \ === \\\"enabler\\\";\\n                    return {\\n             \
            \           x: capabilityData.x,\\n                        y: capabilityData.y,\\\
            n                        value: 1,\\n                        name: `<a\
            \ href=\\\\\\\"${capability.getUrl() || \\\"wip\\\"}\\\\\\\">${limitStringSize(capability.getName(),\
            \ 40)}</a>`,\\n                        color: isEnabler ? \\\"#ffc80c\\\
            \" : \\\"#0aa5ff\\\",\\n                    };\\n                }),\\\
            n            });\\n        });\\n        rowHeight += data.rowHeight;\\\
            n    });\\n\\n    // 4. Add Dependencies\\n    ctx.dependencies.forEach((dependency)\
            \ => {\\n        const from = dependency.get(TYPE_DEPENDENCY.ATTR.B);\\\
            n        const to = dependency.get(TYPE_DEPENDENCY.ATTR.A);\\n       \
            \ if (!from || !to) {\\n            return;\\n        }\\n        const\
            \ fromId = from.getId();\\n        const toId = to.getId();\\n\\n    \
            \    const fromCapabilities = ctx.matrixData?.capabilities[fromId];\\\
            n        const toCapabilities = ctx.matrixData?.capabilities[toId];\\\
            n\\n        if (!fromCapabilities) {\\n            return;\\n        }\\\
            n        const maxValue = ctx.maxHeight;\\n        fromCapabilities.forEach((fromCapabilityData)\
            \ => {\\n            let x1 = fromCapabilityData.x;\\n            let\
            \ y1 = fromCapabilityData.y;\\n            // y1 += -0.4 + 0.4 / maxValue\
            \ + ((x1-1) * 0.8) / maxValue;\\n\\n            if (!toCapabilities) {\\\
            n                return;\\n            }\\n            toCapabilities.forEach((toCapabilityData)\
            \ => {\\n                let x2 = toCapabilityData.x;\\n             \
            \   let y2 = toCapabilityData.y;\\n                // y2 += -0.4 + 0.4\
            \ / maxValue + ((x1-1) * 0.8) / maxValue;\\n\\n                const description\
            \ = dependency.get(TYPE_DEPENDENCY.ATTR.DESCRIPTION) || \\\" \\\";\\n\
            \                const dependencyType = dependency.get(TYPE_DEPENDENCY.ATTR.TYPE);\\\
            n                const status = dependency.get(TYPE_DEPENDENCY.ATTR.STATUS);\\\
            n                const dependencySeries = {\\n                    type:\
            \ \\\"spline\\\",\\n                    name: \\\"<b>\\\" + to.getName()\
            \ + \\\"</b><br/>relates to:<br/>\\\" + from.getName() + \\\"<br>\\\"\
            \ + description,\\n                    lineWidth: 1.5,\\n            \
            \        color: COLORS.DEPEND,\\n                    dashStyle: \\\"shortdot\\\
            \",\\n                    findNearestPointBy: \\\"xy\\\",\\n         \
            \           data: [\\n                        { x: x1 + 0.4, y: y1 },\\\
            n                        { x: x1 + 0.45, y: y1 === y2 ? y1 + 0.02 : y1\
            \ },\\n                        { x: x2 - 0.45, y: y1 === y2 ? y2 - 0.02\
            \ : y2 },\\n                        { x: x2 - 0.4, y: y2, marker: { enabled:\
            \ true, symbol: \\\"diamond\\\" } },\\n                    ],\\n     \
            \           };\\n                if (dependencyType === TYPE_DEPENDENCY.ENUM.TYPE.BLOCKED_BY)\
            \ {\\n                    dependencySeries.name = \\\"<b>\\\" + to.getName()\
            \ + \\\"</b><br/>blocked by:<br/>\\\" + from.getName() + \\\"<br>\\\"\
            \ + description;\\n                    // @ts-ignore\\n              \
            \      dependencySeries.dashStyle = null;\\n                }\\n     \
            \           if (status === TYPE_DEPENDENCY.ENUM.STATUS.CONFLICT) {\\n\
            \                    dependencySeries.color = COLORS.DEPEND_HIGHLIGHT;\\\
            n                } else if (status === TYPE_DEPENDENCY.ENUM.STATUS.RESOLVED)\
            \ {\\n                    dependencySeries.color = COLORS.DEPEND_RESOLVED;\\\
            n                }\\n                series.push(dependencySeries);\\\
            n            });\\n        });\\n    });\\n\\n    return series;\\n}\\\
            n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                     Chart Config                 \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n *\\n * @param {Context<\\\"cf.cplace.solution.safe.iteration\\\
            \">} ctx\\n */\\nfunction generateChartConfig(ctx) {\\n    if (!ctx.matrixData)\
            \ {\\n        return;\\n    }\\n    const series = transformMatrixDataIntoSeries(ctx);\\\
            n    // @ts-ignore\\n    const today = new DateTime();\\n    let todayPosition\
            \ = getDatePosition(today.getMillis(), ctx);\\n\\n    return {\\n    \
            \    chart: {\\n            type: \\\"heatmap\\\",\\n            marginTop:\
            \ 0,\\n            marginBottom: 0,\\n            plotBorderWidth: 0,\\\
            n            scrollablePlotArea: {\\n                minHeight: 400,\\\
            n                minWidth: 1000,\\n            },\\n        },\\n    \
            \    title: {\\n            text: null,\\n        },\\n        xAxis:\
            \ {\\n            categories: [],\\n            title: null,\\n      \
            \      gridLineWidth: 0,\\n            lineWidth: 0,\\n            labels:\
            \ {\\n                enabled: false,\\n            },\\n            plotLines:\
            \ [\\n                {\\n                    dashStyle: \\\"dash\\\"\
            ,\\n                    color: COLORS.TODAY_PLOTLINE,\\n             \
            \       width: 2,\\n                    value: todayPosition,\\n     \
            \               zIndex: 1,\\n                },\\n            ],\\n  \
            \      },\\n        yAxis: {\\n            categories: [],\\n        \
            \    title: null,\\n            gridLineWidth: 1,\\n            tickInterval:\
            \ 1,\\n            lineWidth: 0,\\n            min: 1,\\n            max:\
            \ ctx.maxHeight,\\n            labels: {\\n                enabled: false,\\\
            n            },\\n            reversed: true,\\n            scrollbar:\
            \ {\\n                enabled: true,\\n            },\\n            plotBands:\
            \ [\\n                {\\n                    color: COLORS.MILESTONE_PLOTBAND,\\\
            n                    borderColor: \\\"white\\\",\\n                  \
            \  borderWidth: 2,\\n                    from: 1.5,\\n               \
            \     to: 2.5,\\n                    zIndex: 0,\\n                },\\\
            n                // {\\n                //     color: COLORS.RELEASE_PLOTBAND,\\\
            n                //     borderColor: 'white',\\n                //   \
            \  borderWidth: 2,\\n                //     from: 1.5,\\n            \
            \    //     to: 2.5,\\n                //     zIndex: 0\\n           \
            \     // }\\n            ],\\n        },\\n        colors: [\\\"#D5001C\\\
            \", \\\"#92D050\\\"],\\n        colorAxis: {\\n            dataClassColor:\
            \ \\\"category\\\",\\n            dataClasses: [\\n                {\\\
            n                    to: 0.5,\\n                },\\n                {\\\
            n                    from: 0.5,\\n                },\\n            ],\\\
            n        },\\n        legend: {\\n            enabled: false,\\n     \
            \   },\\n        tooltip: {\\n            useHTML: true,\\n          \
            \  followPointer: false,\\n        },\\n        plotOptions: {\\n    \
            \        series: {\\n                borderColor: \\\"#ffffff\\\",\\n\
            \                borderWidth: 2,\\n                dataLabels: {\\n  \
            \                  allowOverlap: false,\\n                    inside:\
            \ true,\\n                    crop: true,\\n                    overflow:\
            \ \\\"justify\\\",\\n                    position: \\\"left\\\",\\n  \
            \                  shape: \\\"circle\\\",\\n                    enabled:\
            \ true,\\n                    color: \\\"#000000\\\",\\n             \
            \       format: \\\"{point.name}\\\",\\n                    style: {\\\
            n                        textOutline: \\\"none\\\",\\n               \
            \         textOverflow: \\\"clip\\\",\\n                    },\\n    \
            \            },\\n                stickyTracking: false,\\n          \
            \      tooltip: {\\n                    headerFormat: \\\"\\\",\\n   \
            \                 pointFormat: \\\"<b>{point.name}</b>\\\",\\n       \
            \             findNearestPointBy: \\\"xy\\\",\\n                },\\n\
            \                states: {\\n                    inactive: {\\n      \
            \                  opacity: 1,\\n                    },\\n           \
            \     },\\n            },\\n            spline: {\\n                tooltip:\
            \ {\\n                    headerFormat: \\\"{series.name}\\\",\\n    \
            \                pointFormat: \\\"\\\",\\n                    findNearestPointBy:\
            \ \\\"xy\\\",\\n                },\\n                marker: {\\n    \
            \                enabled: false,\\n                    fillColor: COLORS.DEPEND,\\\
            n                    radius: 6,\\n                    states: {\\n   \
            \                     hover: {\\n                            enabled:\
            \ false,\\n                        },\\n                    },\\n    \
            \            },\\n            },\\n            scatter: {\\n         \
            \       tooltip: {\\n                    headerFormat: \\\"\\\",\\n  \
            \                  pointFormat: \\\"<b>{point.name}</b><br>{point.value}\\\
            \",\\n                    findNearestPointBy: \\\"xy\\\",\\n         \
            \       },\\n                dataLabels: {\\n                    enabled:\
            \ true,\\n                },\\n                marker: {\\n          \
            \          enabled: true,\\n                    symbol: \\\"diamond\\\"\
            ,\\n                    radius: 10,\\n                    states: {\\\
            n                        hover: {\\n                            enabled:\
            \ true,\\n                        },\\n                    },\\n     \
            \           },\\n            },\\n        },\\n        series: series,\\\
            n        // series: [\\n        //     {\\n        //         name: \\\
            \"PI 22.4\\\",\\n        //         colsize: 1,\\n        //         rowsize:\
            \ 1,\\n        //         dataLabels: { rotation: 0, color: \\\"#000000\\\
            \" },\\n        //         enableMouseTracking: false,\\n        //  \
            \       data: [\\n        //             {\\n        //              \
            \   x: 2,\\n        //                 y: 1,\\n        //            \
            \     value: 1,\\n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/1bk9kpxn7s36vz3w80ji7t5oo/PI-22.4\\\
            \">PI 22.4</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.1\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 3,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/4l6jbaa8qgzinif5qetj499g5/PI-23.1\\\
            \">PI 23.1</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.2\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 4,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/tksr708c2119mek2pzzopu9qb/PI-23.2\\\
            \">PI 23.2</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.3\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 5,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/i4o8azmi8m0oqvqqu3hejgu80/PI-23.3\\\
            \">PI 23.3</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.4\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 6,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/nrymz33xo7ew3x6qcgdk3fl7l/PI-23.4\\\
            \">PI 23.4</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 24.1\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 7,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/0wtzrg3m4bdpfhut5xbgiza73/PI-24.1\\\
            \">PI 24.1</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"SAFe Milestones\\\",\\\
            n        //         colsize: 1,\\n        //         rowsize: 1,\\n  \
            \      //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\\
            n        //         enableMouseTracking: false,\\n        //         data:\
            \ [{ x: 1, y: 2, value: 1, name: '<a href=\\\"wip\\\">SAFe Milestones</a>',\
            \ color: \\\"#E2F3F2\\\" }],\\n        //     },\\n        //     {\\\
            n        //         name: \\\"Smart Infotainment\\\",\\n        //   \
            \      rowsize: 2,\\n        //         dataLabels: { rotation: 0, color:\
            \ \\\"#000000\\\" },\\n        //         enableMouseTracking: false,\\\
            n        //         data: [\\n        //             {\\n        //  \
            \               x: 1,\\n        //                 y: 3.5,\\n        //\
            \                 value: 1,\\n        //                 name: '<a href=\\\
            \"https://solution-templates.cplace.de/large-solution-safe/pages/qg000odouviwwtx4rz2bvaoi8/Smart-Infotainment\\\
            \">Smart Infotainment</a>',\\n        //                 color: \\\"#dddddd\\\
            \",\\n        //             },\\n        //         ],\\n        // \
            \    },\\n        //     {\\n        //         name: \\\"Powertrain and\
            \ Safety\\\",\\n        //         rowsize: 4,\\n        //         dataLabels:\
            \ { rotation: 0, color: \\\"#000000\\\" },\\n        //         enableMouseTracking:\
            \ false,\\n        //         data: [\\n        //             {\\n  \
            \      //                 x: 1,\\n        //                 y: 5 + (4-1)/2,\\\
            n        //                 value: 1,\\n        //                 name:\
            \ '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/4flf7a0349c5ximei6olrhife/Powertrain-and-Safety\\\
            \">Powertrain and Safety</a>',\\n        //                 color: \\\"\
            red\\\",\\n        //             },\\n        //         ],\\n      \
            \  //     },\\n        // ],\\n    };\\n}\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                        Utils                     \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n * Limit string to specified size\\n * @param {string} str\\\
            n * @param {number} maxSize\\n * @returns\\n */\\nfunction limitStringSize(str,\
            \ maxSize) {\\n    if (str.length > maxSize) {\\n        return str.substring(0,\
            \ maxSize - 3) + \\\"...\\\";\\n    }\\n    return str;\\n}\\n\\n/**\\\
            n *\\n * @param {number} date\\n * @param {Context<\\\"cf.cplace.solution.safe.iteration\\\
            \">} ctx\\n * @returns\\n */\\nfunction getDatePosition(date, ctx) {\\\
            n    let xPosition = 0;\\n    ctx.periods.every((pi, idx) => {\\n    \
            \    // @ts-ignore\\n        let categoryStartDate = pi.get(TYPE_ITERATION.ATTR.START)?.getMillis();\\\
            n        // @ts-ignore\\n        let categoryEndDate = pi.get(TYPE_ITERATION.ATTR.END)?.getMillis();\\\
            n\\n        // Check whether release date lies in between start and end\
            \ date of category\\n        if (categoryStartDate && categoryEndDate\
            \ && date >= categoryStartDate && date <= categoryEndDate) {\\n      \
            \      // find x-Value of category and subtract 0.5 for starting point\
            \ as offset\\n            let x = idx + 2 - 0.5;\\n            // calculate\
            \ the relative position of date between Category StartDate and EndDate\
            \ and add it to the offset value\\n            xPosition = x + (date -\
            \ categoryStartDate) / (categoryEndDate - categoryStartDate);\\n     \
            \       // exit the every loop\\n            return false;\\n        }\\\
            n        // continue the every loop\\n        return true;\\n    });\\\
            n    // if there was no match, just return null\\n    return xPosition;\\\
            n}\\n\\n/**\\n * Checks if a cplace page is of the specified type\\n *\
            \ @param {Page} page\\n * @param {string} type\\n * @returns {boolean}\\\
            n */\\nfunction isPageOfType(page, type) {\\n    return page.getBuiltinFeatureValue(\\\
            \"customType\\\") === type;\\n}\\n\\nfunction getLastIteration(item) {\\\
            n    const iterations = Array.from(item.get(TYPE_CAPABILITY.ATTR.ITERATIONS));\\\
            n    let lastIteration = iterations.length > 0 ? iterations[0] : null;\\\
            n    iterations.forEach(iteration => {\\n        if (lastIteration.get(TYPE_ITERATION.ATTR.END).isBefore(iteration.get(TYPE_ITERATION.ATTR.END)))\
            \ {\\n            lastIteration = iteration;\\n        }\\n    });\\n\
            \    log(`Found ${iterations.length} iterations for item \\\"${item.getName()}\\\
            \"`);\\n    if (lastIteration) {\\n        log(`Last iteration \\\"${lastIteration.getName()}\\\
            \" ending ${lastIteration.get(TYPE_ITERATION.ATTR.END).toString()}`);\\\
            n    }\\n    return lastIteration;\\n}\\n\\n/**\\n * Log to cplace\\n\
            \ * @param {any} text\\n */\\nfunction log(text) {\\n    if (!DEBUG) {\\\
            n        return;\\n    }\\n    const logOutput = typeof text !== \\\"\
            string\\\" ? JSON.stringify(text) : text;\\n    cplace.log(logOutput);\\\
            n}\",\"upgradeAck\":true,\"description\":\"\"}"
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: height
          value: d400
        - name: sortOrder
          value: sAufsteigend
        - name: tableWidgetId
          value: s_5gk8c2xvjaqe9uvfunoqvq53e
        - name: title
          value: m{"de":"Solution Planning Board mit Dependencies","en":"Solution
            Planning Board with Dependencies"}
        collapsed: false
        id: _00kxrgpf4mb9cgau69fo5lnsj
        widgetType: cf.cplace.visualizations.scriptingHighcharts
  - columns:
    - proportion: 9
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.title'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":true},{"name":"'cf.cplace.solution.safe.businessValue'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.state'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.wsjf'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: height
          value: d450
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.programIncrement","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.programIncrement"]},{"spaceIds":["yzsjfzcs3f2n1gs8a27u8o38z"]},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.periodStatus","values":["s#25
            - active"]}]} }]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: bfalse
        - name: title
          value: m{"de":"Overview Capabilities Current PI","en":"Overview Capabilities
            Current PI"}
        collapsed: false
        id: _5gk8c2xvjaqe9uvfunoqvq53e
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 3
      widgets:
      - attributes:
        - name: connectedTableWidgetId
          value: s_5gk8c2xvjaqe9uvfunoqvq53e
        - name: groupOrder
          value: sasc
        - name: height
          value: d450
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"or":[{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"relativeCustomReference":"cf.cplace.solution.safe.successor","referenceOperator":"connectedTable"},{"customOutgoingSubSearch":"cf.cplace.solution.safe.predecessor","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.capability","cf.cplace.solution.safe.safeMilestone"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.programIncrement","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.programIncrement"]},{"spaceIds":["yzsjfzcs3f2n1gs8a27u8o38z"]},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.periodStatus","values":["s#25
            - active"]}]} }]} }]},{"and":[{"types":["cf.cplace.solution.safe.dependency"]},{"relativeCustomReference":"cf.cplace.solution.safe.predecessor","referenceOperator":"connectedTable"},{"customOutgoingSubSearch":"cf.cplace.solution.safe.successor","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.capability","cf.cplace.solution.safe.safeMilestone"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.programIncrement","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.programIncrement"]},{"spaceIds":["yzsjfzcs3f2n1gs8a27u8o38z"]},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.periodStatus","values":["s#25
            - active"]}]} }]} }]}]}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"de\":\"Abh\xE4ngigkeiten\",\"en\":\"Dependencies\"}"
        collapsed: false
        id: _cf3t5yd25i6wxm42wc6cyheuf
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 4
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_ytpp7gxdoqytjzgx47mgphg55\",\"collapsed\":false},{\"id\":\"id_ml075cqsvwasgwlaqm1mnduoh\",\"collapsed\":false},{\"id\":\"id_681p6drrgnaeckguqpm93zgls\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_d0xufmxu8q003tkd6oxrdb2dl\",\"collapsed\":false},{\"id\":\"id_lf1gfr08wl7odyxu9nnu94x7d\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_ytpp7gxdoqytjzgx47mgphg55\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.title\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_d0xufmxu8q003tkd6oxrdb2dl\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.startDate\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_lf1gfr08wl7odyxu9nnu94x7d\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.endDate\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_ml075cqsvwasgwlaqm1mnduoh\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.localizedAlternativeLabel\\\",\\\"values\\\":[{\\\"localizedString\\\":\\\"{\\\\\\\"de\\\\\\\":\\\\\\\"Confidence
            Vote\\\\\\\",\\\\\\\"en\\\\\\\":\\\\\\\"Confidence Vote\\\\\\\"}\\\"}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.Result\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_681p6drrgnaeckguqpm93zgls\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.capacity\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"en":"General Information"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: srelative
        - name: cf.cplace.platform.attributesGroup.relativeSelection
          value: scf.cplace.solution.safe.currentPi
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: bfalse
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d300
        collapsed: false
        id: _oiska27b1o9ppp63tv6tn3n4q
        widgetType: cf.cplace.platform.attributesGroup
    - proportion: 8
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * HIGHCHART\\n * @customType\
            \ ccf.cplace.solution.safe.currentPiDashboard\\n * @layout default layout\\\
            n * @author Christopher W\xF6lfle <christopher.woelfle@cplace.com>\\n\
            \ * @version 1.0\\n * @description Displays the PI statistics\\n */\\\
            n\\n/**\\n * Identifier: highchart-programIncrement-progress\\n * Type\
            \ of chart: multi pie chart\\n * Type of search pages: cf.cplace.solution.safe.team,\
            \ cf.cplace.solution.safe.story\\n * Functionality: visualizes different\
            \ kinds of kpis\\n *\\n * INSTRUCTIONS TO ADD CHARTS\\n * 1. Increase\
            \ TOTAL_NUMBER_OF_KPIS +1\\n * 2. Define Following Values\\n *      -\
            \ CX_TITLE\\n *      - CX_ACTUAL\\n *      - CX_ACTUAL_PERCENTAGE\\n *\
            \      - CX_DISPLAY_NUMBER\\n *      - CX_DISPLAY_TEXT\\n *      - CX_COLOR\\\
            n * 3. Create chart\\n *      - createChart(CX_TITLE, CX_ACTUAL_PERCENTAGE,\
            \ CX_DISPLAY_NUMBER, CX_DISPLAY_TEXT, CX_COLOR) {\\n *\\n *\\n * @author\
            \ Lukas Scheiring (cF)\\n * Last edited: 18.08.2022\\n */\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       LOG AND DEBUG              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            nconst DEBUG = false;\\ncplace.setLogName(\\\"highchart-programStartPage-statistics\\\
            \");\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       CONFIGURATION              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\nconst CURRENT_PI_DASHBOARD = {\\n    TYPE: \\\"cf.cplace.solution.safe.currentPiDashboard\\\
            \",\\n    ATTR: {\\n        CURRENT_PI: \\\"cf.cplace.solution.safe.currentPi\\\
            \"\\n    }\\n}\\n\\n//CHART COLOURS\\nconst COLOURS = {\\n    TEXT_COLOR:\
            \ \\\"#003653\\\",\\n    BACKGROUND_COLOR: \\\"#ffffff\\\",\\n    GREY:\
            \ \\\"gray\\\",\\n    RED: \\\"#f30000\\\",\\n    DARK_RED: \\\"#9e0000\\\
            \",\\n    YELLOW: \\\"#ffc700\\\",\\n    GREEN: \\\"#5ab500\\\",\\n  \
            \  BLUE: \\\"#A6CAD8\\\",\\n};\\n\\n//CHART SETTINGS\\nconst TOTAL_NUMBER_OF_KPIS\
            \ = 5;\\nconst Y_POSITION = \\\"40%\\\";\\n\\n//LANGUAGE SETTINGS\\nconst\
            \ NAMINGS = {\\n    de: {\\n        CHART_TITLE: \\\"\\\",\\n    },\\\
            n    en: {\\n        CHART_TITLE: \\\"\\\",\\n    },\\n};\\n\\n//PLACEHOLDER\\\
            nconst PROGRAM_INCREMENT = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n    ATTR: {\\n        TITLE: \\\"cf.cplace.solution.safe.title\\\
            \",\\n        SOLUTION: \\\"cf.cplace.solution.safe.solution\\\",\\n \
            \       START_DATE: \\\"cf.cplace.solution.safe.startDate\\\",\\n    \
            \    END_DATE: \\\"cf.cplace.solution.safe.endDate\\\",\\n        PREDECESSOR:\
            \ \\\"cf.cplace.solution.safe.predecessor\\\",\\n        PERIOD_STATUS:\
            \ \\\"cf.cplace.solution.safe.periodStatus\\\",\\n        CAPACITY: \\\
            \"cf.cplace.solution.safe.capacity\\\",\\n    },\\n});\\n\\nconst CAPABILITY\
            \ = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.capability\\\
            \",\\n    ATTR: {\\n        ACTUAL_START_DATE: \\\"cf.cplace.solution.safe.actualStartDate\\\
            \",\\n        ACTUAL_END_DATE: \\\"cf.cplace.solution.safe.actualEndDate\\\
            \",\\n        PROGRAM_INCREMENT: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n        STATE: \\\"cf.cplace.solution.safe.state\\\",\\n    },\\\
            n    ENUM: {\\n        STATE: {\\n            DONE: \\\"#85 - Done\\\"\
            ,\\n        },\\n    },\\n});\\n\\nconst CONFIDENCE_VOTE = /** @type {const}\
            \ */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.confidenceVote\\\",\\\
            n    ATTR: {\\n        PROGRAMM_INCREMENT: \\\"cf.cplace.solution.safe.confidenceVote.PI\\\
            \",\\n        RESULT: \\\"cf.cplace.solution.safe.confidenceVote.result\\\
            \",\\n        ONE_FINGER: \\\"cf.cplace.solution.safe.confidenceVote.oneFinger\\\
            \",\\n        TWO_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.twoFingers\\\
            \",\\n        THREE_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.threeFingers\\\
            \",\\n        FOUR_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.fourFingers\\\
            \",\\n        FIVE_FINGERS: \\\"cf.cplace.solution.safe.confidenceVote.fiveFingers\\\
            \",\\n    },\\n});\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       INITIALIZATION             \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            nlog(\\\"Start...\\\");\\nlet currentUser = cplace.utils().getCurrentUser();\\\
            nconst userLanguage = currentUser.getUserLanguage();\\n\\n\\nlet programIncrement\
            \ = embeddingPage.get(CURRENT_PI_DASHBOARD.ATTR.CURRENT_PI)\\n\\nlet chartIndex\
            \ = 0;\\n\\n//Container\\nlet capabilities = [];\\n/** @type {Page<'cf.cplace.solution.safe.confidenceVote'>\
            \ | undefined} */\\nlet confidenceVote;\\n\\nlet series = [];\\nlet yAxis\
            \ = [];\\nlet pane = [];\\n\\n//Dates\\nlet piStartDate = programIncrement.get(PROGRAM_INCREMENT.ATTR.START_DATE).withTimeAtStartOfDay();\\\
            nlet piEndDate = programIncrement.get(PROGRAM_INCREMENT.ATTR.END_DATE).withTimeAtStartOfDay();\\\
            nlet today = new DateTime().withTimeAtStartOfDay();\\n\\n//KPIs\\nlet\
            \ totalDaysOfPI = Days.daysBetween(piStartDate, piEndDate).getDays();\\\
            nlet passedDaysOfPI = getPassedDays(piStartDate, piEndDate, today, totalDaysOfPI);\\\
            n\\nlet totalCapacity = programIncrement.get(PROGRAM_INCREMENT.ATTR.CAPACITY);\\\
            nlet velocityOfLastPI = 0;\\nlet totalCapabilities = 0;\\nlet capabilitiesDone\
            \ = 0;\\nlet confidenceVoteAverage = 0;\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       PROCESSING STAGE           \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n// Group pages\\ncplace.each(pages, (page) => {\\n    switch (page.getBuiltinFeatureValue(\\\
            \"customType\\\")) {\\n        case CAPABILITY.TYPE:\\n            capabilities.push(page);\\\
            n            break;\\n        case CONFIDENCE_VOTE.TYPE:\\n          \
            \  confidenceVote = page;\\n            break;\\n        default:\\n \
            \           break;\\n    }\\n});\\n\\ntotalCapabilities = capabilities.length;\\\
            nvelocityOfLastPI = calculateVelocityOfLastPi(programIncrement);\\nconfidenceVoteAverage\
            \ = calculateConfidenceVoteAverage(confidenceVote);\\n\\ncapabilitiesDone\
            \ = capabilities.filter(\\n    (/** @type {Page<'cf.cplace.solution.safe.capability'>}\
            \ */ c) =>\\n        c.get(CAPABILITY.ATTR.STATE) === CAPABILITY.ENUM.STATE.DONE\\\
            n).length;\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       KPIs & CHART               \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n//KPI 1 - Story Points done\\nconst C1_TITLE = \\\"Done Capabilities\
            \ Last PI\\\";\\nconst C1_ACTUAL_VALUE = velocityOfLastPI || 0;\\nconst\
            \ C1_DISPLAY_NUMBER = C1_ACTUAL_VALUE;\\nconst C1_DISPLAY_TEXT = \\\"\
            <b>VELOCITY LAST PI</b><br>\\\";\\nconst C1_COLOR = COLOURS.GREEN;\\n\\\
            ncreateChart(C1_TITLE, C1_ACTUAL_VALUE, C1_DISPLAY_NUMBER, C1_DISPLAY_TEXT,\
            \ C1_COLOR);\\n\\n// KPI 2 - Done Capabilities\\nconst C2_TITLE = \\\"\
            Done Capabilities\\\";\\nconst C2_ACTUAL_PERCENTAGE = Math.round((capabilitiesDone\
            \ / totalCapabilities) * 100) || 0;\\nconst C2_DISPLAY_NUMBER = C2_ACTUAL_PERCENTAGE\
            \ + \\\"%\\\";\\nconst C2_DISPLAY_TEXT = \\\"<b>DONE CAPABILITIES</b><br>\\\
            \" + capabilitiesDone + \\\"/\\\" + totalCapabilities;\\nconst C2_COLOR\
            \ = COLOURS.GREEN;\\n\\ncreateChart(C2_TITLE, C2_ACTUAL_PERCENTAGE, C2_DISPLAY_NUMBER,\
            \ C2_DISPLAY_TEXT, C2_COLOR);\\n\\n// KPI 3 - Load vs Capacity\\nconst\
            \ C3_TITLE = \\\"Load vs. Capacity\\\";\\nconst C3_ACTUAL_PERCENTAGE =\
            \ (totalCapacity && Math.round((totalCapabilities / totalCapacity) * 100))\
            \ || 0;\\nconst C3_DISPLAY_NUMBER = C3_ACTUAL_PERCENTAGE + \\\"%\\\";\\\
            nconst C3_DISPLAY_TEXT = \\\"<b>LOAD VS. CAPACITY</b><br>\\\" + totalCapabilities\
            \ + \\\"/\\\" + totalCapacity;\\n\\nlet c3_color = COLOURS.GREEN;\\nif\
            \ (Math.round((totalCapabilities / totalCapacity) * 100) >= 90) {\\n \
            \   c3_color = COLOURS.YELLOW;\\n    if (Math.round((totalCapabilities\
            \ / totalCapacity) * 100) > 100) {\\n        c3_color = COLOURS.RED;\\\
            n    }\\n}\\n\\ncreateChart(C3_TITLE, C3_ACTUAL_PERCENTAGE, C3_DISPLAY_NUMBER,\
            \ C3_DISPLAY_TEXT, c3_color);\\n\\n// KPI 4 - passed days\\nconst C4_TITLE\
            \ = \\\"Days passed\\\";\\nconst C4_ACTUAL_PERCENTAGE = Math.round((passedDaysOfPI\
            \ / totalDaysOfPI) * 100) || 0;\\nconst C4_DISPLAY_NUMBER = C4_ACTUAL_PERCENTAGE\
            \ + \\\"%\\\";\\nconst C4_DISPLAY_TEXT = \\\"<b>DAYS PASSED</b><br>\\\"\
            \ + passedDaysOfPI + \\\"/\\\" + totalDaysOfPI;\\nconst C4_COLOR = COLOURS.GREEN;\\\
            n\\ncreateChart(C4_TITLE, C4_ACTUAL_PERCENTAGE, C4_DISPLAY_NUMBER, C4_DISPLAY_TEXT,\
            \ C4_COLOR);\\n\\n// KPI 5 - Confidence Vote\\nconst C5_TITLE = \\\"Average\
            \ Confidence Vote\\\";\\nconst C5_ACTUAL_PERCENTAGE = Math.round((confidenceVoteAverage\
            \ / 5) * 100) || 0;\\nconst C5_DISPLAY_NUMBER = confidenceVoteAverage.toFixed(1);\\\
            nconst C5_DISPLAY_TEXT = \\\"<b>AVG. CONFIDENCE VOTE</b><br>\\\";\\nconst\
            \ C5_COLOR = getConvidenceVoteColors(confidenceVoteAverage);\\n\\ncreateChart(C5_TITLE,\
            \ C5_ACTUAL_PERCENTAGE, C5_DISPLAY_NUMBER, C5_DISPLAY_TEXT, C5_COLOR);\\\
            n\\nlog(\\\"End...\\\");\\n\\n// @ts-ignore\\nreturn {\\n    chart: {\\\
            n        type: \\\"solidgauge\\\",\\n    },\\n\\n    title: {\\n     \
            \   text: NAMINGS[userLanguage].CHART_TITLE,\\n    },\\n    series: series,\\\
            n    yAxis: yAxis,\\n    pane: pane,\\n    tooltip: {\\n        enabled:\
            \ false,\\n    },\\n    plotOptions: {\\n        solidgauge: {\\n    \
            \        enableMouseTracking: false,\\n        },\\n    },\\n};\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       BUSINESS FUNCTIONS         \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\nfunction createChart(title, actualRel, displayNumber, displayText,\
            \ color) {\\n    series.push(getSeriesObject(title, actualRel, displayNumber,\
            \ chartIndex, color));\\n    yAxis.push(getYAxisObject(displayText, chartIndex,\
            \ 0, 100));\\n    pane.push(getPaneObject(getXAxisPosition(chartIndex),\
            \ Y_POSITION));\\n    chartIndex++;\\n}\\n\\nfunction getXAxisPosition(kpiIndex)\
            \ {\\n    return (120 * (kpiIndex + 1)) / (TOTAL_NUMBER_OF_KPIS + 1) -\
            \ 10 + \\\"%\\\";\\n}\\n\\nfunction getPassedDays(piStartDate, piEndDate,\
            \ today, totalDaysOfPI) {\\n    if (today.isBefore(piStartDate)) {\\n\
            \        return 0;\\n    }\\n    if (piEndDate.isBefore(today)) {\\n \
            \       return totalDaysOfPI;\\n    }\\n    // @ts-ignore\\n    return\
            \ Days.daysBetween(piStartDate, today).getDays();\\n}\\n\\nfunction getSeriesObject(title,\
            \ actual, label, index, color) {\\n    return {\\n        name: title,\\\
            n        data: [\\n            {\\n                name: title,\\n   \
            \             color: color,\\n                y: actual,\\n          \
            \      innerRadius: \\\"80%\\\",\\n                radius: \\\"100%\\\"\
            ,\\n                dataLabels: {\\n                    format: '<span\
            \ style=\\\"font-size:24px;font-wight: bold\\\">' + label + \\\"</span>\\\
            \",\\n                    borderWidth: 0,\\n                    color:\
            \ COLOURS.GREY,\\n                    verticalAlign: \\\"middle\\\",\\\
            n                    useHTML: true,\\n                },\\n          \
            \  },\\n        ],\\n        yAxis: index,\\n    };\\n}\\n\\nfunction\
            \ getYAxisObject(axisTitle, index, min, max) {\\n    return {\\n     \
            \   min: min,\\n        max: max,\\n        pane: index,\\n        title:\
            \ {\\n            text: axisTitle,\\n            useHTML: true,\\n   \
            \         y: 110,\\n        },\\n        labels: {\\n            enabled:\
            \ false,\\n        },\\n        /*stops: [\\n            [0.1, COLOURS.GREEN],\
            \ // green\\n            [0.9, COLOURS.YELLOW], // yellow\\n         \
            \   [0.99, COLOURS.RED] // red\\n        ],*/\\n        lineWidth: 0,\\\
            n        tickWidth: 0,\\n        tickAmount: 0,\\n        minorTickWidth:\
            \ 0,\\n    };\\n}\\n\\nfunction getPaneObject(xPosition, yPosition) {\\\
            n    return {\\n        center: [xPosition, yPosition],\\n        size:\
            \ \\\"50%\\\",\\n        startAngle: 0,\\n        endAngle: 360,\\n  \
            \      background: {\\n            backgroundColor: \\\"#EEE\\\",\\n \
            \           borderColor: null,\\n            innerRadius: \\\"80%\\\"\
            ,\\n            outerRadius: \\\"100%\\\",\\n            shape: \\\"arc\\\
            \",\\n        },\\n    };\\n}\\n\\nfunction getConvidenceVoteColors(value)\
            \ {\\n    if (value <= 2) {\\n        return COLOURS.RED;\\n    } else\
            \ if (value <= 3) {\\n        return COLOURS.YELLOW;\\n    } else {\\\
            n        return COLOURS.GREEN;\\n    }\\n}\\n\\n/**\\n * Calculates the\
            \ average confidence vote\\n * @param {Page<'cf.cplace.solution.safe.confidenceVote'>\
            \ | undefined | null} confidenceVote\\n */\\nfunction calculateConfidenceVoteAverage(confidenceVote)\
            \ {\\n    if (!confidenceVote) {\\n        return 0;\\n    }\\n    const\
            \ oneFinger = confidenceVote.get(CONFIDENCE_VOTE.ATTR.ONE_FINGER);\\n\
            \    const twoFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.TWO_FINGERS);\\\
            n    const threeFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.THREE_FINGERS);\\\
            n    const fourFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.FOUR_FINGERS);\\\
            n    const fiveFingers = confidenceVote.get(CONFIDENCE_VOTE.ATTR.FIVE_FINGERS);\\\
            n    const totalFingers = oneFinger + 2 * twoFingers + 3 * threeFingers\
            \ + 4 * fourFingers + 5 * fiveFingers;\\n    const numberOfConvidenceVotes\
            \ = oneFinger + twoFingers + threeFingers + fourFingers + fiveFingers;\\\
            n\\n    return totalFingers / numberOfConvidenceVotes;\\n}\\n\\n/**\\\
            n * Calculate the velocity of last PI as number of capabilities that were\
            \ done in the last PI\\n * @param {Page<'cf.cplace.solution.safe.programIncrement'>}\
            \ currentPi\\n */\\nfunction calculateVelocityOfLastPi(currentPi) {\\\
            n    let lastPI = currentPi.get(PROGRAM_INCREMENT.ATTR.PREDECESSOR);\\\
            n    if (!lastPI) {\\n        return 0;\\n    }\\n    const velocity =\
            \ Array.from(lastPI.getIncomingPages(CAPABILITY.TYPE, CAPABILITY.ATTR.PROGRAM_INCREMENT)).filter(\\\
            n        (/** @type {Page<'cf.cplace.solution.safe.capability'>} */ c)\
            \ =>\\n            c.get(CAPABILITY.ATTR.STATE) === CAPABILITY.ENUM.STATE.DONE\\\
            n    ).length;\\n    return velocity;\\n}\\n// //--------------------------------------------------------------------------------------//\\\
            n// //                                       HELPER FUNCTIONS        \
            \                       //\\n// //--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n * Log to cplace\\n * @param {any} text\\n */\\nfunction log(text)\
            \ {\\n    if (!DEBUG) {\\n        return;\\n    }\\n    let logOutput\
            \ = typeof text !== \\\"string\\\" ? JSON.stringify(text) : text;\\n\\\
            n    cplace.log(logOutput);\\n}\",\"upgradeAck\":true,\"description\"\
            :\"\"}"
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"or":[{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"relativeCustomReference":"cf.cplace.solution.safe.programIncrement","referenceOperator":"ca_cf.cplace.solution.safe.currentPi"}]},{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.confidenceVote"]},{"relativeCustomReference":"cf.cplace.solution.safe.confidenceVote.PI","referenceOperator":"ca_cf.cplace.solution.safe.currentPi"}]}]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: height
          value: d300
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"Solution PI Statistics","en":"Solution PI Statistics"}
        collapsed: false
        id: _dctwvwsi1rpgmfnwlqqtn6a5d
        widgetType: cf.cplace.visualizations.scriptingHighcharts
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.layoutTabsWidget.cplacejsLayouts
          value: 's{"version":1,"script":"var layoutConfig = {\n    layouts: selectedLayouts,\n    active:
            selectedActiveLayout\n};\n\nreturn layoutConfig;","upgradeAck":true,"description":""}'
        - name: cf.cplace.layoutTabsWidget.layoutSelection
          value: scf.cplace.solution.safe.currentPI.layout.SolutionPlanning
        - name: cf.cplace.layoutTabsWidget.layouts
          value: s{"layouts":["cf.cplace.solution.safe.currentPI.layout.SolutionPlanning","cf.cplace.solution.safe.currentPI.layout.kanban","cf.cplace.solution.safe.currentPI.layout.Objectives","cf.cplace.solution.safe.dependencies"]}
        - name: cf.cplace.layoutTabsWidget.sourceForLayouts
          value: ssimpleLayoutSelection
        collapsed: false
        id: _xb1voftrpt93boi00okywry4r
        widgetType: cf.cplace.layoutTabsWidget.widget
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.buttonClass
          value: sbtn-primary
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.buttonLabel
          value: "m{\"de\":\"N\xE4chstes PI als aktiv festlegen\",\"en\":\"Set Next\
            \ PI as Active\"}"
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.confirmationDialogCancelButtonText
          value: m{"de":"Abbrechen","en":"Cancel"}
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.confirmationDialogConfirmButtonText
          value: m{"de":"Ja","en":"Ja"}
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.confirmationDialogText
          value: "m{\"de\":\"Sind Sie sicher, dass sie das n\xE4chste PI als aktiv\
            \ markieren m\xF6chten?\",\"en\":\"Are you sure you want to mark the next\
            \ PI as active?\"}"
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.dataSource
          value: ssearch
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.includeAllSearchResults
          value: bfalse
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.script
          value: "s{\"version\":1,\"script\":\"/**\\n * LOWCODE BUTTON\\n * @customType\
            \ cf.cplace.solution.safe.solution\\n * @author Christopher W\xF6lfle\
            \ <christopher.woelfle@cplace.com>\\n * @version 1.0\\n * @description\
            \ Set previous current and next pi\\n */\\n\\ncplace.setLogName(\\\"lowcodebutton_setAsCurrentPi\\\
            \");\\n\\nconst DEBUG = true;\\n\\nconst PROGRAMM_INCREMENT = /** @type\
            \ {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n    ATTR: {\\n        SOLUTION: \\\"cf.cplace.solution.safe.solution\\\
            \",\\n        START_DATE: \\\"cf.cplace.solution.safe.startDate\\\",\\\
            n        END_DATE: \\\"cf.cplace.solution.safe.endDate\\\",\\n       \
            \ PERIOD_STATUS: \\\"cf.cplace.solution.safe.periodStatus\\\",\\n    \
            \    PREDECESSOR: \\\"cf.cplace.solution.safe.predecessor\\\",\\n    },\\\
            n    ENUM: {\\n        PERIOD_STATUS: {\\n            DONE: \\\"#15 -\
            \ done\\\",\\n            ACTIVE: \\\"#25 - active\\\",\\n        },\\\
            n    },\\n});\\n\\nconst SOLUTION = /** @type {const} */ ({\\n    TYPE:\
            \ \\\"cf.cplace.solution.safe.solution\\\",\\n});\\n\\nfunction checkAccess()\
            \ {\\n    return true;\\n}\\n\\nfunction call() {\\n    const newState\
            \ = {\\n        \\\"cf.cplace.solution.safe.previousPi\\\": {},\\n   \
            \     \\\"cf.cplace.solution.safe.currentPi\\\": {},\\n        \\\"cf.cplace.solution.safe.nextPi\\\
            \": {},\\n    };\\n    /** @type {Page<'cf.cplace.solution.safe.solution'>\
            \ | null} */\\n    const solution = Iterables.getFirst(pages, null);\\\
            n    if (!solution) {\\n        DEBUG && cplace.log(\\\"No solution provided\\\
            \");\\n        return {\\n            message: {\\n                de:\
            \ \\\"Keine Solution in der Suche gefunden\\\",\\n                en:\
            \ \\\"No solution provided via Search\\\",\\n            },\\n       \
            \ };\\n    }\\n\\n    const currentPi = solution.get(\\\"cf.cplace.solution.safe.currentPi\\\
            \");\\n    if (!currentPi) {\\n        DEBUG && cplace.log(\\\"No current\
            \ PI\\\");\\n        log.logText({\\n            de: \\\"Kein aktuelles\
            \ PI gesetzt\\\",\\n            en: \\\"No current PI\\\",\\n        });\\\
            n        return;\\n    }\\n\\n    const newPreviousPi = currentPi;\\n\
            \    let newCurrentPi = solution.get(\\\"cf.cplace.solution.safe.nextPi\\\
            \");\\n\\n    if (!newCurrentPi) {\\n        // If we don't have a next\
            \ PI specified yet on the solution, we try to get the next PI where the\
            \ predecessor is set to the current PI (newPreviousPi)\\n        newCurrentPi\
            \ = getNextPi(newPreviousPi);\\n        if (!newCurrentPi) {\\n      \
            \      DEBUG && cplace.log(\\\"No next PI defined\\\");\\n           \
            \ log.logText({\\n                de: \\\"Kein n\xE4chstes PI definiert\\\
            \",\\n                en: \\\"No next PI defined\\\",\\n            });\\\
            n            return;\\n        }\\n    }\\n    const newNextPi = getNextPi(newCurrentPi);\\\
            n\\n    if (!newNextPi) {\\n        DEBUG && cplace.log(\\\"No next PI\
            \ defined\\\");\\n        log.logText({\\n            de: \\\"Kein \xFC\
            bern\xE4chstes PI definiert\\\",\\n            en: \\\"No PI defined after\
            \ next PI\\\",\\n        });\\n        return;\\n    }\\n    cplace.log(`New\
            \ next PI: ${newNextPi.getName()}`);\\n\\n    newState[\\\"cf.cplace.solution.safe.previousPi\\\
            \"] = newPreviousPi;\\n    newState[\\\"cf.cplace.solution.safe.currentPi\\\
            \"] = newCurrentPi;\\n    newState[\\\"cf.cplace.solution.safe.nextPi\\\
            \"] = newNextPi;\\n\\n    cplace.actions().updatePage(solution, {\\n \
            \       customAttributes: newState,\\n    });\\n\\n    // Set new previous\
            \ PI to done\\n    cplace.actions().updatePage(currentPi, {\\n       \
            \ customAttributes: {\\n            [PROGRAMM_INCREMENT.ATTR.PERIOD_STATUS]:\
            \ PROGRAMM_INCREMENT.ENUM.PERIOD_STATUS.DONE,\\n        },\\n    });\\\
            n\\n    // Set new current PI to active\\n    cplace.actions().updatePage(newCurrentPi,\
            \ {\\n        customAttributes: {\\n            [PROGRAMM_INCREMENT.ATTR.PERIOD_STATUS]:\
            \ PROGRAMM_INCREMENT.ENUM.PERIOD_STATUS.ACTIVE,\\n        },\\n    });\\\
            n    cplace.actions().refresh();\\n\\n    return {\\n        message:\
            \ {\\n            de: `Das n\xE4chste PI wurde erfolgreich auf ${newCurrentPi.getName()}\
            \ gesetzt`,\\n            en: `Successfully set the current PI to ${newCurrentPi.getName()}`,\\\
            n        },\\n    };\\n}\\n\\n/**\\n *\\n * @param {Page<'cf.cplace.solution.safe.programIncrement'>}\
            \ programIncrement\\n */\\nfunction getNextPi(programIncrement) {\\n \
            \   /** @type {Page<'cf.cplace.solution.safe.programIncrement'>[]} */\\\
            n    const results = Array.from(\\n        programIncrement.getIncomingPages(PROGRAMM_INCREMENT.TYPE,\
            \ PROGRAMM_INCREMENT.ATTR.PREDECESSOR)\\n    );\\n\\n    if (results.length\
            \ > 1) {\\n        log.logText({\\n            de: `Es gibt mehr als ein\
            \ PI (${results\\n                .map((pi) => pi.getName())\\n      \
            \          .join(\\\", \\\")}) bei dem der Vorg\xE4nger ${programIncrement.getName()}\
            \ ist`,\\n            en: `There is more than one PI (${results\\n   \
            \             .map((pi) => pi.getName())\\n                .join(\\\"\
            , \\\")}) where the predecessor is: ${programIncrement.getName()}`,\\\
            n        });\\n        return null;\\n    }\\n    if (results.length ===\
            \ 0) {\\n        return null;\\n    }\\n    return results[0];\\n}\\n\\\
            n\\nreturn { checkAccess, call };\",\"upgradeAck\":true,\"description\"\
            :\"\"}"
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.showConfirmationDialog
          value: btrue
        - name: cf.cplace.lowCodeWidgets.lowCodeButtonWidget.showFrame
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.solution"]}]}
        - name: sortOrder
          value: sAufsteigend
        collapsed: false
        id: _rwx15kqy42xvf466fujoeux1e
        widgetType: cf.cplace.lowCodeWidgets.lowCodeButton
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: sconnectedTable
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * Displays all items grouped\
            \ by Solution and PI.\\n * Dependencies between items are displayed as\
            \ a line.\\n *\\n * Milestones that lie within the period of the PIs are\
            \ displayed in a separate row.\\n *\\n * @author Christopher W\xF6lfle\\\
            n * @version 15.03.2023\\n */\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       LOG AND DEBUG              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            nconst DEBUG = false;\\ncplace.setLogName(\\\"highcharts-solution-dependency-map\\\
            \");\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       CONFIGURATION              \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\nconst CAPABILITY_HEIGHT = 0.3;\\n\\nconst TYPE_CAPABILITY = /** @type\
            \ {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.capability\\\"\
            ,\\n    ATTR: {\\n        TITLE: \\\"cf.cplace.solution.safe.title\\\"\
            ,\\n        TYPE: \\\"cf.cplace.solution.safe.capabilityType\\\",\\n \
            \       FEATURES: \\\"cf.cplace.solution.safe.feature\\\",\\n        PROGRAM:\
            \ \\\"cf.cplace.solution.safe.program\\\",\\n        SOLUTION: \\\"cf.cplace.solution.safe.solution.reference\\\
            \",\\n        PROGRAM_INCREMENT: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n        EPIC: \\\"cf.cplace.solution.safe.portfolioEpic\\\",\\n\
            \        TEMP_ITERATIONS: \\\"cf.cplace.solution.safe.iteration\\\",\\\
            n    },\\n    ENUM: {\\n        TYPE: {\\n            CAPABILITY: \\\"\
            capability\\\",\\n            ENABLER: \\\"enabler\\\",\\n        },\\\
            n    },\\n});\\n\\nconst TYPE_MILESTONE = /** @type {const} */ ({\\n \
            \   TYPE: \\\"cf.cplace.solution.safe.safeMilestone\\\",\\n    ATTR: {\\\
            n        TITLE: \\\"cf.cplace.solution.safe.title\\\",\\n        DATE:\
            \ \\\"cf.cplace.solution.safe.date\\\",\\n        TYPE: \\\"cf.cplace.solution.safe.type\\\
            \",\\n        RELEVANT_FOR: \\\"cf.cplace.solution.safe.relevantFor\\\"\
            , // refers to Program\\n    },\\n    ENUM: {\\n        TYPE: {\\n   \
            \         PI_MILESTONE: \\\"#15 - PI Meilenstein\\\",\\n            FIXED_DATE:\
            \ \\\"#25 - Fixiertes Datum\\\",\\n            LEARNING_MILESTONE: \\\"\
            #35 - Learning Meilenstein\\\",\\n        },\\n    },\\n});\\n\\nconst\
            \ TYPE_DEPENDENCY = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.dependency\\\
            \",\\n    ATTR: {\\n        A: \\\"cf.cplace.solution.safe.successor\\\
            \",\\n        B: \\\"cf.cplace.solution.safe.predecessor\\\",\\n     \
            \   TYPE: \\\"cf.cplace.solution.safe.type\\\",\\n        STATUS: \\\"\
            cf.cplace.solution.safe.status\\\",\\n        DESCRIPTION: \\\"cf.cplace.solution.safe.description\\\
            \",\\n    },\\n    ENUM: {\\n        TYPE: {\\n            RELATED_TO:\
            \ \\\"related to\\\",\\n            BLOCKED_BY: \\\"blocked by\\\",\\\
            n        },\\n        STATUS: {\\n            IDENTIFIED: \\\"15 - identified\\\
            \",\\n            CONFLICT: \\\"25 - conflict\\\",\\n            RESOLVED:\
            \ \\\"35 - resolved\\\",\\n        },\\n    },\\n});\\n\\nconst TYPE_PROGRAM_INCREMENT\
            \ = /** @type {const} */ ({\\n    TYPE: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n    ATTR: {\\n        TITLE: \\\"cf.cplace.solution.safe.title\\\
            \",\\n        START: \\\"cf.cplace.solution.safe.startDate\\\",\\n   \
            \     END: \\\"cf.cplace.solution.safe.endDate\\\",\\n        PREDECESSOR:\
            \ \\\"cf.cplace.solution.safe.predecessor\\\", // Program Increment\\\
            n    },\\n});\\n\\nconst COLORS = {\\n    INACTIVE: \\\"#88bbee\\\",\\\
            n    ACTIVE: \\\"#4488aa\\\",\\n    DEPEND: \\\"#888888\\\",\\n    DEPEND_HIGHLIGHT:\
            \ \\\"#A21622\\\",\\n    DEPEND_RESOLVED: \\\"#19ad48\\\",\\n    SAFE_MILESTONE:\
            \ \\\"#3D8F8C\\\",\\n    RELEASE: \\\"#366C81\\\",\\n    MILESTONE_PLOTBAND:\
            \ \\\"#E2F3F2\\\",\\n    RELEASE_PLOTBAND: \\\"#E2EEF3\\\",\\n    CAPABILITY:\
            \ \\\"#0aa5ff\\\",\\n    ENABLER: \\\"#ffc80c\\\",\\n    TODAY_PLOTLINE:\
            \ \\\"lightgrey\\\",\\n};\\n\\nconst CATEGORY = {\\n    SAFE_MILESTONE:\
            \ \\\"SAFe Milestones\\\",\\n};\\n\\nconst ROW_SIZE = {\\n    PERIOD:\
            \ 2,\\n    ITEM: 1,\\n};\\n\\nconst HEIGHTS = {\\n    HEADER: 40,\\n \
            \   ITEM: 25,\\n};\\n\\nconst MAX_DATA_LABEL_LENGTH = 25;\\nconst DATA_LABEL_PADDING\
            \ = 0.05;\\n\\nconst SEPARATOR = {\\n    V: \\\" //VSEP// \\\",\\n   \
            \ H: \\\" --HSEP-- \\\",\\n};\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                       INITIALIZATION             \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n/*\\n*****************\\nThis highchart is based on a heatmap, i.e. the\
            \ chart is divided into a set of X * Y equally sized cells.\\n* The first\
            \ column(s) of the cells are used to show the vertical categories (categoriesVertical),\
            \ which are provided as separate \\\"category\\\" series\\n* The first\
            \ row(s) of the cells are used to show the horizontal categories (categoriesHorizontal),\
            \ which are provided as separate \\\"category\\\" series\\n* The rest\
            \ of the cells represent the data itself\\n    * each cell can be identified\
            \ by its set of vertical and horizontal categories saved as 'key' in the\
            \ 'keys'-array in the form of a string like \\\"X Cat Level 1 - X Cat\
            \ Level 2 / Y Cat Level 1 - Y Cat Level 2 - Y Cat Level 3\\\" (in theory\
            \ the levels can be \\\"dynamic\\\", which is not used in this specific\
            \ example. In this example only 1 level is used)\\n    * for each cell\
            \ the number of entities to be shown is counted as 'value' in the 'values'-array.\\\
            n    * the entities for each cell are represented as boxes/cards within\
            \ the cell and are pushed as separate serie to the main data series\\\
            n    * dependencies between entities are represented as separate spline\
            \ series, whereas start and end point of the splines are the left or right\
            \ edge of the corresponding entity boxes/cards on the map\\n\\n/*****\
            \ config options *****/\\n\\nfunction main() {\\n    const ctx = fetchData(Array.from(pages));\\\
            n\\n    if (ctx.capabilities.length === 0 || ctx.periods.length === 0)\
            \ {\\n        return {\\n            title: {\\n                text:\
            \ null,\\n            },\\n        };\\n    }\\n\\n    generateMatrix(ctx);\\\
            n\\n    const chart = generateChartConfig(ctx);\\n\\n    return chart;\\\
            n}\\n// @ts-ignore\\nreturn main();\\n//--------------------------------------------------------------------------------------//\\\
            n//                                    Data Fetching                 \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n * Fetches all required data\\n * @param {Page[]} searchResults\\\
            n * @returns {Context}\\n */\\nfunction fetchData(searchResults) {\\n\
            \    const capabilities = searchResults.filter((page) => page.getBuiltinFeatureValue(\\\
            \"customType\\\") === TYPE_CAPABILITY.TYPE);\\n    const missinCapabilities\
            \ = getMissingCapabilities(capabilities);\\n    capabilities.push(...missinCapabilities);\\\
            n    log(`Added ${missinCapabilities.length} missing items that the input\
            \ items depend on.`);\\n\\n    const periods = getAllPeriods(capabilities);\\\
            n    log(\\\"Periods: \\\" + periods.length);\\n\\n    const programs\
            \ = getPrograms(capabilities);\\n    const milestones = getSafeMilestones(periods);\\\
            n    const dependencies = getDependencies(capabilities);\\n\\n    const\
            \ capabilitiesById = capabilities.reduce((acc, capability) => {\\n   \
            \     acc[capability.getId()] = { x: 0, y: 0, capability };\\n       \
            \ return acc;\\n    }, {});\\n\\n    const ctx = {\\n        matrixData:\
            \ undefined,\\n        capabilities,\\n        capabilitiesById,\\n  \
            \      periods,\\n        programs,\\n        milestones,\\n        dependencies,\\\
            n        maxHeight: 1,\\n    };\\n    return ctx;\\n}\\n\\n/**\\n * Searches\
            \ dependencies of the capabilities and returns those capabilities that\
            \ are not yet included\\n * @param {Page<'cf.cplace.solution.safe.capability'>[]}\
            \ capabilities\\n * @return {Page<'cf.cplace.solution.safe.capability'>[]}\\\
            n */\\nfunction getMissingCapabilities(capabilities) {\\n    // @ts-ignore\\\
            n    const newCapabilities = new HashSet();\\n    capabilities.forEach((item)\
            \ => {\\n        // @ts-ignore\\n        const dependencies = Array.from(item.getIncomingPages(TYPE_DEPENDENCY.TYPE,\
            \ TYPE_DEPENDENCY.ATTR.A) || []);\\n        dependencies.forEach((itemDependency)\
            \ => {\\n            const capability = itemDependency.get(TYPE_DEPENDENCY.ATTR.B);\\\
            n            if (isPageOfType(capability, TYPE_CAPABILITY.TYPE)) {\\n\
            \                newCapabilities.add(capability);\\n            }\\n \
            \       });\\n    });\\n    return Array.from(newCapabilities).filter((a)\
            \ => !capabilities.some((b) => b.getId() === a.getId()));\\n}\\n\\n/**\\\
            n * Determines the periods used as columns of the board\\n * @param {Page<'cf.cplace.solution.safe.capability'>[]}\
            \ capabilities Capabilities\\n * @returns {Page<'cf.cplace.solution.safe.programIncrement'>[]}\
            \ PIs in chronological order\\n */\\nfunction getAllPeriods(capabilities)\
            \ {\\n    // @ts-ignore\\n    const periodsSet = new HashSet();\\n   \
            \ capabilities.forEach((item) => {\\n        const pi = item.get(TYPE_CAPABILITY.ATTR.PROGRAM_INCREMENT);\\\
            n        if (!pi) {\\n            return;\\n        }\\n        periodsSet.add(pi);\\\
            n    });\\n    /** @type {Page<'cf.cplace.solution.safe.programIncrement'>[]}\
            \ */\\n    const periods = Array.from(periodsSet);\\n    return periods.sort((a,\
            \ b) =>\\n        // @ts-ignore\\n        a.get(TYPE_PROGRAM_INCREMENT.ATTR.START).isBefore(b.get(TYPE_PROGRAM_INCREMENT.ATTR.START))\
            \ ? -1 : 1\\n    );\\n}\\n/**\\n * Gets all dependencies of the capabilities\\\
            n * @param {Page<'cf.cplace.solution.safe.capability'>[]} capabilities\
            \ Capabilities\\n * @returns {Page<'cf.cplace.solution.safe.dependency'>[]}\
            \ PIs in chronological order\\n */\\nfunction getDependencies(capabilities)\
            \ {\\n    const dependencies = [];\\n    capabilities.forEach((capabilitiy)\
            \ => {\\n        const itemDependencies = Array.from(\\n            //\
            \ @ts-ignore\\n            capabilitiy.getIncomingPages(TYPE_DEPENDENCY.TYPE,\
            \ TYPE_DEPENDENCY.ATTR.A) || []\\n        );\\n        dependencies.push(...itemDependencies);\\\
            n    });\\n    return dependencies;\\n}\\n/**\\n *\\n * @param {Page<'cf.cplace.solution.safe.programIncrement'>[]}\
            \ programmIncrements\\n * @returns\\n */\\nfunction getSafeMilestones(programmIncrements)\
            \ {\\n    const periodStartDate =\\n        // @ts-ignore\\n        programmIncrements.length\
            \ > 0 ? programmIncrements[0].get(TYPE_PROGRAM_INCREMENT.ATTR.START) :\
            \ new DateTime();\\n    const periodEndDate =\\n        programmIncrements.length\
            \ > 0\\n            ? programmIncrements[programmIncrements.length - 1].get(TYPE_PROGRAM_INCREMENT.ATTR.END)\\\
            n            : // @ts-ignore\\n              new DateTime();\\n    const\
            \ safeMilestoneSearch = new Search();\\n    safeMilestoneSearch.add(Filters.embeddingSpace());\\\
            n    safeMilestoneSearch.add(Filters.type(TYPE_MILESTONE.TYPE));\\n  \
            \  safeMilestoneSearch.add(Filters.customAttribute(TYPE_MILESTONE.ATTR.DATE).gte(periodStartDate));\\\
            n    safeMilestoneSearch.add(Filters.customAttribute(TYPE_MILESTONE.ATTR.DATE).lte(periodEndDate));\\\
            n    safeMilestoneSearch.addBuiltinAttributeSort(TYPE_MILESTONE.ATTR.DATE,\
            \ true);\\n    const safeMilestones = safeMilestoneSearch.findAllPages();\\\
            n    // @ts-ignore\\n    return Array.from(safeMilestones);\\n}\\n/**\\\
            n * Get all the programs of the capabilities\\n * @param {Page<'cf.cplace.solution.safe.capability'>[]}\
            \ capabilities\\n * @returns {Page<'cf.cplace.solution.safe.program'>[]}\\\
            n */\\nfunction getPrograms(capabilities) {\\n    // @ts-ignore\\n   \
            \ const programSet = new HashSet();\\n    capabilities.forEach((item)\
            \ => {\\n        const programs = item.get(TYPE_CAPABILITY.ATTR.PROGRAM);\\\
            n        if (!programs) {\\n            return;\\n        }\\n       \
            \ cplace.each(programs, (program) => programSet.add(program));\\n    });\\\
            n    /** @type {Page<'cf.cplace.solution.safe.program'>[]} */\\n    const\
            \ programms = Array.from(programSet)\\n    return programms.sort((a,b)\
            \ => a.getName().localeCompare(b.getName()));\\n}\\n\\n/**\\n * Generate\
            \ the matrix\\n * @param {Context} ctx\\n */\\nfunction generateMatrix(ctx)\
            \ {\\n    /** @type {MatrixData} */\\n    const matrixData = {\\n    \
            \    headerRow: ctx.periods.map((pi, index) => ({ programIncrement: pi,\
            \ x: index + 2, y: 1 })),\\n        milestoneRow: ctx.milestones,\\n \
            \       programms: {},\\n        capabilities: {},\\n    };\\n    let\
            \ yOffset = 3;\\n    ctx.programs.forEach((program) => {\\n        let\
            \ maxNumberOfCapabilitiesPerProgram = 0;\\n\\n        const capabilitiesByPi\
            \ = ctx.periods.map((programIncrement, indexPI) => {\\n            const\
            \ filteredCapabilities = ctx.capabilities.filter((capability) => {\\n\
            \                const programIds = capability.get(TYPE_CAPABILITY.ATTR.PROGRAM)?.map((p)\
            \ => p.getId()) || [];\\n                // Get all capabilities that\
            \ are associated to the current programm & the current program increment\\\
            n                return programIds.includes(program.getId()) && capability.getOptional(TYPE_CAPABILITY.ATTR.PROGRAM_INCREMENT).getId()\
            \ === programIncrement.getId();\\n            });\\n            // Check\
            \ if the number of capabilities for this PI is the largest\\n        \
            \    if (filteredCapabilities.length > maxNumberOfCapabilitiesPerProgram)\
            \ {\\n                maxNumberOfCapabilitiesPerProgram = filteredCapabilities.length;\\\
            n            }\\n\\n            return filteredCapabilities;\\n      \
            \  });\\n\\n        const rowHeight = Math.ceil(maxNumberOfCapabilitiesPerProgram\
            \ * CAPABILITY_HEIGHT);\\n        const x = 1;\\n        const y = yOffset\
            \ + (rowHeight - 1) / 2;\\n\\n        // Iterate over the programm Increments\
            \ to put the capabilities in the right place\\n        matrixData.programms[program.getName()]\
            \ = {\\n            program,\\n            data: capabilitiesByPi.map((c)\
            \ => c.map((c) => c.getId())),\\n            x,\\n            y,\\n  \
            \          rowHeight,\\n        };\\n        capabilitiesByPi.map((capabilities,\
            \ indexPI) => {\\n            capabilities.map((capability, indexCapability)\
            \ => {\\n                if (matrixData.capabilities[capability.getId()])\
            \ {\\n                    matrixData.capabilities[capability.getId()].push({\\\
            n                        x: x + 1 + indexPI,\\n                      \
            \  y: y - (rowHeight - 1) / 2 + CAPABILITY_HEIGHT * (indexCapability -\
            \ 1),\\n                        capability,\\n                       \
            \ programId: program.getId(),\\n                    });\\n           \
            \     } else {\\n                    matrixData.capabilities[capability.getId()]\
            \ = [\\n                        {\\n                            x: x +\
            \ 1 + indexPI,\\n                            y: y - (rowHeight - 1) /\
            \ 2 + CAPABILITY_HEIGHT * (indexCapability - 1),\\n                  \
            \          capability,\\n                            programId: program.getId(),\\\
            n                        },\\n                    ];\\n              \
            \  }\\n            });\\n        });\\n        yOffset += rowHeight; //+\
            \ (rowHeight - 1) / 2;\\n    });\\n\\n    const capabilitiesWithoutProgram\
            \ = ctx.capabilities.filter(\\n        (capability) =>\\n            //\
            \ @ts-ignore\\n            !capability.get(TYPE_CAPABILITY.ATTR.PROGRAM)\
            \ || capability.get(TYPE_CAPABILITY.ATTR.PROGRAM).length === 0\\n    );\\\
            n\\n    // Check if there are any capabilities without a programm and\
            \ add them to the matrix\\n    if (capabilitiesWithoutProgram.length >\
            \ 0) {\\n        let maxNumberOfCapabilitiesPerProgram = 0;\\n       \
            \ // Ad capabilities without a program\\n        const capabilitiesWithoutProgrammByPi\
            \ = ctx.periods.map((programIncrement) => {\\n            const filteredCapabilities\
            \ = capabilitiesWithoutProgram.filter(\\n                (capability)\
            \ => capability.getOptional(TYPE_CAPABILITY.ATTR.PROGRAM_INCREMENT).getId()\
            \ === programIncrement.getId()\\n            );\\n\\n            if (filteredCapabilities.length\
            \ > maxNumberOfCapabilitiesPerProgram) {\\n                maxNumberOfCapabilitiesPerProgram\
            \ = filteredCapabilities.length;\\n            }\\n            return\
            \ filteredCapabilities;\\n        });\\n\\n        const rowHeight = Math.ceil(maxNumberOfCapabilitiesPerProgram\
            \ * CAPABILITY_HEIGHT);\\n        const x = 1;\\n        const y = yOffset\
            \ + (rowHeight - 1) / 2;\\n\\n        matrixData.programms[\\\"w/o Program\\\
            \"] = {\\n            program: null,\\n            data: capabilitiesWithoutProgrammByPi.map((c)\
            \ => c.map((c) => c.getId())),\\n            x,\\n            y,\\n  \
            \          rowHeight,\\n        };\\n        capabilitiesWithoutProgrammByPi.map((capabilities,\
            \ indexPI) => {\\n            capabilities.map((capability, indexCapability)\
            \ => {\\n                if (matrixData.capabilities[capability.getId()])\
            \ {\\n                    matrixData.capabilities[capability.getId()].push({\\\
            n                        x: x + 1 + indexPI,\\n                      \
            \  y: y - (rowHeight - 1) / 2 + CAPABILITY_HEIGHT * (indexCapability -\
            \ 1),\\n                        capability,\\n                       \
            \ programId: \\\"w/o Program\\\",\\n                    });\\n       \
            \         } else {\\n                    matrixData.capabilities[capability.getId()]\
            \ = [\\n                        {\\n                            x: x +\
            \ 1 + indexPI,\\n                            y: y - (rowHeight - 1) /\
            \ 2 + CAPABILITY_HEIGHT * (indexCapability - 1),\\n                  \
            \          capability,\\n                            programId: \\\"w/o\
            \ Program\\\",\\n                        },\\n                    ];\\\
            n                }\\n            });\\n        });\\n        yOffset +=\
            \ rowHeight;\\n    }\\n    ctx.maxHeight = yOffset;\\n    ctx.matrixData\
            \ = matrixData;\\n}\\n/**\\n *\\n * @param {Context} ctx\\n */\\nfunction\
            \ transformMatrixDataIntoSeries(ctx) {\\n    const matrixData = ctx.matrixData;\\\
            n\\n    const series = [];\\n\\n    if (!matrixData) {\\n        return\
            \ series;\\n    }\\n\\n    // 1. Add PIs\\n    series.push(\\n       \
            \ ...matrixData.headerRow.map((headerEntry, index) => {\\n           \
            \ return {\\n                name: headerEntry.programIncrement.getName(),\\\
            n                colsize: 1,\\n                rowsize: 1,\\n        \
            \        dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n     \
            \           enableMouseTracking: false,\\n                data: [\\n \
            \                   {\\n                        x: headerEntry.x,\\n \
            \                       y: headerEntry.y,\\n                        value:\
            \ 1,\\n                        name: `<a href=\\\"${headerEntry.programIncrement.getUrl()}\\\
            \">${headerEntry.programIncrement.getName()}</a>`,\\n                \
            \        color: \\\"#dddddd\\\",\\n                    },\\n         \
            \       ],\\n            };\\n        })\\n    );\\n\\n    // 2. Add Milestones\\\
            n    series.push({\\n        name: \\\"SAFe Milestones\\\",\\n       \
            \ colsize: 1,\\n        rowsize: 1,\\n        dataLabels: { rotation:\
            \ 0, color: \\\"#000000\\\" },\\n        enableMouseTracking: false,\\\
            n        data: [{ x: 1, y: 2, value: 1, name: '<a href=\\\"wip\\\">SAFe\
            \ Milestones</a>', color: \\\"#E2F3F2\\\" }],\\n    });\\n\\n    let top\
            \ = true;\\n    const safeMilestoneData = [];\\n\\n    matrixData.milestoneRow.forEach((safeMilestone)\
            \ => {\\n        const safeMilestoneName = safeMilestone.getName();\\\
            n        const safeMilestoneDate = safeMilestone.get(TYPE_MILESTONE.ATTR.DATE);\\\
            n        // @ts-ignore\\n        const safeMilestoneDateString = safeMilestoneDate?.toString(\\\
            \"dd.MM.yyyy\\\");\\n        // get milestone Position\\n        // @ts-ignore\\\
            n        const safeMilestonePosition = getDatePosition(safeMilestoneDate.getMillis(),\
            \ ctx);\\n        // add milestone only if position is not null\\n   \
            \     if (safeMilestonePosition > 0) {\\n            safeMilestoneData.push({\\\
            n                x: safeMilestonePosition,\\n                y: 2,\\n\
            \                name: '<a href=\\\"' + safeMilestone.getUrl() + '\\\"\
            >' + safeMilestoneName + \\\"</a>\\\",\\n                value: safeMilestoneDateString,\\\
            n                dataLabels: {\\n                    verticalAlign: top\
            \ ? \\\"top\\\" : \\\"bottom\\\",\\n                },\\n            });\\\
            n            top = !top;\\n        }\\n    });\\n\\n    series.push({\\\
            n        type: \\\"scatter\\\",\\n        lineWidth: 0,\\n        findNearestPointBy:\
            \ \\\"xy\\\",\\n        data: safeMilestoneData,\\n        marker: {\\\
            n            fillColor: COLORS.SAFE_MILESTONE,\\n        },\\n    });\\\
            n\\n    // 3. Add Programms\\n    let rowHeight = 2.5;\\n    Object.keys(matrixData.programms).forEach((programName)\
            \ => {\\n        const data = matrixData.programms[programName];\\n  \
            \      // Add the Programms\\n        series.push({\\n            name:\
            \ programName,\\n            rowsize: data.rowHeight,\\n            dataLabels:\
            \ { rotation: 0, color: \\\"#000000\\\" },\\n            enableMouseTracking:\
            \ false,\\n            data: [\\n                {\\n                \
            \    x: data.x,\\n                    y: data.y,\\n                  \
            \  value: 1,\\n                    name: `<a href=\\\\\\\"${data.program?.getUrl()\
            \ || \\\"wip\\\"}\\\\\\\">${programName}</a>`,\\n                    color:\
            \ \\\"#dddddd\\\",\\n                },\\n            ],\\n        });\\\
            n        // Add the capabilities of the programm\\n        data.data.map((capabilitiesByPI,\
            \ indexPI) => {\\n            series.push({\\n                name: programName\
            \ + indexPI,\\n                rowsize: CAPABILITY_HEIGHT,\\n        \
            \        colsize: 0.8,\\n                dataLabels: { rotation: 0, color:\
            \ \\\"#000000\\\", overflow: \\\"justify\\\" },\\n                enableMouseTracking:\
            \ false,\\n                data: capabilitiesByPI.map((capabilityId, indexCapability)\
            \ => {\\n                    const capabilityData = matrixData.capabilities[capabilityId].filter((c)\
            \ => c.programId === (data.program ? data.program.getId() : \\\"w/o Program\\\
            \"))[0];\\n                    const capability = capabilityData.capability;\\\
            n                    const isEnabler = capability.get(TYPE_CAPABILITY.ATTR.TYPE)\
            \ === \\\"enabler\\\";\\n                    return {\\n             \
            \           x: capabilityData.x,\\n                        y: capabilityData.y,\\\
            n                        value: 1,\\n                        name: `<a\
            \ href=\\\\\\\"${capability.getUrl() || \\\"wip\\\"}\\\\\\\">${limitStringSize(capability.getName(),\
            \ 40)}</a>`,\\n                        color: isEnabler ? \\\"#ffc80c\\\
            \" : \\\"#0aa5ff\\\",\\n                    };\\n                }),\\\
            n            });\\n        });\\n        rowHeight += data.rowHeight;\\\
            n    });\\n\\n    // 4. Add Dependencies\\n    ctx.dependencies.forEach((dependency)\
            \ => {\\n        const from = dependency.get(TYPE_DEPENDENCY.ATTR.B);\\\
            n        const to = dependency.get(TYPE_DEPENDENCY.ATTR.A);\\n       \
            \ if (!from || !to) {\\n            return;\\n        }\\n        const\
            \ fromId = from.getId();\\n        const toId = to.getId();\\n\\n    \
            \    const fromCapabilities = ctx.matrixData?.capabilities[fromId];\\\
            n        const toCapabilities = ctx.matrixData?.capabilities[toId];\\\
            n\\n        if (!fromCapabilities) {\\n            return;\\n        }\\\
            n        const maxValue = ctx.maxHeight;\\n        fromCapabilities.forEach((fromCapabilityData)\
            \ => {\\n            let x1 = fromCapabilityData.x;\\n            let\
            \ y1 = fromCapabilityData.y;\\n            // y1 += -0.4 + 0.4 / maxValue\
            \ + ((x1-1) * 0.8) / maxValue;\\n\\n            if (!toCapabilities) {\\\
            n                return;\\n            }\\n            toCapabilities.forEach((toCapabilityData)\
            \ => {\\n                let x2 = toCapabilityData.x;\\n             \
            \   let y2 = toCapabilityData.y;\\n                // y2 += -0.4 + 0.4\
            \ / maxValue + ((x1-1) * 0.8) / maxValue;\\n\\n                const description\
            \ = dependency.get(TYPE_DEPENDENCY.ATTR.DESCRIPTION) || \\\" \\\";\\n\
            \                const dependencyType = dependency.get(TYPE_DEPENDENCY.ATTR.TYPE);\\\
            n                const status = dependency.get(TYPE_DEPENDENCY.ATTR.STATUS);\\\
            n                const dependencySeries = {\\n                    type:\
            \ \\\"spline\\\",\\n                    name: \\\"<b>\\\" + to.getName()\
            \ + \\\"</b><br/>relates to:<br/>\\\" + from.getName() + \\\"<br>\\\"\
            \ + description,\\n                    lineWidth: 1.5,\\n            \
            \        color: COLORS.DEPEND,\\n                    dashStyle: \\\"shortdot\\\
            \",\\n                    findNearestPointBy: \\\"xy\\\",\\n         \
            \           data: [\\n                        { x: x1 + 0.4, y: y1 },\\\
            n                        { x: x1 + 0.45, y: y1 === y2 ? y1 + 0.02 : y1\
            \ },\\n                        { x: x2 - 0.45, y: y1 === y2 ? y2 - 0.02\
            \ : y2 },\\n                        { x: x2 - 0.4, y: y2, marker: { enabled:\
            \ true, symbol: \\\"diamond\\\" } },\\n                    ],\\n     \
            \           };\\n                if (dependencyType === TYPE_DEPENDENCY.ENUM.TYPE.BLOCKED_BY)\
            \ {\\n                    dependencySeries.name = \\\"<b>\\\" + to.getName()\
            \ + \\\"</b><br/>blocked by:<br/>\\\" + from.getName() + \\\"<br>\\\"\
            \ + description;\\n                    // @ts-ignore\\n              \
            \      dependencySeries.dashStyle = null;\\n                }\\n     \
            \           if (status === TYPE_DEPENDENCY.ENUM.STATUS.CONFLICT) {\\n\
            \                    dependencySeries.color = COLORS.DEPEND_HIGHLIGHT;\\\
            n                } else if (status === TYPE_DEPENDENCY.ENUM.STATUS.RESOLVED)\
            \ {\\n                    dependencySeries.color = COLORS.DEPEND_RESOLVED;\\\
            n                }\\n                series.push(dependencySeries);\\\
            n            });\\n        });\\n    });\\n\\n    return series;\\n}\\\
            n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                     Chart Config                 \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n *\\n * @param {Context} ctx\\n */\\nfunction generateChartConfig(ctx)\
            \ {\\n    if (!ctx.matrixData) {\\n        return;\\n    }\\n    const\
            \ series = transformMatrixDataIntoSeries(ctx);\\n    // @ts-ignore\\n\
            \    const today = new DateTime();\\n    let todayPosition = getDatePosition(today.getMillis(),\
            \ ctx);\\n\\n    return {\\n        chart: {\\n            type: \\\"\
            heatmap\\\",\\n            marginTop: 0,\\n            marginBottom: 0,\\\
            n            plotBorderWidth: 0,\\n            scrollablePlotArea: {\\\
            n                minHeight: 1200,\\n                minWidth: 1000,\\\
            n            },\\n        },\\n        title: {\\n            text: null,\\\
            n        },\\n        xAxis: {\\n            categories: [],\\n      \
            \      title: null,\\n            gridLineWidth: 0,\\n            lineWidth:\
            \ 0,\\n            labels: {\\n                enabled: false,\\n    \
            \        },\\n            plotLines: [\\n                {\\n        \
            \            dashStyle: \\\"dash\\\",\\n                    color: COLORS.TODAY_PLOTLINE,\\\
            n                    width: 2,\\n                    value: todayPosition,\\\
            n                    zIndex: 1,\\n                },\\n            ],\\\
            n        },\\n        yAxis: {\\n            categories: [],\\n      \
            \      title: null,\\n            gridLineWidth: 1,\\n            tickInterval:\
            \ 1,\\n            lineWidth: 0,\\n            min: 1,\\n            max:\
            \ ctx.maxHeight,\\n            labels: {\\n                enabled: false,\\\
            n            },\\n            reversed: true,\\n            scrollbar:\
            \ {\\n                enabled: true,\\n            },\\n            plotBands:\
            \ [\\n                {\\n                    color: COLORS.MILESTONE_PLOTBAND,\\\
            n                    borderColor: \\\"white\\\",\\n                  \
            \  borderWidth: 2,\\n                    from: 1.5,\\n               \
            \     to: 2.5,\\n                    zIndex: 0,\\n                },\\\
            n                // {\\n                //     color: COLORS.RELEASE_PLOTBAND,\\\
            n                //     borderColor: 'white',\\n                //   \
            \  borderWidth: 2,\\n                //     from: 1.5,\\n            \
            \    //     to: 2.5,\\n                //     zIndex: 0\\n           \
            \     // }\\n            ],\\n        },\\n        colors: [\\\"#D5001C\\\
            \", \\\"#92D050\\\"],\\n        colorAxis: {\\n            dataClassColor:\
            \ \\\"category\\\",\\n            dataClasses: [\\n                {\\\
            n                    to: 0.5,\\n                },\\n                {\\\
            n                    from: 0.5,\\n                },\\n            ],\\\
            n        },\\n        legend: {\\n            enabled: false,\\n     \
            \   },\\n        tooltip: {\\n            useHTML: true,\\n          \
            \  followPointer: false,\\n        },\\n        plotOptions: {\\n    \
            \        series: {\\n                borderColor: \\\"#ffffff\\\",\\n\
            \                borderWidth: 2,\\n                dataLabels: {\\n  \
            \                  allowOverlap: false,\\n                    inside:\
            \ true,\\n                    crop: true,\\n                    overflow:\
            \ \\\"justify\\\",\\n                    position: \\\"left\\\",\\n  \
            \                  shape: \\\"circle\\\",\\n                    enabled:\
            \ true,\\n                    color: \\\"#000000\\\",\\n             \
            \       format: \\\"{point.name}\\\",\\n                    style: {\\\
            n                        textOutline: \\\"none\\\",\\n               \
            \         textOverflow: \\\"clip\\\",\\n                    },\\n    \
            \            },\\n                stickyTracking: false,\\n          \
            \      tooltip: {\\n                    headerFormat: \\\"\\\",\\n   \
            \                 pointFormat: \\\"<b>{point.name}</b>\\\",\\n       \
            \             findNearestPointBy: \\\"xy\\\",\\n                },\\n\
            \                states: {\\n                    inactive: {\\n      \
            \                  opacity: 1,\\n                    },\\n           \
            \     },\\n            },\\n            spline: {\\n                tooltip:\
            \ {\\n                    headerFormat: \\\"{series.name}\\\",\\n    \
            \                pointFormat: \\\"\\\",\\n                    findNearestPointBy:\
            \ \\\"xy\\\",\\n                },\\n                marker: {\\n    \
            \                enabled: false,\\n                    fillColor: COLORS.DEPEND,\\\
            n                    radius: 6,\\n                    states: {\\n   \
            \                     hover: {\\n                            enabled:\
            \ false,\\n                        },\\n                    },\\n    \
            \            },\\n            },\\n            scatter: {\\n         \
            \       tooltip: {\\n                    headerFormat: \\\"\\\",\\n  \
            \                  pointFormat: \\\"<b>{point.name}</b><br>{point.value}\\\
            \",\\n                    findNearestPointBy: \\\"xy\\\",\\n         \
            \       },\\n                dataLabels: {\\n                    enabled:\
            \ true,\\n                },\\n                marker: {\\n          \
            \          enabled: true,\\n                    symbol: \\\"diamond\\\"\
            ,\\n                    radius: 10,\\n                    states: {\\\
            n                        hover: {\\n                            enabled:\
            \ true,\\n                        },\\n                    },\\n     \
            \           },\\n            },\\n        },\\n        series: series,\\\
            n        // series: [\\n        //     {\\n        //         name: \\\
            \"PI 22.4\\\",\\n        //         colsize: 1,\\n        //         rowsize:\
            \ 1,\\n        //         dataLabels: { rotation: 0, color: \\\"#000000\\\
            \" },\\n        //         enableMouseTracking: false,\\n        //  \
            \       data: [\\n        //             {\\n        //              \
            \   x: 2,\\n        //                 y: 1,\\n        //            \
            \     value: 1,\\n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/1bk9kpxn7s36vz3w80ji7t5oo/PI-22.4\\\
            \">PI 22.4</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.1\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 3,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/4l6jbaa8qgzinif5qetj499g5/PI-23.1\\\
            \">PI 23.1</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.2\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 4,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/tksr708c2119mek2pzzopu9qb/PI-23.2\\\
            \">PI 23.2</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.3\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 5,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/i4o8azmi8m0oqvqqu3hejgu80/PI-23.3\\\
            \">PI 23.3</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 23.4\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 6,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/nrymz33xo7ew3x6qcgdk3fl7l/PI-23.4\\\
            \">PI 23.4</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"PI 24.1\\\",\\n     \
            \   //         colsize: 1,\\n        //         rowsize: 1,\\n       \
            \ //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\n \
            \       //         enableMouseTracking: false,\\n        //         data:\
            \ [\\n        //             {\\n        //                 x: 7,\\n \
            \       //                 y: 1,\\n        //                 value: 1,\\\
            n        //                 name: '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/0wtzrg3m4bdpfhut5xbgiza73/PI-24.1\\\
            \">PI 24.1</a>',\\n        //                 color: \\\"#dddddd\\\",\\\
            n        //             },\\n        //         ],\\n        //     },\\\
            n        //     {\\n        //         name: \\\"SAFe Milestones\\\",\\\
            n        //         colsize: 1,\\n        //         rowsize: 1,\\n  \
            \      //         dataLabels: { rotation: 0, color: \\\"#000000\\\" },\\\
            n        //         enableMouseTracking: false,\\n        //         data:\
            \ [{ x: 1, y: 2, value: 1, name: '<a href=\\\"wip\\\">SAFe Milestones</a>',\
            \ color: \\\"#E2F3F2\\\" }],\\n        //     },\\n        //     {\\\
            n        //         name: \\\"Smart Infotainment\\\",\\n        //   \
            \      rowsize: 2,\\n        //         dataLabels: { rotation: 0, color:\
            \ \\\"#000000\\\" },\\n        //         enableMouseTracking: false,\\\
            n        //         data: [\\n        //             {\\n        //  \
            \               x: 1,\\n        //                 y: 3.5,\\n        //\
            \                 value: 1,\\n        //                 name: '<a href=\\\
            \"https://solution-templates.cplace.de/large-solution-safe/pages/qg000odouviwwtx4rz2bvaoi8/Smart-Infotainment\\\
            \">Smart Infotainment</a>',\\n        //                 color: \\\"#dddddd\\\
            \",\\n        //             },\\n        //         ],\\n        // \
            \    },\\n        //     {\\n        //         name: \\\"Powertrain and\
            \ Safety\\\",\\n        //         rowsize: 4,\\n        //         dataLabels:\
            \ { rotation: 0, color: \\\"#000000\\\" },\\n        //         enableMouseTracking:\
            \ false,\\n        //         data: [\\n        //             {\\n  \
            \      //                 x: 1,\\n        //                 y: 5 + (4-1)/2,\\\
            n        //                 value: 1,\\n        //                 name:\
            \ '<a href=\\\"https://solution-templates.cplace.de/large-solution-safe/pages/4flf7a0349c5ximei6olrhife/Powertrain-and-Safety\\\
            \">Powertrain and Safety</a>',\\n        //                 color: \\\"\
            red\\\",\\n        //             },\\n        //         ],\\n      \
            \  //     },\\n        // ],\\n    };\\n}\\n\\n//--------------------------------------------------------------------------------------//\\\
            n//                                        Utils                     \
            \                    //\\n//--------------------------------------------------------------------------------------//\\\
            n\\n/**\\n * Limit string to specified size\\n * @param {string} str\\\
            n * @param {number} maxSize\\n * @returns\\n */\\nfunction limitStringSize(str,\
            \ maxSize) {\\n    if (str.length > maxSize) {\\n        return str.substring(0,\
            \ maxSize - 3) + \\\"...\\\";\\n    }\\n    return str;\\n}\\n\\n/**\\\
            n *\\n * @param {number} date\\n * @param {Context} ctx\\n * @returns\\\
            n */\\nfunction getDatePosition(date, ctx) {\\n    let xPosition = 0;\\\
            n    ctx.periods.every((pi, idx) => {\\n        // @ts-ignore\\n     \
            \   let categoryStartDate = pi.get(TYPE_PROGRAM_INCREMENT.ATTR.START)?.getMillis();\\\
            n        // @ts-ignore\\n        let categoryEndDate = pi.get(TYPE_PROGRAM_INCREMENT.ATTR.END)?.getMillis();\\\
            n\\n        // Check whether release date lies in between start and end\
            \ date of category\\n        if (categoryStartDate && categoryEndDate\
            \ && date >= categoryStartDate && date <= categoryEndDate) {\\n      \
            \      // find x-Value of category and subtract 0.5 for starting point\
            \ as offset\\n            let x = idx + 2 - 0.5;\\n            // calculate\
            \ the relative position of date between Category StartDate and EndDate\
            \ and add it to the offset value\\n            xPosition = x + (date -\
            \ categoryStartDate) / (categoryEndDate - categoryStartDate);\\n     \
            \       // exit the every loop\\n            return false;\\n        }\\\
            n        // continue the every loop\\n        return true;\\n    });\\\
            n    // if there was no match, just return null\\n    return xPosition;\\\
            n}\\n\\n/**\\n * Checks if a cplace page is of the specified type\\n *\
            \ @param {Page} page\\n * @param {string} type\\n * @returns {boolean}\\\
            n */\\nfunction isPageOfType(page, type) {\\n    return page.getBuiltinFeatureValue(\\\
            \"customType\\\") === type;\\n}\\n\\n/**\\n * Log to cplace\\n * @param\
            \ {any} text\\n */\\nfunction log(text) {\\n    if (!DEBUG) {\\n     \
            \   return;\\n    }\\n    const logOutput = typeof text !== \\\"string\\\
            \" ? JSON.stringify(text) : text;\\n    cplace.log(logOutput);\\n}\",\"\
            upgradeAck\":true,\"description\":\"\"}"
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: height
          value: d600
        - name: sortOrder
          value: sAufsteigend
        - name: tableWidgetId
          value: sid_21zt0dhrwiwry6tdghv6dlkyx
        - name: title
          value: "m{\"en\":\"Roadmap of Capabilities with Dependencies\",\"de\":\"\
            Roadmap der Capabilities mit ihren Abh\xE4ngigkeiten\"}"
        collapsed: false
        id: _yeu1118btcw5wzktpvy08mwty
        widgetType: cf.cplace.visualizations.scriptingHighcharts
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":true},{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":true},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfDone'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"'cf.cplace.solution.safe.conflictState'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: multiSortColumns
          value: s[{"sortColumn":"'cf.cplace.solution.safe.wsjf'","sortOrder":"desc","sortingPriorityIndex":1}]
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.programIncrement","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.programIncrement"]},{"customIncomingSubSearch":"cf.cplace.solution.safe.nextPi","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.solution"]}]}
            }]} }]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"en\":\"All nominated Capabilities for next PI\",\"de\":\"Alle\
            \ vorgesehenen Capabilities f\xFCr n\xE4chstes PI\"}"
        collapsed: false
        id: id_21zt0dhrwiwry6tdghv6dlkyx
        widgetType: cf.platform.embeddedSearchAsTable
      - attributes:
          name: content
          value: 'r<h4 style="background-color: rgb(220, 220, 220); border-radius:
            4px; border: 1px solid transparent; color: rgb(118, 118, 118); font-size:
            14px; margin-bottom: 20px; padding: 10px">In the table below you can see
            Capabilities, which are assigned to the next PI, but do not have any Features
            related to it and also planned into the next PI, yet. You might want to
            follow them up and either have Features planned or re-assign these Capabilities
            to another upcoming PI.</h4>'
        collapsed: false
        id: _jyn6p3ps2bs634urqa6h0nl7v
        widgetType: cf.cplace.demoWidgets.demoRichString
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":true},{"name":"'cf.cplace.solution.safe.state'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":true},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfDone'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"'cf.cplace.solution.safe.conflictState'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: multiSortColumns
          value: s[{"sortColumn":"'cf.cplace.solution.safe.wsjf'","sortOrder":"desc","sortingPriorityIndex":1}]
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.programIncrement","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.programIncrement"]},{"customIncomingSubSearch":"cf.cplace.solution.safe.nextPi","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.solution"]}]}
            }]} },{"not":{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.programIncrement","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.programIncrement"]},{"customIncomingSubSearch":"cf.cplace.solution.safe.nextPi","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.solution"]}]}
            }]} },{"customIncomingSubSearch":"cf.cplace.solution.safe.capability","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.feature"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.programIncrement","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.programIncrement"]},{"customIncomingSubSearch":"cf.cplace.solution.safe.nextPi","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.solution"]}]}
            }]} }]} }]} }]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: "m{\"en\":\"Capabilities without Features for next PI\",\"de\":\"\
            Capabilities ohne Features f\xFCr n\xE4chstes PI\"}"
        collapsed: false
        id: _fqj79w0jl9i14r394ijjdbel0
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 6
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.wsjf'","visible":true},{"name":"'cf.cplace.solution.safe.programIncrement'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityowner'","visible":true},{"name":"'cf.cplace.solution.safe.definitionOfReady'","visible":true},{"name":"'cf.cplace.solution.safe.capabilityType'","visible":true},{"name":"'cf.cplace.solution.safe.portfolioEpic'","visible":true},{"name":"'cf.cplace.solution.safe.program'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.solution.reference'","visible":false},{"name":"'cf.cplace.solution.safe.description'","visible":false},{"name":"'cf.cplace.solution.safe.state'","visible":false},{"name":"'cf.cplace.solution.safe.businessValue'","visible":false},{"name":"'cf.cplace.solution.safe.timeCriticality'","visible":false},{"name":"'cf.cplace.solution.safe.riskReduction'","visible":false},{"name":"'cf.cplace.solution.safe.jobSize'","visible":false},{"name":"'cf.cplace.solution.safe.actualStartDate'","visible":false},{"name":"'cf.cplace.solution.safe.actualEndDate'","visible":false},{"name":"'cf.cplace.solution.safe.flowTime'","visible":false},{"name":"'cf.cplace.solution.safe.solutionShortName'","visible":false},{"name":"'cf.cplace.solution.safe.plannedStart'","visible":false},{"name":"'cf.cplace.solution.safe.plannedEnd'","visible":false},{"name":"'cf.cplace.solution.safe.iteration'","visible":false},{"name":"'cf.cplace.solution.safe.definitionOfDone'","visible":false},{"name":"'cf.cplace.solution.safe.acceptanceCriteria'","visible":false},{"name":"'cf.cplace.solution.safe.benefitHypothesis'","visible":false},{"name":"'cf.cplace.solution.safe.conflictState'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: multiSortColumns
          value: s[{"sortColumn":"'cf.cplace.solution.safe.wsjf'","sortOrder":"desc","sortingPriorityIndex":1}]
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"customAttributeMultiExactValues":"cf.cplace.solution.safe.state","values":["s#35
            - Backlog"]},{"not":{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]},{"customOutgoingSubSearch":"cf.cplace.solution.safe.programIncrement","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.programIncrement"]},{"customIncomingSubSearch":"cf.cplace.solution.safe.currentPi","search":{"filters":[{"contentTypes":["page"]},{"types":["cf.cplace.solution.safe.solution"]}]}
            }]} }]} }]}
        - name: showNewButton
          value: sNo
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"en":"Backlog","de":"Backlog"}
        collapsed: false
        id: _hlxugz5px1y7o8plamh85uqua
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * HIGHCHART\\n * @customType\
            \ cf.cplace.solution.safe.solution\\n * @layout default layout\\n * @author\
            \ Christopher W\xF6lfle <christopher.woelfle@cplace.com>\\n * @version\
            \ 1.0\\n * @description Displays the timeline with Programm Increments,\
            \ Safe Events and Safe Milestones. Chart is zoomable and draggable\\n\
            \ */\\n\\n// set the distinguishing log name\\ncplace.setLogName(\\\"\
            Highcharts - Timeline Overview\\\");\\n\\n/***** Start configuration *****/\\\
            nconst chartBackgroundColor = \\\"#FFFFFF\\\";\\nconst lineColor = \\\"\
            #303038\\\";\\n\\nconst piColor = \\\"#dddddd\\\";\\nconst safeMilestoneColor\
            \ = \\\"#3D8F8C\\\";\\nconst eventColor = \\\"#366C81\\\";\\n\\nconst\
            \ milestonePlotBandColor = \\\"#E2F3F2\\\";\\nconst eventPlotBandColor\
            \ = \\\"#E2EEF3\\\";\\nconst todayPlotline = \\\"lightgrey\\\";\\n\\nconst\
            \ showMonthsBeforeToday = 3;\\nconst showMonthsAfterToday = 9;\\n/*****\
            \ End configuration *****/\\n\\nconst MILESTONE = {\\n    TYPE: \\\"cf.milestone\\\
            \",\\n    ATTR: {\\n        SCHEDULE: \\\"containingSchedule\\\",\\n \
            \       DATE: \\\"date\\\",\\n        FEATURE_DEPENDENCY: \\\"cf.cplace.solution.safe.dependency\\\
            \",\\n        TASKCLASS: \\\"activityClass\\\",\\n    },\\n};\\nconst\
            \ FEATURE = {\\n    TYPE: \\\"cf.cplace.solution.safe.feature\\\",\\n\
            \    ATTR: {\\n        PROGRAM: \\\"cf.cplace.solution.safe.program\\\"\
            ,\\n    },\\n};\\nconst SCHEDULE = {\\n    TYPE: \\\"cf.schedule\\\",\\\
            n    ATTR: {},\\n};\\nconst TASK_CLASS = {\\n    TYPE: \\\"cf.activityClass\\\
            \",\\n    ATTR: {\\n        COLOR: \\\"barColor\\\",\\n        BORDERCOLOR:\
            \ \\\"borderColor\\\",\\n        SHAPE: \\\"milestoneShape\\\",\\n   \
            \ },\\n};\\nconst SAFE_MILESTONE = {\\n    TYPE: \\\"cf.cplace.solution.safe.safeMilestone\\\
            \",\\n    ATTR: {\\n        DATE: \\\"cf.cplace.solution.safe.date\\\"\
            ,\\n    },\\n};\\nconst PI = {\\n    TYPE: \\\"cf.cplace.solution.safe.programIncrement\\\
            \",\\n    ATTR: {\\n        START: \\\"cf.cplace.solution.safe.startDate\\\
            \",\\n        END: \\\"cf.cplace.solution.safe.endDate\\\",\\n    },\\\
            n};\\nconst EVENT = {\\n    TYPE: \\\"cf.cplace.solution.safe.event\\\"\
            ,\\n    ATTR: {\\n        START_DATE: \\\"cf.cplace.solution.safe.startDate\\\
            \",\\n        END_DATE: \\\"cf.cplace.solution.safe.endDate\\\",\\n  \
            \      SOLUTION: \\\"cf.cplace.solution.safe.solution\\\",\\n    },\\\
            n};\\n\\nfunction main() {\\n    /** @type {ChartContext} */\\n    const\
            \ context = {\\n        today: new Date(),\\n        start: getStartDate(showMonthsBeforeToday),\\\
            n        end: getEndDate(showMonthsAfterToday),\\n        solution: embeddingPage.get('cf.cplace.solution.safe.parent'),\\\
            n        schedules: [],\\n        programIncrements: [],\\n        events:\
            \ [],\\n        safeMilestones: [],\\n        series: [],\\n        plotlines:\
            \ [],\\n        categories: [\\\"<b>Program Increments</b>\\\", \\\"<b>Events</b>\\\
            \", \\\"<b>SAFe Milestones</b>\\\"],\\n        yIndex: 0,\\n    };\\n\\\
            n    categorizeData(pages, context);\\n    createPiSeries(context);\\\
            n    createEventSeries(context);\\n    createMilestoneSeries(context);\\\
            n    //create plotline between SAFe parts and schedules\\n    //ctx.plotLines.push(createPlotline(yIndex\
            \ - 0.5, 1.25));\\n    createScheduleSeries(context);\\n\\n    return\
            \ createChartConfig(context);\\n}\\n\\n/**\\n * Sort pages by their type\
            \ and them to the context\\n * @param {Page[]} pages\\n * @param {ChartContext}\
            \ ctx\\n */\\nfunction categorizeData(pages, ctx) {\\n    cplace.each(pages,\
            \ (page) => {\\n        let type = page.getBuiltinFeatureValue(\\\"customType\\\
            \");\\n        if (type === SCHEDULE.TYPE) {\\n            ctx.schedules.push(page);\\\
            n        } else if (type === PI.TYPE) {\\n            ctx.programIncrements.push(page);\\\
            n        } else if (type === SAFE_MILESTONE.TYPE) {\\n            ctx.safeMilestones.push(page);\\\
            n        } else if (type === EVENT.TYPE) {\\n            ctx.events.push(page);\\\
            n        }\\n    });\\n}\\n\\n/**\\n * Create pi series\\n * @param {ChartContext}\
            \ ctx\\n */\\nfunction createPiSeries(ctx) {\\n    const piData = [];\\\
            n    cplace.each(ctx.programIncrements, (pi) => {\\n        piData.push(createDataItem(pi.getName(),\
            \ pi.get(PI.ATTR.START), pi.get(PI.ATTR.END), ctx.yIndex, piColor));\\\
            n    });\\n    ctx.yIndex++;\\n    ctx.series.push({\\n        name: \\\
            \"Program Increments\\\",\\n        showInLegend: false,\\n          tooltip:\
            \ {\\n            headerFormat: \\\"\\\",\\n            pointFormat: \\\
            \"<b>{point.name}</b><br/>Start: {point.x: %Y-%m-%d}<br/> End: {point.x2:\
            \ %Y-%m-%d}\\\",\\n            useHTML: true,\\n        },\\n        data:\
            \ piData,\\n        dataLabels: {\\n            enabled: true,\\n    \
            \        format: \\\"<b>{point.name}</b>\\\",\\n        },\\n        states:\
            \ {\\n            inactive: {\\n                opacity: 1,\\n       \
            \     },\\n        },\\n    });\\n    return piData;\\n}\\n\\n/**\\n *\
            \ Create event series\\n * @param {ChartContext} ctx\\n */\\nfunction\
            \ createEventSeries(ctx) {\\n    let eventData = [];\\n    cplace.each(ctx.events,\
            \ (event) => {\\n        eventData.push(\\n            createDataItem(\\\
            n                event.getName(),\\n                event.get(EVENT.ATTR.START_DATE),\\\
            n                event.get(EVENT.ATTR.END_DATE),\\n                ctx.yIndex,\\\
            n                eventColor\\n            )\\n        );\\n    });\\n\
            \    ctx.yIndex++;\\n    ctx.series.push({\\n        name: \\\"Events\\\
            \",\\n        showInLegend: false,\\n          tooltip: {\\n         \
            \   headerFormat: \\\"\\\",\\n            pointFormat: \\\"<b>{point.name}</b><br/>Start:\
            \ {point.x: %Y-%m-%d}<br/> End: {point.x2: %Y-%m-%d}\\\",\\n         \
            \   useHTML: true,\\n        },\\n        data: eventData,\\n        dataLabels:\
            \ {\\n            enabled: true,\\n            format: \\\"<b>{point.name}</b>\\\
            \",\\n        },\\n        states: {\\n            inactive: {\\n    \
            \            opacity: 1,\\n            },\\n        },\\n    });\\n}\\\
            n\\n/**\\n * Create safe milestone series\\n * @param {ChartContext} ctx\\\
            n */\\nfunction createMilestoneSeries(ctx) {\\n    let safeMilestoneData\
            \ = [];\\n    cplace.each(ctx.safeMilestones, (safeMilestone) => {\\n\
            \        safeMilestoneData.push(\\n            createMilestoneDataItem(\\\
            n                safeMilestone.getName(),\\n                safeMilestone.get(SAFE_MILESTONE.ATTR.DATE),\\\
            n                ctx.yIndex,\\n                safeMilestoneColor,\\n\
            \                safeMilestoneColor\\n            )\\n        );\\n  \
            \  });\\n    ctx.yIndex++;\\n    ctx.series.push(createMilestoneSerie(\\\
            \"SAFe Milestones\\\", safeMilestoneData));\\n}\\n/**\\n * Create Chart\
            \ configuration\\n * @param {ChartContext} ctx\\n * @returns\\n */\\nfunction\
            \ createChartConfig(ctx) {\\n    return {\\n        chart: {\\n      \
            \      type: \\\"xrange\\\",\\n            backgroundColor: chartBackgroundColor,\\\
            n            panning: true,\\n            panKey: \\\"shift\\\",\\n  \
            \          zoomType: \\\"x\\\",\\n        },\\n        title: {\\n   \
            \         text: \\\"\\\",\\n        },\\n        yAxis: {\\n         \
            \   title: {\\n                text: \\\"\\\",\\n            },\\n   \
            \         categories: ctx.categories,\\n            reversed: true,\\\
            n            type: \\\"category\\\",\\n            plotBands: [\\n   \
            \             {\\n                    color: eventPlotBandColor,\\n  \
            \                  from: 0.5,\\n                    to: 1.5,\\n      \
            \              borderColor: \\\"white\\\",\\n                    borderWidth:\
            \ 2,\\n                    zIndex: 0,\\n                },\\n        \
            \        {\\n                    color: milestonePlotBandColor,\\n   \
            \                 from: 1.5,\\n                    to: 2.5,\\n       \
            \             borderColor: \\\"white\\\",\\n                    borderWidth:\
            \ 2,\\n                    zIndex: 0,\\n                },\\n        \
            \    ],\\n        },\\n        xAxis: {\\n            type: \\\"datetime\\\
            \",\\n            min: Date.UTC(ctx.start.getFullYear(), ctx.start.getMonth(),\
            \ ctx.start.getDate(), 0, 0, 0, 0),\\n            max: Date.UTC(ctx.end.getFullYear(),\
            \ ctx.end.getMonth(), ctx.end.getDate(), 23, 59, 59, 59),\\n         \
            \   plotLines: [\\n                {\\n                    dashStyle:\
            \ \\\"dash\\\",\\n                    color: todayPlotline,\\n       \
            \             width: 2,\\n                    value: Date.UTC(ctx.today.getFullYear(),\
            \ ctx.today.getMonth(), ctx.today.getDate(), 0, 0, 0, 0),\\n         \
            \           zIndex: 1,\\n                },\\n                ...ctx.plotlines,\\\
            n            ],\\n        },\\n        tooltip: {\\n            enabled:\
            \ true,\\n        },\\n        series: ctx.series,\\n    };\\n}\\n\\n/**\\\
            n * Create schedule series\\n * @param {ChartContext} ctx\\n */\\nfunction\
            \ createScheduleSeries(ctx) {\\n    cplace.each(ctx.schedules, (schedule)\
            \ => {\\n        let relevantSchedule = false;\\n        let scheduleData\
            \ = [];\\n        let milestones = schedule.getIncomingPages(MILESTONE.TYPE,\
            \ MILESTONE.ATTR.SCHEDULE);\\n        cplace.each(milestones, (milestone)\
            \ => {\\n            let featureDependency = milestone.get(MILESTONE.ATTR.FEATURE_DEPENDENCY);\\\
            n            let isProgramRelevant = false;\\n            cplace.each(featureDependency,\
            \ (feature) => {\\n                let featureProgram = feature.get(FEATURE.ATTR.PROGRAM);\\\
            n                if (featureProgram && featureProgram.getId() === ctx.solution.getId())\
            \ {\\n                    isProgramRelevant = true;\\n               \
            \ }\\n            });\\n            if (isProgramRelevant) {\\n      \
            \          relevantSchedule = true;\\n                scheduleData.push(createScheduleMilestoneDataItem(milestone,\
            \ ctx.yIndex));\\n            }\\n        });\\n        if (relevantSchedule)\
            \ {\\n            ctx.categories.push(createCategory(schedule));\\n  \
            \          ctx.series.push(createMilestoneSerieSchedule(schedule.getName(),\
            \ scheduleData));\\n            ctx.yIndex++;\\n        }\\n    });\\\
            n}\\n\\n//FUNCTIONS\\nfunction createDataItem(name, start, end, y, color)\
            \ {\\n    let startDate = new Date(start);\\n    let endDate = new Date(end);\\\
            n    return {\\n        name: name,\\n        x: Date.UTC(startDate.getFullYear(),\
            \ startDate.getMonth(), startDate.getDate(), 0, 0, 0, 0),\\n        x2:\
            \ Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate(),\
            \ 23, 59, 59, 99),\\n        y: y,\\n        color: color,\\n    };\\\
            n}\\n\\nfunction getMilestoneShape(milestoneShape) {\\n    if (milestoneShape\
            \ === \\\"Diamond\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Arrow Up\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Arrow Down\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Up\\\") return \\\"triangle\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Down\\\") return \\\"triangle-down\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Left\\\") return \\\"triangle\\\";\\n    if (milestoneShape\
            \ === \\\"Triangle Right\\\") return \\\"triangle\\\";\\n    if (milestoneShape\
            \ === \\\"Circle\\\") return \\\"circle\\\";\\n    if (milestoneShape\
            \ === \\\"Square\\\") return \\\"square\\\";\\n    if (milestoneShape\
            \ === \\\"Star\\\") return \\\"diamond\\\";\\n    if (milestoneShape ===\
            \ \\\"Ramp Down\\\") return \\\"diamond\\\";\\n    if (milestoneShape\
            \ === \\\"Ramp Up\\\") return \\\"diamond\\\";\\n}\\n\\nfunction createMilestoneDataItem(name,\
            \ date, y, color, borderColor) {\\n    let milestoneDate = new Date(date);\\\
            n    return {\\n        name: name,\\n        x: Date.UTC(milestoneDate.getFullYear(),\
            \ milestoneDate.getMonth(), milestoneDate.getDate(), 0, 0, 0, 0),\\n \
            \       y: y,\\n        marker: {\\n            fillColor: color,\\n \
            \           lineColor: borderColor,\\n            lineWidth: 1,\\n   \
            \     },\\n    };\\n}\\n\\nfunction createScheduleMilestoneDataItem(milestone,\
            \ y) {\\n    let name = milestone.getName();\\n    let milestoneDate =\
            \ new Date(milestone.get(MILESTONE.ATTR.DATE));\\n    let color = milestone.getOptional(MILESTONE.ATTR.TASKCLASS).get(TASK_CLASS.ATTR.COLOR);\\\
            n    let borderColor = milestone.getOptional(MILESTONE.ATTR.TASKCLASS).get(TASK_CLASS.ATTR.BORDERCOLOR);\\\
            n    let milestoneShape = getMilestoneShape(milestone.getOptional(MILESTONE.ATTR.TASKCLASS).get(TASK_CLASS.ATTR.SHAPE));\\\
            n    let features = milestone.get(MILESTONE.ATTR.FEATURE_DEPENDENCY);\\\
            n    let featureList = \\\"<b>Requested Features:</b>\\\";\\n    cplace.each(features,\
            \ (feature) => {\\n        featureList = featureList + \\\"<br>\\\" +\
            \ feature.getName();\\n    });\\n\\n    return {\\n        name: name,\\\
            n        x: Date.UTC(milestoneDate.getFullYear(), milestoneDate.getMonth(),\
            \ milestoneDate.getDate(), 0, 0, 0, 0),\\n        y: y,\\n        features:\
            \ featureList,\\n        marker: {\\n            fillColor: color,\\n\
            \            lineColor: borderColor,\\n            lineWidth: 1,\\n  \
            \          symbol: milestoneShape,\\n        },\\n    };\\n}\\n\\nfunction\
            \ createMilestoneSerie(name, dataSeries) {\\n    return {\\n        name:\
            \ name,\\n        type: \\\"scatter\\\",\\n        //stickyTracking: false,\\\
            n        showInLegend: false,\\n        marker: {\\n            enabled:\
            \ true,\\n            symbol: \\\"diamond\\\",\\n            lineWidth:\
            \ 5,\\n            radius: 12,\\n        },\\n        tooltip: {\\n  \
            \          headerFormat: \\\"<b>{point.key}</b><br>\\\",\\n          \
            \  pointFormat: \\\"{point.x: %Y-%m-%d}\\\",\\n        },\\n        data:\
            \ dataSeries,\\n        states: {\\n            inactive: {\\n       \
            \         opacity: 1,\\n            },\\n        },\\n    };\\n}\\n\\\
            nfunction createMilestoneSerieSchedule(name, dataSeries) {\\n    return\
            \ {\\n        name: name,\\n        type: \\\"scatter\\\",\\n        //stickyTracking:\
            \ false,\\n        showInLegend: false,\\n        marker: {\\n       \
            \     enabled: true,\\n            symbol: \\\"diamond\\\",\\n       \
            \     lineWidth: 5,\\n            radius: 12,\\n        },\\n        tooltip:\
            \ {\\n            useHTML: true,\\n            headerFormat: \\\"<b>{point.key}</b><br>\\\
            \",\\n            pointFormat: \\\"{point.x: %Y-%m-%d}<br>{point.features}\\\
            \",\\n        },\\n        data: dataSeries,\\n        states: {\\n  \
            \          inactive: {\\n                opacity: 1,\\n            },\\\
            n        },\\n    };\\n}\\n\\nfunction createPlotline(value, width) {\\\
            n    return {\\n        color: lineColor,\\n        width: width,\\n \
            \       value: value,\\n        dashStyle: \\\"solid\\\",\\n    };\\n}\\\
            n\\nfunction getStartDate(months) {\\n    let today = new Date();\\n \
            \   let startDate = today;\\n    startDate.setMonth(today.getMonth() -\
            \ months);\\n    return startDate;\\n}\\n\\nfunction getEndDate(months)\
            \ {\\n    let today = new Date();\\n    let endDate = today;\\n    endDate.setMonth(today.getMonth()\
            \ + months);\\n    return endDate;\\n}\\n\\nfunction createCategory(object)\
            \ {\\n    let name = object.getName();\\n    let url = object.getUrl();\\\
            n    return '<a href=\\\"' + url + '\\\">' + name + \\\"</a>\\\";\\n}\\\
            n\\n/**\\n * Object containing context information for the chart.\\n *\
            \ @typedef {Object} ChartContext\\n * @property {Date} today - The current\
            \ date.\\n * @property {Date} start - The start date for the chart.\\\
            n * @property {Date} end - The end date for the chart.\\n * @property\
            \ {Page} solution - The embeddingPage object representing the current\
            \ solution.\\n * @property {Page[]} schedules - An array of pages representing\
            \ schedules.\\n * @property {Page[]} programIncrements - An array of pages\
            \ representing program increments.\\n * @property {Page[]} events - An\
            \ array of pages representing events.\\n * @property {Page[]} safeMilestones\
            \ - An array of pages representing SAFe milestones.\\n * @property {any[]}\
            \ series - An array of series\\n * @property {any[]} plotlines - An array\
            \ of plotlines\\n * @property {string[]} categories - An array of categories\\\
            n * @property {number} yIndex - y-index\\n */\\n\\n// @ts-ignore\\nreturn\
            \ main();\",\"upgradeAck\":true,\"description\":\"\"}"
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"or":[{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution","referenceOperator":"parentOfEmbeddingPage"}]},{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.safeMilestone"]}]},{"and":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.event"]}]}]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: cf.cplace.visualization.tableSelectionOnly
          value: bfalse
        - name: height
          value: d300
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: "m{\"en\":\"Timeline Overview\",\"de\":\"Zeitplan \xDCbersicht\"}"
        collapsed: false
        id: _skq58gif2yxgt9id0332zf2y3
        widgetType: cf.cplace.visualizations.scriptingHighcharts
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: content
          value: 'r<h4 style="background-color: rgb(220, 220, 220); border-radius:
            4px; border: 1px solid transparent; color: rgb(118, 118, 118); font-size:
            14px; margin-bottom: 20px; padding: 10px"><strong>Create and manage the
            SAFe milestones, events and PIs in the tables below. Zoom in on the chart
            by holding down the mouse and dragging a window around the area you want
            to see in more detail.</strong></h4>'
        - name: localizedWidgetTitle
          value: m{"de":"Information","en":"Information"}
        collapsed: false
        id: _ez6ezjsxcug25tm9k6ru1dcor
        widgetType: cf.cplace.demoWidgets.demoRichString
  - columns:
    - proportion: 4
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.startDate'","visible":true},{"name":"'cf.cplace.solution.safe.endDate'","visible":true},{"name":"'cf.cplace.solution.safe.periodStatus'","visible":true},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"'cf.cplace.solution.safe.solution'","visible":false},{"name":"'cf.cplace.solution.safe.predecessor'","visible":false},{"name":"'cf.cplace.solution.safe.confidenceVote'","visible":false},{"name":"'cf.cplace.solution.safe.confidenceVote.fiveFinger'","visible":false},{"name":"'cf.cplace.solution.safe.confidenceVote.fourFinger'","visible":false},{"name":"'cf.cplace.solution.safe.confidenceVote.threeFinger'","visible":false},{"name":"'cf.cplace.solution.safe.confidenceVote.twoFinger'","visible":false},{"name":"'cf.cplace.solution.safe.confidenceVote.oneFinger'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: height
          value: d450
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: multiSortColumns
          value: s[{"sortColumn":"'cf.cplace.solution.safe.startDate'","sortOrder":"desc","sortingPriorityIndex":1}]
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution","referenceOperator":"parentOfEmbeddingPage"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Program Increments","en":"Program Increments"}
        collapsed: false
        id: _6zen8hdu9ocr4wm57lng06bcx
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 4
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.date'","visible":true},{"name":"'cf.cplace.solution.safe.type'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.relevantFor'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: height
          value: d450
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: multiSortColumns
          value: s[{"sortColumn":"'cf.cplace.solution.safe.date'","sortOrder":"desc","sortingPriorityIndex":1}]
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.safeMilestone"]}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"SAFe Meilensteine","en":"SAFe Milestones"}
        collapsed: false
        id: _vgm8ymxsm64uxhc4ng0i0lmao
        widgetType: cf.platform.embeddedSearchAsTable
    - proportion: 4
      widgets:
      - attributes:
        - name: columns
          value: s[{"name":"'cf.cplace.solution.safe.startDate'","visible":true},{"name":"'cf.cplace.solution.safe.endDate'","visible":true},{"name":"'cf.cplace.solution.safe.title'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false},{"name":"'cf.cplace.solution.safe.date'","visible":false},{"name":"'cf.cplace.solution.safe.type'","visible":false},{"name":"'cf.cplace.solution.safe.relevantFor'","visible":false}]
        - name: groupOrder
          value: sasc
        - name: height
          value: d450
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: multiSortColumns
          value: s[{"sortColumn":"'cf.cplace.solution.safe.startDate'","sortOrder":"desc","sortingPriorityIndex":1}]
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.event"]},{"relativeCustomReference":"cf.cplace.solution.safe.solution","referenceOperator":"parentOfEmbeddingPage"}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: btrue
        - name: title
          value: m{"de":"Events","en":"Events"}
        collapsed: false
        id: _54pncmokzq8rdbrlubkkge6pv
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n * @author Rakshit Midha\n * @description
            Creates Flow Distribution highchart\n */\n\n//--------------------------------------------------------------------------------------//\n//                                       LOG
            AND DEBUG                                  //\n//--------------------------------------------------------------------------------------//\ncplace.setLogName(''highchart-flow-distribution'');\n\n\n//--------------------------------------------------------------------------------------//\n//                                       CONFIGURATION                                  //\n//--------------------------------------------------------------------------------------//\n\nconst
            CAPABILITY = {\n  TYPE: ''cf.cplace.solution.safe.capability'',\n  ATTR:
            {\n    PROGRAM_INCREMENT: ''cf.cplace.solution.safe.programIncrement'',\n    CAPABILITY_TYPE:
            {\n      INTERNAL_NAME: ''cf.cplace.solution.safe.capabilityType'',\n      ENUM_VALUES:
            {\n        CAPABILITY: ''capability'',\n        ENABLER: ''enabler''\n      }\n    }\n  }\n};\n\nconst
            COLUMN_COLOR1 = ''#26285d'';\nconst COLUMN_COLOR2 = ''#b8d4fa'';\n\n//--------------------------------------------------------------------------------------//\n//                                       INITIALIZATION                                 //\n//--------------------------------------------------------------------------------------//\nconst
            flowDistributionSeries = getFlowDistributionSeries(pages);\nconst categories
            = getCategories(flowDistributionSeries);\nconst transformedSeries = transformSeries(flowDistributionSeries)\n\nconst
            config = {\n  title: {\n    text: ''Flow Distribution''\n  },\n  chart:
            {\n    type: ''column'',\n    spacingBottom: 25,\n    spacingTop: 20\n  },\n  legend:
            {\n    backgroundColor: ''white'',\n    borderColor: ''#CCC'',\n    borderWidth:
            1,\n    shadow: false\n  },\n  tooltip: {\n    headerFormat: ''<b>{point.x}</b><br/>'',\n    pointFormat:
            ''{series.name}: {point.y}''\n  },\n  xAxis: {\n    categories: categories\n  },\n  yAxis:
            {\n    title: '''',\n    labels: {\n      format: ''{value}%'',\n    },\n    allowDecimals:
            false,\n    max: 100\n  },\n  plotOptions: {\n    series: {\n      pointWidth:
            40,\n    },\n    column: {\n      stacking: ''normal'',\n    }\n  },\n  colors:
            [COLUMN_COLOR1, COLUMN_COLOR2],\n  series: transformedSeries\n}\n\nreturn
            config;\n\n/**\n * Creates a map of Capability and Enabler count for each
            Program Iteration\n */\nfunction getFlowDistributionSeries(pages) {\n  let
            series = [];\n  cplace.each(pages, programIncrement => {\n    const capabilities
            = programIncrement.getIncomingPages(CAPABILITY.TYPE, CAPABILITY.ATTR.PROGRAM_INCREMENT);\n    let
            enablerCount = 0;\n    let capabilitiesCount = 0;\n    cplace.each(capabilities,
            capability => {\n      const capabilityType = capability.get(CAPABILITY.ATTR.CAPABILITY_TYPE.INTERNAL_NAME);\n\n      if
            (capabilityType === CAPABILITY.ATTR.CAPABILITY_TYPE.ENUM_VALUES.ENABLER)
            {\n        enablerCount++\n      }\n      if (capabilityType === CAPABILITY.ATTR.CAPABILITY_TYPE.ENUM_VALUES.CAPABILITY)
            {\n        capabilitiesCount++\n      }\n    });\n\n    let seriesObject
            = {};\n    seriesObject[''name''] = programIncrement.getName();\n    let
            totalCount = capabilitiesCount + enablerCount;\n    seriesObject[''data'']
            = totalCount ? [(capabilitiesCount / totalCount) * 100, (enablerCount
            / totalCount) * 100] :\n      [0, 0]\n    series.push(seriesObject);\n  });\n\n  return
            series.sort(function (a, b) {\n    let x = a[''name''];\n    let y = b[''name''];\n    return
            ((x < y) ? -1 : ((x > y) ? 1 : 0));\n  });\n}\n\n/**\n * Computes the
            name of all Program Iterations\n */\nfunction getCategories(flowDistributionSeries)
            {\n  let categories = [];\n  flowDistributionSeries.forEach(seriesObject
            => {\n    categories.push(seriesObject[''name'']);\n  })\n  return categories;\n}\n\n/**\n
            * Transforms the Flow Distribution series to count of Capabilities and
            Enablers\n */\nfunction transformSeries(sortedFlowDistributionSeries)
            {\n  let series = [{''name'': ''Capabilities'', data: []}, {''name'':
            ''Enablers'', data: []}];\n  sortedFlowDistributionSeries.forEach(seriesObject
            => {\n    series[0][''data''].push(seriesObject[''data''][0]);\n    series[1][''data''].push(seriesObject[''data''][1]);\n  });\n  return
            series;\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"Flow Distribution","en":"Flow Distribution"}
        collapsed: false
        id: _d6zqol4lcmy05dturqx8e3ec5
        widgetType: cf.cplace.visualizations.scriptingHighcharts
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: "s{\"version\":1,\"script\":\"/**\\n * HIGHCHART\\n * @customType\
            \ cf.cplace.solution.safe.metricsDashboard\\n * @layout cf.cplace.solution.safe.layout.flowEfficiency\\\
            n * @author Christopher W\xF6lfle <christopher.woelfle@cplace.com>\\n\
            \ * @version 1.0\\n * @description Displays a dummy flow efficiency chart\\\
            n */\\n\\nconst SEED = 1234;\\n\\nfunction generateDummyData() {\\n  \
            \  const efficiencies = [];\\n    // Generate numbers in 0.05 intervals\
            \ from 0 to 1\\n    for (let i = 0; i <= 20; i++) {\\n        efficiencies.push(i\
            \ * 0.05);\\n    }\\n    const data = efficiencies.map((e) => ({\\n  \
            \      x: e*100,\\n        y: getRandomNumber(0, Math.round(20 * (e +\
            \ 0.01))),\\n    }));\\n\\n    return data;\\n}\\n\\nfunction main() {\\\
            n    const data = generateDummyData();\\n    return generateConfig(data);\\\
            n}\\n\\nfunction generateConfig(data) {\\n    return {\\n        chart:\
            \ {\\n            type: \\\"column\\\",\\n        },\\n        title:\
            \ {\\n            text: \\\"Flow Efficiency\\\",\\n        },\\n     \
            \   xAxis: {\\n            title: {\\n                text: \\\"Flow Efficiency\\\
            \",\\n            },\\n            labels: {format: \\\"{value:.1f}%\\\
            \"}\\n        },\\n        yAxis: {\\n            title: {\\n        \
            \        text: \\\"Number of Capabilities\\\",\\n            },\\n   \
            \         \\n        },\\n        tooltip: {\\n            headerFormat:\
            \ \\\"\\\",\\n            pointFormat: \\\"<b>{point.y}</b><br/>capabilities\
            \ with a flow efficiency of {point.x:.1f}%\\\",\\n        },\\n      \
            \  plotOptions: {\\n            series: {\\n                borderWidth:\
            \ 0,\\n                dataLabels: {\\n                    enabled: true,\\\
            n                    format: \\\"{point.y}\\\",\\n                },\\\
            n            },\\n        },\\n        series: [{ name: \\\"Flow Efficiency\\\
            \", data }],\\n    };\\n}\\n\\nclass PseudoRandomNumberGenerator {\\n\
            \    constructor(seed) {\\n        this.a = 1664525;\\n        this.c\
            \ = 1013904223;\\n        this.m = Math.pow(2, 32);\\n        this.seed\
            \ = seed;\\n    }\\n\\n    random() {\\n        this.seed = (this.a *\
            \ this.seed + this.c) % this.m;\\n        return this.seed / this.m;\\\
            n    }\\n}\\n\\nconst prng = new PseudoRandomNumberGenerator(SEED);\\\
            n\\nfunction getRandomNumber(min, max) {\\n    // Calculate the range\
            \ of the random number\\n    const range = max - min;\\n\\n    // Generate\
            \ a random number within the range\\n    const randomNumber = prng.random()\
            \ * range + min;\\n\\n    // Round the random number to the nearest integer\\\
            n    const roundedNumber = Math.round(randomNumber);\\n\\n    return roundedNumber;\\\
            n}\\n\\n// @ts-ignore\\nreturn main();\",\"upgradeAck\":true,\"description\"\
            :\"\"}"
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"Flow Efficiency","en":"Flow Efficiency"}
        collapsed: false
        id: _yzl1ixf7mhhgowcvt9gv7eoqy
        widgetType: cf.cplace.visualizations.scriptingHighcharts
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n * @author Nepomuk Heimberger\n * @description
            Creates Flow Predictability highchart\n */\n\n//--------------------------------------------------------------------------------------//\n//                                       LOG
            AND DEBUG                                  //\n//--------------------------------------------------------------------------------------//\ncplace.setLogName(''highchart-flow-predictability'');\n\n\n//--------------------------------------------------------------------------------------//\n//                                       CONFIGURATION                                  //\n//--------------------------------------------------------------------------------------//\n\nconst
            OBJECTIVE = {\n  TYPE: ''cf.cplace.solution.safe.objective'',\n  ATTR:
            {\n    PROGRAM_INCREMENT: ''cf.cplace.solution.safe.timebox'',\n    BUSINESS_VALUE:
            ''cf.cplace.solution.safe.businessValue'',\n    ACTUAL_VALUE: ''cf.cplace.solution.safe.actualValue'',\n    COMMITMENT:
            {\n      INTERNAL_NAME: ''cf.cplace.solution.safe.commitment'',\n      ENUM_VALUES:
            {\n        COMMITTED: ''#15 - Committed'',\n        UNCOMMITTED: ''#25
            - Uncommitted''\n      }\n    },\n     SAFE_LEVEL: {\n      INTERNAL_NAME:
            ''cf.cplace.solution.safe.SAFeLevel'',\n      ENUM_VALUES: {\n        SOLUTION:
            ''#15 - Solution'',\n        PROGRAM: ''#25 - Program'',\n        TEAM:
            ''#35 - Team''\n      }\n    }\n  }\n};\n\n\nconst COLUMN_COLOR1 = ''#26285d'';\nconst
            COLUMN_COLOR2 = ''#b8d4fa'';\nconst LINE_COLOR = ''#368F8B'';\nconst LINE_COLOR_2
            = ''#155451'';\n\n//--------------------------------------------------------------------------------------//\n//                                       INITIALIZATION                                 //\n//--------------------------------------------------------------------------------------//\n\nconst
            flowPredictabilitySeries = getFlowPredictabilitySeries(pages);\nconst
            sortedSeries = sortSeriesByName(flowPredictabilitySeries);\nconst categories
            = getCategories(sortedSeries);\nconst transformedSeries = transformSeries(sortedSeries);\n\nconst
            config = {\n  title: {\n    text: ''Flow Predictability Measure''\n  },\n  xAxis:
            {\n    categories: categories,\n    title: {\n      text: ''''\n    }\n  },\n  yAxis:
            [{\n    title: {\n      text: ''Objectives Achieved''\n    },\n    allowDecimals:
            false,\n  },\n  {\n    title: {\n      text: ''Predictability'',\n      style:
            {\n        color: LINE_COLOR\n      },\n    },\n    labels: {\n      style:
            {\n        color: LINE_COLOR\n      },\n    },    \n    plotLines: [{\n      color:
            LINE_COLOR_2,\n      value: 80,\n      width: ''1'',\n      dashStyle:
            ''LongDash'',\n      zIndex: 4\n    },\n    {\n      color: LINE_COLOR_2,\n      value:
            100,\n      width: ''1'',\n      dashStyle: ''LongDash'',\n      zIndex:
            4\n    }],\n    opposite: true\n  }],\n  plotOptions: {\n    series: {\n      pointWidth:
            50\n    }\n  },\n  colors: [COLUMN_COLOR1, COLUMN_COLOR2],\n  series:
            Object.values(transformedSeries)\n}\n\nreturn config;\n\n\n\n/**\n * Creates
            an array of a map of Program Iteration names and program predictability
            measure\n */\nfunction getFlowPredictabilitySeries(pages) {\n  let piSeries
            = []; //[{''name'': '''', ''values'': []}]\n\n  cplace.each(pages, programIncrement
            => {\n    const objectives = programIncrement.getIncomingPages(OBJECTIVE.TYPE,
            OBJECTIVE.ATTR.PROGRAM_INCREMENT);\n    let totalBusinessValue = 0\n    let
            totalActualValue = 0\n    cplace.each(objectives, objective => {\n      const
            safeLevel = objective.get(OBJECTIVE.ATTR.SAFE_LEVEL.INTERNAL_NAME);\n      if
            (safeLevel === OBJECTIVE.ATTR.SAFE_LEVEL.ENUM_VALUES.SOLUTION) {\n        const
            commitment = objective.get(OBJECTIVE.ATTR.COMMITMENT.INTERNAL_NAME);\n        if
            (commitment === OBJECTIVE.ATTR.COMMITMENT.ENUM_VALUES.COMMITTED) {\n          totalBusinessValue
            += objective.get(OBJECTIVE.ATTR.BUSINESS_VALUE);\n        }\n        totalActualValue
            += objective.get(OBJECTIVE.ATTR.ACTUAL_VALUE);\n      }\n    });\n\n    let
            seriesObject = {};\n    seriesObject[''name''] = programIncrement.getName();\n    const
            flowPredictabilityMeasure = totalBusinessValue ? Math.round((totalActualValue
            / totalBusinessValue) * 100) * 100 / 100 : 0;\n    seriesObject[''values'']
            = [flowPredictabilityMeasure, totalBusinessValue, totalActualValue]\n    piSeries.push(seriesObject);\n  });\n\n  return
            piSeries;\n}\n/**\n * Computes the name of all Program Iterations\n */\nfunction
            getCategories(flowDistributionSeries) {\n  let categories = [];\n  flowDistributionSeries.forEach(seriesObject
            => {\n    categories.push(seriesObject[''name'']);\n  })\n  return categories;\n}\n\n/**\n
            * Transforms the array of series objects to the actual highchart configuration
            series\n */\nfunction transformSeries(series) {\n  let flowPredictabilitySeries
            = {\n    flowPredictabilityMeasure: {type: ''spline'', ''name'': ''Flow
            Predictability Measure'', yAxis:1, data: [],tooltip: {valueSuffix: ''
            %''}, color: LINE_COLOR},\n    totalBusinessValue: {type: ''column'',
            name: ''Planned Business Value'', yAxis:0, data: []},\n    actualBusinessValue:
            {type: ''column'', name: ''Actual Business Value'', yAxis:0, data: []},\n    //
            percentageDottedLine80: {type: ''spline'', dashStyle: ''shortdot'', data:
            []},\n    // percentageDottedLine100: {type: ''spline'', dashStyle: ''shortdot'',
            data: []}\n  };\n\n  series.forEach(seriesObject => {\n    flowPredictabilitySeries[''flowPredictabilityMeasure''][''data''].push(seriesObject[''values''][0]);\n    flowPredictabilitySeries[''totalBusinessValue''][''data''].push(seriesObject[''values''][1]);\n    flowPredictabilitySeries[''actualBusinessValue''][''data''].push(seriesObject[''values''][2]);\n    //
            flowPredictabilitySeries[''percentageDottedLine80''][''data''].push(80);\n    //
            flowPredictabilitySeries[''percentageDottedLine100''][''data''].push(100);\n  });\n\n  return
            flowPredictabilitySeries;\n}\n\n/**\n * Sorts the series by name\n */\nfunction
            sortSeriesByName(series) {\n  return series.sort(function (a, b) {\n    let
            x = a[''name''];\n    let y = b[''name''];\n    return ((x < y) ? -1 :
            ((x > y) ? 1 : 0));\n  });\n}\n/**\n * Returns an array of all IDs of
            the pages\n */\nfunction getPagesUids(pages) {\n    let pagesUids = [];\n    cplace.each(pages,
            page => {\n        pagesUids.push(page.getId())\n    })\n    return pagesUids;\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"Flow Predictability","en":"Flow Predictability"}
        collapsed: false
        id: _fgrs7vhps80zc87fxtl9v4gqy
        widgetType: cf.cplace.visualizations.scriptingHighcharts
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n * @author Rakshit Midha\n * @description
            Creates Flow Time highchart\n */\n\n//--------------------------------------------------------------------------------------//\n//                                       LOG
            AND DEBUG                                  //\n//--------------------------------------------------------------------------------------//\ncplace.setLogName(''highchart-flow-time'');\n\n\n//--------------------------------------------------------------------------------------//\n//                                       CONFIGURATION                                  //\n//--------------------------------------------------------------------------------------//\n\nconst
            CAPABILITY = {\n  TYPE: ''cf.cplace.solution.safe.capability'',\n  ATTR:
            {\n    ''FLOW_TIME'': ''cf.cplace.solution.safe.flowTime''\n  }\n};\n\nconst
            COLUMN_COLOR = ''#26285d'';\n\n//--------------------------------------------------------------------------------------//\n//                                       INITIALIZATION                                 //\n//--------------------------------------------------------------------------------------//\nconst
            flowTimeData = getFlowTimeData(pages);\nconst sortedFlowTimeData = sortFlowTimeData(flowTimeData);\nconst
            seriesData = createSeriesData(sortedFlowTimeData);\nconst averageCapabilities
            = calculateAverageCapabilities(seriesData)\n\nconst config = {\n  title:
            {\n    text: ''Flow Time''\n  },\n  legend: {enabled: false},\n  chart:
            {\n    type: ''column'',\n    spacingBottom: 25,\n    spacingTop: 20\n  },\n  tooltip:
            {\n    headerFormat: null,\n    pointFormat: ''Capability Count: {point.y}''\n  },\n  xAxis:
            {\n    plotLines: [{\n      color: ''red'',\n      value: averageCapabilities,\n      width:
            ''1'',\n      dashStyle: ''LongDash'',\n      zIndex: 4,\n      label:
            {\n        x: -15,\n        text: ''<span style=\"font-size:12px;\">Average:
            '' + averageCapabilities + ''</span>''\n      },\n    }],\n    title:
            {\n      text: ''Flow Time (days)''\n    },\n    gridLineColor: ''#68686CFF'',\n    gridLineWidth:
            0.3,\n    tickLength: 0,\n    tickInterval: 5,\n  },\n  yAxis: {\n    title:
            {\n      text: ''Capability Count''\n    },\n    allowDecimals: false\n  },\n  plotOptions:
            {\n    series: {\n      pointWidth: 30,\n      color: COLUMN_COLOR\n    }\n  },\n  series:
            [{\n    data: Object.values(seriesData)\n  }]\n}\n\nreturn config;\n\n/**\n
            * Creates a map of Flow Time values along with the number of occurrences\n
            * @returns An object with Flow Time values as keys and number of occurrences
            as values\n */\nfunction getFlowTimeData(pages) {\n  let data = {};\n  cplace.each(pages,
            page => {\n    const flowTime = round5(page.get(CAPABILITY.ATTR.FLOW_TIME));\n    if
            (flowTime) {\n      let value = data[flowTime];\n\n      if (value) {\n        data[flowTime]
            = ++value;\n      } else {\n        data[flowTime] = 1;\n      }\n    }\n  });\n  return
            data;\n}\n\n/**\n * Round the number to the previous multiple of 5\n */\nfunction
            round5(x) {\n  return Math.ceil(x / 5) * 5;\n}\n\n/**\n * Sorts the Flow
            Time data in ascending order\n */\nfunction sortFlowTimeData(flowTimeData)
            {\n  return Object.keys(flowTimeData).sort().reduce(\n    (obj, key) =>
            {\n      obj[key] = flowTimeData[key];\n      return obj;\n    },\n    {}\n  );\n}\n\n/**\n
            * Creates the series data for the highchart\n */\nfunction createSeriesData(data)
            {\n  const formattedData = [];\n  let keys = Object.keys(data), len =
            keys[keys.length - 1];\n\n  for (let i = 0; i <= len; i++) {\n    if (data[i])
            {\n      formattedData.push(data[i])\n    } else {\n      formattedData.push(0)\n    }\n  }\n\n  return
            formattedData;\n}\n\nfunction calculateAverageCapabilities(transformedSeries)
            {\n  let totalDays = 0;\n  let capabilities = 0;\n  Object.values(transformedSeries).forEach(seriesData
            => {\n    if(seriesData) {\n      totalDays++;\n      capabilities+=seriesData;\n    }\n  });\n\n  return
            (Math.round(capabilities/totalDays * 100) / 100).toFixed(2);\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.capability"]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"Flow Time","en":"Flow Time"}
        collapsed: false
        id: id_wcqny1vjqa9qikq7ul93bpsxn
        widgetType: cf.cplace.visualizations.scriptingHighcharts
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.visualization.dataSource
          value: ssearch
        - name: cf.cplace.visualization.script
          value: 's{"version":1,"script":"/**\n * @author Rakshit Midha\n * @description
            Creates Flow Velocity highchart\n */\n\n//--------------------------------------------------------------------------------------//\n//                                       LOG
            AND DEBUG                                  //\n//--------------------------------------------------------------------------------------//\ncplace.setLogName(''highchart-flow-velocity'');\n\n\n//--------------------------------------------------------------------------------------//\n//                                       CONFIGURATION                                  //\n//--------------------------------------------------------------------------------------//\n\nconst
            CAPABILITY = {\n  TYPE: ''cf.cplace.solution.safe.capability'',\n  ATTR:
            {\n    PROGRAM_INCREMENT: ''cf.cplace.solution.safe.programIncrement'',\n  }\n};\n\nconst
            COLUMN_COLOR = ''#26285d'';\n\n//--------------------------------------------------------------------------------------//\n//                                       INITIALIZATION                                 //\n//--------------------------------------------------------------------------------------//\nconst
            flowDistributionSeries = getFlowVelocitySeries(pages);\nconst categories
            = getCategories(flowDistributionSeries);\nconst transformedSeries = transformSeries(flowDistributionSeries);\nconst
            averageCapabilities = calculateAverageCapabilities(transformedSeries);\n\nconst
            config = {\n  title: {\n    text: ''Flow Velocity''\n  },\n  chart: {\n    type:
            ''column'',\n    spacingBottom: 25,\n    spacingTop: 20\n  },\n  legend:
            {enabled: false},\n  tooltip: {\n    headerFormat: ''<b>{point.x}</b><br/>'',\n    pointFormat:
            ''Capabilities: {point.y}''\n  },\n  xAxis: {\n    categories: categories,\n    title:
            {\n      text: ''Program Iteration''\n    }\n  },\n  yAxis: {\n    plotLines:
            [{\n      color: ''red'',\n      value: averageCapabilities,\n      width:
            ''1'',\n      dashStyle: ''LongDash'',\n      zIndex: 4,\n      label:
            {\n        text: ''<span style=\"font-size:12px;\">Average Velocity: ''
            + averageCapabilities + ''</span>''\n      },\n    }],\n    title: {\n      text:
            ''Capabilities''\n    },\n    allowDecimals: false,\n  },\n  plotOptions:
            {\n    series: {\n      pointWidth: 40,\n      color: COLUMN_COLOR\n    },\n    column:
            {\n      dataLabels: {\n        enabled: true,\n        crop: false,\n        overflow:
            ''none''\n      }\n    }\n  },\n  series: [{\n    data: transformedSeries\n  }]\n}\n\nreturn
            config;\n\n/**\n * Creates an array of a map of Program Iteration names
            and Capability count\n */\nfunction getFlowVelocitySeries(pages) {\n  let
            series = [];\n  cplace.each(pages, programIncrement => {\n    const capabilities
            = programIncrement.getIncomingPages(CAPABILITY.TYPE, CAPABILITY.ATTR.PROGRAM_INCREMENT);\n    let
            capabilitiesCount = 0;\n    cplace.each(capabilities, () => capabilitiesCount++);\n\n    let
            seriesObject = {};\n    seriesObject[''name''] = programIncrement.getName();\n    seriesObject[''count'']
            = capabilitiesCount;\n    series.push(seriesObject);\n  });\n\n  return
            series.sort(function (a, b) {\n    let x = a[''name''];\n    let y = b[''name''];\n    return
            ((x < y) ? -1 : ((x > y) ? 1 : 0));\n  });\n}\n\n/**\n * Computes the
            name of all Program Iterations\n */\nfunction getCategories(flowDistributionSeries)
            {\n  let categories = [];\n  flowDistributionSeries.forEach(seriesObject
            => {\n    categories.push(seriesObject[''name'']);\n  })\n  return categories;\n}\n\n/**\n
            * Transforms the Flow Velocity series to count of Capabilities\n */\nfunction
            transformSeries(sortedFlowDistributionSeries) {\n  let transformedSeries
            = [];\n  sortedFlowDistributionSeries.forEach(seriesObject => {\n    transformedSeries.push(seriesObject[''count'']);\n  });\n  return
            transformedSeries;\n}\n\nfunction calculateAverageCapabilities(transformedSeries)
            {\n  return (Math.round(transformedSeries.reduce( ( p, c ) => p + c, 0
            ) / transformedSeries.length * 100) / 100).toFixed(2);\n}","upgradeAck":true,"description":""}'
        - name: cf.cplace.visualization.search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.safe.programIncrement"]}]}
        - name: cf.cplace.visualization.showFrame
          value: btrue
        - name: sortOrder
          value: sAufsteigend
        - name: title
          value: m{"de":"Flow Velocity","en":"Flow Velocity"}
        collapsed: false
        id: _uamp1hx9kbbjwtza3hhel0eay
        widgetType: cf.cplace.visualizations.scriptingHighcharts
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.layoutTabsWidget.cplacejsLayouts
          value: 's{"version":1,"script":"var layoutConfig = {\n    layouts: selectedLayouts,\n    active:
            selectedActiveLayout\n};\n\nreturn layoutConfig;","upgradeAck":true,"description":""}'
        - name: cf.cplace.layoutTabsWidget.layoutSelection
          value: scf.cplace.solution.safe.layout.flowTime
        - name: cf.cplace.layoutTabsWidget.layouts
          value: s{"layouts":["cf.cplace.solution.safe.layout.flowTime","cf.cplace.solution.safe.layout.flowDistribution","cf.cplace.solution.safe.layout.flowVelocity","cf.cplace.solution.safe.layout.flowPredictability","cf.cplace.solution.safe.layout.flowLoad","cf.cplace.solution.safe.layout.flowEfficiency","cf.cplace.solution.safe.layout.Predictability"]}
        - name: cf.cplace.layoutTabsWidget.sourceForLayouts
          value: ssimpleLayoutSelection
        collapsed: false
        id: _h5phpxnvkptqz17rb9m70qp90
        widgetType: cf.cplace.layoutTabsWidget.widget
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: content
          value: r<p><strong>Here you can specify the Work In Progress Limits for
            the Kanban board. If you don&#39;t want to have a limit, you can leave
            the field empty.</strong></p>
        - name: localizedWidgetTitle
          value: m{"de":"Information","en":"Information"}
        collapsed: false
        id: _6prb2jys0scm895vrhbmvcrw0
        widgetType: cf.cplace.demoWidgets.demoRichString
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":3,\"widgets\":[{\"id\":\"id_6hf9gc64czpj9powvjlqgzuaw\",\"collapsed\":false},{\"id\":\"id_xwvxdbswrjb6gtm78fmepdpcx\",\"collapsed\":false},{\"id\":\"id_upwcg4ptgxpfvv40j9rl1k5rh\",\"collapsed\":false},{\"id\":\"id_33ug6hzpl1ak7uiwzhmugfd1d\",\"collapsed\":false},{\"id\":\"id_xlekrcg12tubue8g4bhhngbzr\",\"collapsed\":false},{\"id\":\"id_bjy701mnqbgucbbg77fz5jw65\",\"collapsed\":false},{\"id\":\"id_8ckghuank61heeg5w1d2r6514\",\"collapsed\":false}]},{\"proportion\":3,\"widgets\":[]},{\"proportion\":3,\"widgets\":[]},{\"proportion\":3,\"widgets\":[]}]},{\"columns\":[{\"proportion\":12,\"widgets\":[]}]}]}","widgets":"[{\"id\":\"id_6hf9gc64czpj9powvjlqgzuaw\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.funnelWIPLimit\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_xwvxdbswrjb6gtm78fmepdpcx\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.analyzingWIPLimit\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_upwcg4ptgxpfvv40j9rl1k5rh\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.backlogWIPLimit\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_33ug6hzpl1ak7uiwzhmugfd1d\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.implementingWIPLimit\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_xlekrcg12tubue8g4bhhngbzr\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.validatingWIPLimit\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_bjy701mnqbgucbbg77fz5jw65\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.deployingWIPLimit\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_8ckghuank61heeg5w1d2r6514\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.releasingWIPLimit\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"WIP Limits","en":"WIP Limits"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: srelative
        - name: cf.cplace.platform.attributesGroup.relativeSelection
          value: scf.cplace.solution.safe.parent
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        collapsed: false
        id: _c64ohot4prtukggzyr2dwnk9i
        widgetType: cf.cplace.platform.attributesGroup
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":3,\"widgets\":[{\"id\":\"id_bryuogya98g5elyfvzn71rb5e\",\"collapsed\":false},{\"id\":\"id_g2jjnficp3757is4pi3x31h30\",\"collapsed\":false},{\"id\":\"id_8ifn6g5rdm0kb3ulidbusiffo\",\"collapsed\":false}]},{\"proportion\":3,\"widgets\":[{\"id\":\"id_q5nl1zftwpn6vf3iaswoju879\",\"collapsed\":false},{\"id\":\"id_2lhdjfe4zlu27og6y60rys7cq\",\"collapsed\":false},{\"id\":\"id_i95j1ffn6u0x9wa442lv0jzkn\",\"collapsed\":false}]},{\"proportion\":3,\"widgets\":[{\"id\":\"id_xdup6zejb8pk4h5nxc5fu4lpx\",\"collapsed\":false}]},{\"proportion\":3,\"widgets\":[]}]},{\"columns\":[{\"proportion\":12,\"widgets\":[]}]}]}","widgets":"[{\"id\":\"id_xdup6zejb8pk4h5nxc5fu4lpx\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.shortName\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_bryuogya98g5elyfvzn71rb5e\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.solutionTrainEngineer\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_g2jjnficp3757is4pi3x31h30\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.solutionTrainArchitect\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_8ifn6g5rdm0kb3ulidbusiffo\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.solutionManagement\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_q5nl1zftwpn6vf3iaswoju879\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.currentPi\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_2lhdjfe4zlu27og6y60rys7cq\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.previousPi\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_i95j1ffn6u0x9wa442lv0jzkn\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.nextPi\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Solution Details","en":"Solution Details"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: srelative
        - name: cf.cplace.platform.attributesGroup.relativeSelection
          value: scf.cplace.solution.safe.parent
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        collapsed: false
        id: _7chgaeb8t88od63e38v1eapqt
        widgetType: cf.cplace.platform.attributesGroup
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: groupOrder
          value: sasc
        - name: hideNames
          value: bfalse
        - name: hideTableLinks
          value: bfalse
        - name: search
          value: s{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.visualDomainModel.graph"]}]}
        - name: showNewButton
          value: sYes
        - name: showTableActions
          value: btrue
        - name: showTableFooter
          value: btrue
        - name: showTableHeader
          value: btrue
        - name: singleSpaced
          value: bfalse
        - name: title
          value: m{"en":"Visual Domain Model","de":"Visual Domain Model"}
        collapsed: false
        id: _lfg0o9rd9mg0iwbr7rtee0od9
        widgetType: cf.platform.embeddedSearchAsTable
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.layoutTabsWidget.cplacejsLayouts
          value: 's{"version":1,"script":"var layoutConfig = {\n    layouts: selectedLayouts,\n    active:
            selectedActiveLayout\n};\n\nreturn layoutConfig;","upgradeAck":true,"description":""}'
        - name: cf.cplace.layoutTabsWidget.layouts
          value: s{"layouts":["cf.cplace.solution.safe.layout.solutionDetails","cf.cplace.solution.safe.layout.kanban","cf.cplace.solution.safe.layout.vdm"]}
        - name: cf.cplace.layoutTabsWidget.sourceForLayouts
          value: ssimpleLayoutSelection
        collapsed: false
        id: _b3ee4elo3zixg2k0z8za1hjs7
        widgetType: cf.cplace.layoutTabsWidget.widget
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_2ayjgbovnpn2f48cneu64tm96
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_shytxc46l3ao5hofvt2ierjqi
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_lnjfapswlklp3ic8249252fd1
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_ry0gxzb8u1fjs1nuu33pewh3s
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_gdj1fsvwt9ad4kuw4av28hrk1
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_o7l3h3vot5063nbk160pjz251
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 6
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":12,\"widgets\":[{\"id\":\"id_aahuic7gzupxoqt62m572usqg\",\"collapsed\":false},{\"id\":\"id_4z6c7nefnjkqm8sq337kr9hpp\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":6,\"widgets\":[{\"id\":\"id_kalvjzu63f3k5es64gfulflbf\",\"collapsed\":false}]},{\"proportion\":6,\"widgets\":[{\"id\":\"id_7zp552mr85hg78ougobkfm3up\",\"collapsed\":false}]}]}]}","widgets":"[{\"id\":\"id_kalvjzu63f3k5es64gfulflbf\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.startDate\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_7zp552mr85hg78ougobkfm3up\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.endDate\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_aahuic7gzupxoqt62m572usqg\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.title\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_4z6c7nefnjkqm8sq337kr9hpp\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.solution\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Details","en":"Details"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: btrue
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        - name: height
          value: d350
        collapsed: false
        id: _ry08tst6m7au3w59brv181r2h
        widgetType: cf.cplace.platform.attributesGroup
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: _yfg6tpwr4c4co3tglhygsm5ka
        widgetType: cf.platform.wiki
      - attributes: null
        collapsed: false
        id: _rzf1a6jfp6h58s9cnu048j4qs
        widgetType: cf.platform.comments
  - columns:
    - proportion: 12
      widgets:
      - attributes:
          name: content
          value: 'r<h4 style="background-color: rgb(220, 220, 220); border-radius:
            4px; border: 1px solid transparent; color: rgb(118, 118, 118); font-size:
            14px; margin-bottom: 20px; padding: 10px; text-align: center"><strong><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkXzVlMndzem1qenRwM3F0aHZxZ2M2OXA1bjEiLCJ3aWRnZXRUeXBlIjoiY2YuY3BsYWNlLmxvd0NvZGVXaWRnZXRzLmxvd0NvZGVUZXh0IiwicHJvcGVydGllcyI6W3sibmFtZSI6ImNmLmNwbGFjZS5sb3dDb2RlV2lkZ2V0cy5sb3dDb2RlVGV4dFdpZGdldC5zY3JpcHQiLCJ2YWx1ZXMiOlt7InN0cmluZyI6IntcInZlcnNpb25cIjoxLFwic2NyaXB0XCI6XCJjcGxhY2Uuc2V0TG9nTmFtZSgnQ3VycmVudCBQSScpO1xcblwvXC9Db25maWd1cmF0aW9uc1xcbmNvbnN0IFRJTUVMSU5FX0RBU0hCT0FSRCA9IHtcXG4gICAgVFlQRTonY2YuY3BsYWNlLnNvbHV0aW9uLnNhZmUudGltZWxpbmVEYXNoYm9hcmQnLFxcbiAgICBBVFRSOntcXG4gICAgICBQQVJFTlQ6J2NmLmNwbGFjZS5zb2x1dGlvbi5zYWZlLnBhcmVudCdcXG4gICAgfVxcbiAgfVxcbiAgXFxuICBsZXQgZmluYWxsaW5rPScnO1xcbiAgbGV0IGxpbmssIG5hbWU7XFxuICBsZXQgcGlEYXNoYm9hcmRTZWFyY2ggPSBuZXcgU2VhcmNoKClcXG4gICAgLmFkZChGaWx0ZXJzLnNwYWNlKGVtYmVkZGluZ1BhZ2UuZ2V0U3BhY2VJZCgpKSlcXG4gICAgLmFkZChGaWx0ZXJzLnR5cGUoVElNRUxJTkVfREFTSEJPQVJELlRZUEUpKVxcbiAgICAuYWRkKEZpbHRlcnMuY3VzdG9tQXR0cmlidXRlTm9uZW1wdHkoVElNRUxJTkVfREFTSEJPQVJELkFUVFIuUEFSRU5UKSlcXG4gICAgLmZpbmRBbGxQYWdlcygpO1xcblxcbmxldCByZXN1bHQgPSBJdGVyYWJsZXMuZ2V0Rmlyc3QocGlEYXNoYm9hcmRTZWFyY2gsIG51bGwpO1xcblxcbmlmIChyZXN1bHQpIHtcXG4gICAgbGluayA9IHJlc3VsdC5nZXRVcmwoKTtcXG4gICAgbmFtZSA9IHJlc3VsdC5nZXROYW1lKCk7XFxufVxcbiAgXFxucmV0dXJuICc8YSBocmVmPVxcXCInK2xpbmsrJ1xcXCJjbGFzcz1cXFwiY3VycmVudC1jb2xvclxcXCI-T3BlbiBUaW1lbGluZSBEYXNoYm9hcmQ8XC9hPic7XCIsXCJkZXNjcmlwdGlvblwiOlwiXCJ9In1dfV19</embeddedwidget></strong></h4>'
        collapsed: false
        id: _nszl96os936bus62n0dyena31
        widgetType: cf.cplace.demoWidgets.demoRichString
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_zfltw2sbiy044vjyn7k1hz05n
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_g7k2ay1rkbacaa1bkndw0fkjc
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_jwby1om1ovgw1pzyyongj5m3p
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes:
        - name: cf.cplace.platform.attributesGroup.layout
          value: s{"widgetsLayout":"{\"rows\":[{\"columns\":[{\"proportion\":4,\"widgets\":[{\"id\":\"id_70erkndj15ss3nbmlb15g11ax\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_7jr3uujh1f0dpmun7uv4t6qy0\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[{\"id\":\"id_o12ugd60ws96d8ygdmyecph45\",\"collapsed\":false}]}]},{\"columns\":[{\"proportion\":12,\"widgets\":[]}]},{\"columns\":[{\"proportion\":4,\"widgets\":[{\"id\":\"id_rn8n7i8j6awzgkfptzatd5xyq\",\"collapsed\":false},{\"id\":\"id_sypor89k96rakd74ou1ddnxmz\",\"collapsed\":false},{\"id\":\"id_e3q8g0ibzo9dzelnu6i5cug9n\",\"collapsed\":false},{\"id\":\"id_wbr4cyw3rlmvubu5c8y12w8r6\",\"collapsed\":false},{\"id\":\"id_1igpquucn1tpoqyl7pi4k5etn\",\"collapsed\":false}]},{\"proportion\":4,\"widgets\":[]},{\"proportion\":4,\"widgets\":[]}]}]}","widgets":"[{\"id\":\"id_70erkndj15ss3nbmlb15g11ax\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.PI\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_o12ugd60ws96d8ygdmyecph45\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.solution\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_7jr3uujh1f0dpmun7uv4t6qy0\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.result\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_rn8n7i8j6awzgkfptzatd5xyq\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.oneFinger\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_sypor89k96rakd74ou1ddnxmz\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.twoFingers\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_e3q8g0ibzo9dzelnu6i5cug9n\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.threeFingers\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_wbr4cyw3rlmvubu5c8y12w8r6\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.fourFingers\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"},{\"id\":\"id_1igpquucn1tpoqyl7pi4k5etn\",\"configuration\":\"[{\\\"name\\\":\\\"cf.platform.inPlaceEditing\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.quotedAttributeName\\\",\\\"values\\\":[{\\\"string\\\":\\\"\\u0027cf.cplace.solution.safe.confidenceVote.fiveFingers\\u0027\\\"}]},{\\\"name\\\":\\\"cf.platform.reloadAfterChange\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.singleColumn\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.useParent\\\",\\\"values\\\":[{\\\"boolean\\\":false}]},{\\\"name\\\":\\\"cf.platform.withLabel\\\",\\\"values\\\":[{\\\"boolean\\\":true}]},{\\\"name\\\":\\\"cf.platform.withValue\\\",\\\"values\\\":[{\\\"boolean\\\":true}]}]\",\"widgetType\":\"cf.platform.singleAttribute\"}]"}
        - name: cf.cplace.platform.attributesGroup.localizedTitle
          value: m{"de":"Attributes","en":"Attributes"}
        - name: cf.cplace.platform.attributesGroup.pageSelection
          value: sembedding
        - name: cf.cplace.platform.attributesGroup.showFrame
          value: bfalse
        - name: cf.cplace.platform.attributesGroup.useNewFrontend
          value: bfalse
        - name: cf.platform.attributesGroup.enableMultiEdit
          value: btrue
        - name: cf.platform.singleColumn
          value: btrue
        collapsed: false
        id: _1udlslfgfxfxqcxmg890idrrk
        widgetType: cf.cplace.platform.attributesGroup
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_mkzvpgi3704n3n2vgjcjypa6g
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_7bcrwqaqemvlgmm3yp18u3q6v
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_t4yoblg79y4h876p13y3lt8mv
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_zq0ghpbx6rgkmy3erw9ud1f6i
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_xzfukhudky1142fkjmgaeffjo
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_1g0lc4ly2mys7biw1gtnc51ak
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_tbfqg6zd28775ud9p3t3s7bzu
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_k8pnjgg63jof5s5uwi2yptblp
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_x4iejmgy4k9e1dnnbjo8r8te6
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_al575wyufq6s5e7io8ip1163x
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_qk4hovudevdlwa5plxwel34vy
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_kiye3vze0b5s6dqri0vokr2jq
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_tbfqg6zd28775ud9p3t3s7bzu
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_k8pnjgg63jof5s5uwi2yptblp
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_x4iejmgy4k9e1dnnbjo8r8te6
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_cekrozpacuog9m38ayf7q5ek8
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_yc31fbsbd4o5s0cjfqf6syajr
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_9q5fpibj9xej5ihp4j2ctpqgj
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_zwo1bttwwczp144gf18q8h59a
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_a6euajujpf0wtgffh16g93f0j
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_pxbpad7e4ojqo1c7ninrtxbw2
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_g367cye8xusr21i676jrjinqb
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_iaw1xwpi2217ehybnr75o4gi1
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_uewh0npg8a956ypiqpvakil3o
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_u5frmqw9pxff7i3gwd4zn5sgf
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_kna0gbgrz2dx60olve83asb65
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_61fsb8t0wr0jadvr6c5wihduu
        widgetType: cf.platform.incomingReferences
- rows:
  - columns:
    - proportion: 12
      widgets:
      - attributes: null
        collapsed: false
        id: id_w1iouwiq9frq954rv2hl3t9up
        widgetType: cf.platform.wiki
  - columns:
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_etcxg2908983eqe14jy74xriw
        widgetType: cf.platform.attributes
    - proportion: 6
      widgets:
      - attributes: null
        collapsed: false
        id: id_vvx8j7c09fi3kuqs9081hnuwl
        widgetType: cf.platform.incomingReferences

Given this data model:

```
{"export":{"workspace":{"types":[{"name":"cf.cplace.solution.safe.solution","localizedNameSingular":{"de":"Solution","en":"Solution"},"localizedNamePlural":{"de":"Solutions","en":"Solutions"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.description","localizedName":{"de":"Beschreibung","en":"Description"},"multiplicity":"maximalOne","typeConstraint":"RichString"},{"name":"cf.cplace.solution.safe.solutionTrainEngineer","localizedName":{"de":"Solution Train Engineer","en":"Solution Train Engineer"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"person","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.solutionTrainArchitect","localizedName":{"de":"Solution Train Architekt","en":"Solution Train Architect"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"person","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.solutionManagement","localizedName":{"de":"Solution Management","en":"Solution Management"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"person","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.previousPi","localizedName":{"de":"Vorheriges PI","en":"Previous PI"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.programIncrement","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.currentPi","localizedName":{"de":"Laufendes PI","en":"Current PI"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.programIncrement","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.nextPi","localizedName":{"de":"N\u00e4chstes PI","en":"Next PI"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.programIncrement","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.funnelWIPLimit","localizedName":{"de":"Funnel WIP Limit","en":"Funnel WIP Limit"},"multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.analyzingWIPLimit","localizedName":{"de":"Analyzing WIP Limit","en":"Analyzing WIP Limit"},"multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.backlogWIPLimit","localizedName":{"de":"Backlog WIP Limit","en":"Backlog WIP Limit"},"multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.implementingWIPLimit","localizedName":{"de":"Implementing WIP Limit","en":"Implementing WIP Limit"},"multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.validatingWIPLimit","localizedName":{"de":"Validating WIP Limit","en":"Validating WIP Limit"},"multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.deployingWIPLimit","localizedName":{"de":"Deploying WIP Limit","en":"Deploying WIP Limit"},"multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.releasingWIPLimit","localizedName":{"de":"Releasing WIP Limit","en":"Releasing WIP Limit"},"multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.shortName","localizedName":{"de":"K\u00fcrzel","en":"Short Name"},"multiplicity":"exactlyOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.horizon","localizedName":{"de":"Horizon","en":"Horizon"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.horizon","linkSameWorkspace":"false","linkIsHierarchy":"false"}]},{"name":"cf.cplace.solution.safe.programIncrement","localizedNameSingular":{"de":"Program Increment","en":"Program Increment"},"localizedNamePlural":{"de":"Program Increments","en":"Program Increments"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.title","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"exactlyOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.solution","localizedName":{"de":"Solution","en":"Solution"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.solution","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.startDate","localizedName":{"de":"Startdatum","en":"Start Date"},"multiplicity":"exactlyOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.endDate","localizedName":{"de":"Enddatum","en":"End Date"},"multiplicity":"exactlyOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.predecessor","localizedName":{"de":"Vorg\u00e4nger","en":"Predecessor"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.programIncrement","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.periodStatus","localizedName":{"de":"Period Status","en":"Period Status"},"multiplicity":"exactlyOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.confidenceVote","localizedName":{"en":"Confidence Vote"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.confidenceVote","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.capacity","localizedName":{"de":"Capacity","en":"Capacity"},"localizedShortHelp":"{\"de\":\"Capacity defined by Solution Train Engineer\",\"en\":\"Capacity defined by Solution Train Engineer\"}","multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.confidenceVote.Result","localizedName":{"de":"Confidence Vote Result","en":"Confidence Vote Result"},"localizedShortName":{"de":"Confidence Vote","en":"Confidence Vote"},"multiplicity":"maximalOne","typeConstraint":"Text","derivable":{"referencingAttributeName":"cf.cplace.solution.safe.confidenceVote","referencedAttributeName":"cf.cplace.solution.safe.confidenceVote.result"}},{"name":"cf.cplace.solution.safe.statsJson","localizedName":{"en":"Statistics JSON"},"multiplicity":"maximalOne","typeConstraint":"LongText"}]},{"name":"cf.cplace.solution.safe.iteration","localizedNameSingular":{"de":"Iteration","en":"Iteration"},"localizedNamePlural":{"de":"Iterationen","en":"Iterations"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.title","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"exactlyOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.programIncrement","localizedName":{"de":"Programminkrement","en":"Program Increment"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.programIncrement","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.startDate","localizedName":{"de":"Startdatum","en":"Start Date"},"multiplicity":"exactlyOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.endDate","localizedName":{"de":"Enddatum","en":"End Date"},"multiplicity":"exactlyOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.predecessor","localizedName":{"de":"Vorg\u00e4nger","en":"Predecessor"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.iteration","linkSameWorkspace":"true","linkIsHierarchy":"false"}]},{"name":"cf.cplace.solution.safe.capability","localizedNameSingular":{"de":"Capability","en":"Capability"},"localizedNamePlural":{"de":"Capabilities","en":"Capabilities"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.title","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.solution.reference","localizedName":{"de":"Solution","en":"Solution"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.solution","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.description","localizedName":{"de":"Beschreibung","en":"Description"},"multiplicity":"maximalOne","typeConstraint":"RichString"},{"name":"cf.cplace.solution.safe.capabilityType","localizedName":{"de":"Capability Type","en":"Capability Type"},"localizedShortName":{"de":"Feature Type","en":"Feature Type"},"multiplicity":"exactlyOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.state","localizedName":{"de":"Status","en":"State"},"multiplicity":"exactlyOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.wsjf","localizedName":{"de":"WSJF","en":"WSJF"},"multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.businessValue","localizedName":{"de":"User Business Value","en":"User Business Value"},"multiplicity":"maximalOne","typeConstraint":"NumberEnumeration"},{"name":"cf.cplace.solution.safe.timeCriticality","localizedName":{"de":"Zeitliche Kritikalit\u00e4t","en":"Time Criticality"},"multiplicity":"maximalOne","typeConstraint":"NumberEnumeration"},{"name":"cf.cplace.solution.safe.riskReduction","localizedName":{"de":"Risk Reduction","en":"Risk Reduction"},"multiplicity":"maximalOne","typeConstraint":"NumberEnumeration"},{"name":"cf.cplace.solution.safe.jobSize","localizedName":{"de":"Job Size","en":"Job Size"},"multiplicity":"maximalOne","typeConstraint":"NumberEnumeration"},{"name":"cf.cplace.solution.safe.programIncrement","localizedName":{"de":"Program Increment","en":"Program Increment"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.programIncrement","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.actualStartDate","localizedName":{"de":"Actual Start Date","en":"Actual Start Date"},"multiplicity":"maximalOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.actualEndDate","localizedName":{"de":"Actual End Date","en":"Actual End Date"},"multiplicity":"maximalOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.flowTime","localizedName":{"de":"Flow time","en":"Flow time"},"multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.program","localizedName":{"de":"Program","en":"Program"},"multiplicity":null,"typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.program","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.capabilityowner","localizedName":{"de":"Capability Owner","en":"Capability Owner"},"localizedShortName":{"de":"Owner","en":"Owner"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"person","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.portfolioEpic","localizedName":{"en":"Portfolio Epic"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.epic","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.solutionShortName","localizedName":{"de":"Solution K\u00fcrzel","en":"Solution Short Name"},"multiplicity":"maximalOne","typeConstraint":"Text","derivable":{"referencingAttributeName":"cf.cplace.solution.safe.solution.reference","referencedAttributeName":"cf.cplace.solution.safe.shortName"}},{"name":"cf.cplace.solution.safe.plannedStart","localizedName":{"de":"Geplanter Start","en":"Planned Start"},"multiplicity":"maximalOne","typeConstraint":"Date","derivable":{"referencingAttributeName":"cf.cplace.solution.safe.programIncrement","referencedAttributeName":"cf.cplace.solution.safe.startDate"}},{"name":"cf.cplace.solution.safe.plannedEnd","localizedName":{"de":"Geplantes Ende","en":"Planned End"},"multiplicity":"maximalOne","typeConstraint":"Date","derivable":{"referencingAttributeName":"cf.cplace.solution.safe.programIncrement","referencedAttributeName":"cf.cplace.solution.safe.endDate"}},{"name":"cf.cplace.solution.safe.iteration","localizedName":{"de":"Iterations","en":"Iterations"},"localizedShortHelp":"{\"en\":\"This is a workaround attribute to bypass duplicated type definitions and messed up references in Solution and Program level. For production the references should be derived from Features\"}","multiplicity":null,"typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.iteration","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.definitionOfReady","localizedName":{"de":"Definition of Ready","en":"Definition of Ready"},"localizedShortName":{"de":"DoR","en":"DoR"},"multiplicity":"exactlyOne","typeConstraint":"Boolean"},{"name":"cf.cplace.solution.safe.definitionOfDone","localizedName":{"de":"Definition of Done","en":"Definition of Done"},"localizedShortName":{"de":"DoD","en":"DoD"},"multiplicity":"exactlyOne","typeConstraint":"Boolean"},{"name":"cf.cplace.solution.safe.acceptanceCriteria","localizedName":{"de":"Akzeptanzkriterien","en":"Acceptance Criteria"},"multiplicity":"maximalOne","typeConstraint":"RichString"},{"name":"cf.cplace.solution.safe.benefitHypothesis","localizedName":{"de":"Benefit Hypothesis","en":"Benefit Hypothesis"},"multiplicity":"maximalOne","typeConstraint":"RichString"},{"name":"cf.cplace.solution.safe.conflictState","localizedName":{"de":"Datumskonflikt","en":"Conflict State"},"localizedShortName":{"de":"Konflikt","en":"Conflict"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.features","localizedName":{"de":"Features","en":"Features"},"multiplicity":null,"typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.feature","linkSameWorkspace":"false","linkIsHierarchy":"false"}]},{"name":"cf.cplace.solution.safe.dependency","localizedNameSingular":{"de":"Abh\u00e4ngigkeit","en":"Dependency"},"localizedNamePlural":{"de":"Abh\u00e4ngigkeiten","en":"Dependencies"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.title","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.successor","localizedName":{"de":"A","en":"A"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":["cf.cplace.solution.safe.capability","cf.cplace.solution.safe.safeMilestone"],"linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.type","localizedName":{"de":"Typ","en":"Type"},"localizedShortHelp":"{\"de\":\"\\\"Verbunden mit\\\" - lose Abh\u00e4ngigkeit ohne potentielle Konflikte\\n\\\"Blockiert durch\\\" - Abh\u00e4ngigkeit, die zeitliche Konflikte ausl\u00f6sen kann\",\"en\":\"\\\"related to\\\" - loose dependency without potential conflicts\\n\\\"blocked by\\\" - dependency that can lead to timing conflicts\"}","multiplicity":"exactlyOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.predecessor","localizedName":{"de":"B","en":"B"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":["cf.cplace.solution.safe.capability","cf.cplace.solution.safe.safeMilestone"],"linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.status","localizedName":{"de":"Status","en":"Status"},"multiplicity":"exactlyOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.description","localizedName":{"de":"Beschreibung","en":"Description"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.plannedStartA","localizedName":{"de":"Geplanter Start A","en":"Planned Start A"},"multiplicity":"maximalOne","typeConstraint":"Date","derivable":{"referencingAttributeName":"cf.cplace.solution.safe.successor","referencedAttributeName":"cf.cplace.solution.safe.plannedStart"}},{"name":"cf.cplace.solution.safe.plannedEndB","localizedName":{"de":"Geplantes Ende B","en":"Planned End B"},"multiplicity":"maximalOne","typeConstraint":"Date","derivable":{"referencingAttributeName":"cf.cplace.solution.safe.predecessor","referencedAttributeName":"cf.cplace.solution.safe.plannedEnd"}}]},{"name":"cf.cplace.solution.safe.safeMilestone","localizedNameSingular":{"de":"SAFe Meilenstein","en":"SAFe Milestone"},"localizedNamePlural":{"de":"SAFe Meilensteine","en":"SAFe Milestones"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.title","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"exactlyOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.date","localizedName":{"de":"Datum","en":"Date"},"multiplicity":"maximalOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.type","localizedName":{"de":"Typ","en":"Type"},"multiplicity":"exactlyOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.relevantFor","localizedName":{"de":"Relevant F\u00fcr","en":"Relevant For"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":["cf.cplace.solution.safe.program","cf.cplace.solution.safe.solution"],"linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.plannedStart","localizedName":{"de":"Startdatum","en":"Start Date"},"multiplicity":"exactlyOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.plannedEnd","localizedName":{"de":"Enddatum","en":"End Date"},"multiplicity":"exactlyOne","typeConstraint":"Date"}]},{"name":"cf.cplace.solution.safe.periodStatus","localizedNameSingular":{"en":"Period Status","de":"Period Status"},"localizedNamePlural":{"en":"Period Status","de":"Period Status"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.order","localizedName":{"en":"Order"},"multiplicity":"maximalOne","typeConstraint":"Number"}]},{"name":"cf.cplace.solution.safe.flowMetric","localizedNameSingular":{"de":"Durchflussmetrik","en":"Flow Metric"},"localizedNamePlural":{"de":"Durchflussmetriken","en":"Flow Metrics"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.artifactType","localizedName":{"de":"Artefakttyp","en":"Artifact type"},"multiplicity":"exactlyOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.snapshotDate","localizedName":{"de":"Schnappschuss-Datum","en":"Snapshot date"},"multiplicity":"exactlyOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.SAFeLevel.Reference","localizedName":{"de":"SAFe Level Reference","en":"SAFe Level Reference"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":["cf.cplace.solution.safe.program","cf.cplace.solution.safe.solution","cf.cplace.solution.safe.team"],"linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.timebox","localizedName":{"de":"Program Increment/Iteration","en":"Program Increment/Iteration"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":["cf.cplace.solution.safe.iteration","cf.cplace.solution.safe.programIncrement"],"linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.jsonMetricData","localizedName":{"de":"JSON Metric Data","en":"JSON Metric Data"},"multiplicity":"maximalOne","typeConstraint":"LongText"}]},{"name":"cf.cplace.solution.safe.objective","localizedNameSingular":{"de":"Zielsetzung","en":"Objective"},"localizedNamePlural":{"de":"Zielsetzungen","en":"Objectives"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.objectivetitle","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.timebox","localizedName":{"de":"Program Increment/Iteration","en":"Program Increment/Iteration"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":["cf.cplace.solution.safe.iteration","cf.cplace.solution.safe.programIncrement"],"linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.SAFeLevel","localizedName":{"de":"SAFe Level","en":"SAFe Level"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.SAFeLevel.Reference","localizedName":{"de":"SAFe Level Reference","en":"SAFe Level Reference"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":["cf.cplace.solution.safe.program","cf.cplace.solution.safe.solution","cf.cplace.solution.safe.team"],"linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.businessValue","localizedName":{"de":"Planned Business Value","en":"Planned Business Value"},"localizedShortName":{"de":"PBV","en":"PBV"},"multiplicity":"maximalOne","typeConstraint":"NumberEnumeration"},{"name":"cf.cplace.solution.safe.actualValue","localizedName":{"de":"Actual Business Value","en":"Actual Business Value"},"localizedShortName":{"de":"ABV","en":"ABV"},"multiplicity":"maximalOne","typeConstraint":"NumberEnumeration"},{"name":"cf.cplace.solution.safe.commitment","localizedName":{"de":"Commitment","en":"Commitment"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.statement","localizedName":{"de":"Statement","en":"Statement"},"multiplicity":"maximalOne","typeConstraint":"RichString"}]},{"name":"cf.cplace.solution.safe.event","localizedNameSingular":{"de":"Event","en":"Event"},"localizedNamePlural":{"de":"Events","en":"Events"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.title","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.safe.startDate","localizedName":{"de":"Start Datum","en":"Start Date"},"multiplicity":"exactlyOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.endDate","localizedName":{"de":"End-Datum","en":"End Date"},"multiplicity":"exactlyOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.safe.solution","localizedName":{"de":"Solution","en":"Solution"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.solution","linkSameWorkspace":"true","linkIsHierarchy":"false"}]},{"name":"cf.cplace.solution.safe.confidenceVote","localizedNameSingular":{"de":"Confidence Vote","en":"Confidence Vote"},"localizedNamePlural":{"de":"Confidence Votes","en":"Confidence Votes"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.safe.confidenceVote.PI","localizedName":{"de":"Program Increment","en":"Program Increment"},"localizedShortName":{"de":"PI","en":"PI"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.programIncrement","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.safe.confidenceVote.result","localizedName":{"de":"Ergebnis","en":"Result"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration"},{"name":"cf.cplace.solution.safe.confidenceVote.oneFinger","localizedName":{"de":"One Finger","en":"One Finger"},"localizedShortName":{"de":"1","en":"1"},"localizedShortHelp":"{\"de\":\"Number of people who voted one finger in the Confidence Vote.\",\"en\":\"Number of people who voted one finger in the Confidence Vote.\"}","multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.confidenceVote.twoFingers","localizedName":{"de":"Two Fingers","en":"Two Fingers"},"localizedShortName":{"de":"2","en":"2"},"localizedShortHelp":"{\"de\":\"Number of people who voted two fingers in the Confidence Vote.\",\"en\":\"Number of people who voted two fingers in the Confidence Vote.\"}","multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.confidenceVote.threeFingers","localizedName":{"de":"Three Fingers","en":"Three Fingers"},"localizedShortName":{"de":"3","en":"3"},"localizedShortHelp":"{\"de\":\"Number of people who voted three fingers in the Confidence Vote.\",\"en\":\"Number of people who voted three fingers in the Confidence Vote.\"}","multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.confidenceVote.fourFingers","localizedName":{"de":"Four Fingers","en":"Four Fingers"},"localizedShortName":{"de":"4","en":"4"},"localizedShortHelp":"{\"de\":\"Number of people who voted four fingers in the Confidence Vote.\",\"en\":\"Number of people who voted four fingers in the Confidence Vote.\"}","multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.confidenceVote.fiveFingers","localizedName":{"de":"Five Fingers","en":"Five Fingers"},"localizedShortName":{"de":"5","en":"5"},"localizedShortHelp":"{\"de\":\"Number of people who voted five fingers in the Confidence Vote.\",\"en\":\"Number of people who voted five fingers in the Confidence Vote.\"}","multiplicity":"maximalOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.safe.confidenceVote.solution","localizedName":{"de":"Solution","en":"Solution"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.safe.solution","linkSameWorkspace":"true","linkIsHierarchy":"false"}]}]}}}
```

This is example code working with the data model:

```
function accessBuiltInPageAttributes(page) {
    const absoluteUrl = page.getBuiltinFeatureValue("absoluteUrl");
    const comments = page.getBuiltinFeatureValue("comments");
    const commentsForVersioning = page.getBuiltinFeatureValue("commentsForVersioning");
    const content = page.getBuiltinFeatureValue("content");
    const creator = page.getBuiltinFeatureValue("creator");
    const created = page.getBuiltinFeatureValue("created");
    const customType = page.getBuiltinFeatureValue("customType");
    const documents = page.getBuiltinFeatureValue("documents");
    const id = page.getBuiltinFeatureValue("id");
    const localizedName = page.getBuiltinFeatureValue("localizedName");
    const name = page.getBuiltinFeatureValue("name");
    const orderIndex = page.getBuiltinFeatureValue("orderIndex");
    const readers = page.getBuiltinFeatureValue("readers");
    const readersAreDefault = page.getBuiltinFeatureValue("readersAreDefault");
    const space = page.getBuiltinFeatureValue("space");
    const writersAreDefault = page.getBuiltinFeatureValue("writersAreDefault");
}

function updatePage(page) {
    cplace.actions().updatePage(page, {
        customAttributes: {
            ['attributeName1']: value1,
            ['attributeName2']: value2
        },
    });
}

function createPage() {
    return cplace.actions().createPage({
        customType: TYPE_NAME,
        customAttributes: {
            ['attributeName1']: value1,
            ['attributeName2']: value2
        }
    }, {
        setGeneratedName: true
    });
}

function readFromSolution(solution) {
    const description = solution.get('cf.cplace.solution.safe.description');
    const solutionTrainEngineer = solution.get('cf.cplace.solution.safe.solutionTrainEngineer');
    const solutionTrainArchitect = solution.get('cf.cplace.solution.safe.solutionTrainArchitect');
    const solutionManagement = solution.get('cf.cplace.solution.safe.solutionManagement');
    const previousPi = solution.get('cf.cplace.solution.safe.previousPi');
    const currentPi = solution.get('cf.cplace.solution.safe.currentPi');
    const nextPi = solution.get('cf.cplace.solution.safe.nextPi');
    const funnelWIPLimit = solution.get('cf.cplace.solution.safe.funnelWIPLimit');
    const analyzingWIPLimit = solution.get('cf.cplace.solution.safe.analyzingWIPLimit');
    const backlogWIPLimit = solution.get('cf.cplace.solution.safe.backlogWIPLimit');
    const implementingWIPLimit = solution.get('cf.cplace.solution.safe.implementingWIPLimit');
    const validatingWIPLimit = solution.get('cf.cplace.solution.safe.validatingWIPLimit');
    const deployingWIPLimit = solution.get('cf.cplace.solution.safe.deployingWIPLimit');
    const releasingWIPLimit = solution.get('cf.cplace.solution.safe.releasingWIPLimit');
    const shortName = solution.get('cf.cplace.solution.safe.shortName');
    const horizon = solution.get('cf.cplace.solution.safe.horizon');
    const programIncrement = solution.getIncomingPages('cf.cplace.solution.safe.programIncrement', 'cf.cplace.solution.safe.solution');
    const capability = solution.getIncomingPages('cf.cplace.solution.safe.capability', 'cf.cplace.solution.safe.solution.reference');
    const event = solution.getIncomingPages('cf.cplace.solution.safe.event', 'cf.cplace.solution.safe.solution');
    const confidenceVote = solution.getIncomingPages('cf.cplace.solution.safe.confidenceVote', 'cf.cplace.solution.safe.confidenceVote.solution');
}


function readFromProgramIncrement(programIncrement) {
    const title = programIncrement.get('cf.cplace.solution.safe.title');
    const solution = programIncrement.get('cf.cplace.solution.safe.solution');
    const startDate = programIncrement.get('cf.cplace.solution.safe.startDate');
    const endDate = programIncrement.get('cf.cplace.solution.safe.endDate');
    const predecessor = programIncrement.get('cf.cplace.solution.safe.predecessor');
    const periodStatus = programIncrement.get('cf.cplace.solution.safe.periodStatus');
    const confidenceVote = programIncrement.get('cf.cplace.solution.safe.confidenceVote');
    const capacity = programIncrement.get('cf.cplace.solution.safe.capacity');
    const Result = programIncrement.get('cf.cplace.solution.safe.confidenceVote.Result');
    const statsJson = programIncrement.get('cf.cplace.solution.safe.statsJson');
    const solution = programIncrement.getIncomingPages('cf.cplace.solution.safe.solution', 'cf.cplace.solution.safe.previousPi');
    const solution = programIncrement.getIncomingPages('cf.cplace.solution.safe.solution', 'cf.cplace.solution.safe.currentPi');
    const solution = programIncrement.getIncomingPages('cf.cplace.solution.safe.solution', 'cf.cplace.solution.safe.nextPi');
    const programIncrement = programIncrement.getIncomingPages('cf.cplace.solution.safe.programIncrement', 'cf.cplace.solution.safe.predecessor');
    const iteration = programIncrement.getIncomingPages('cf.cplace.solution.safe.iteration', 'cf.cplace.solution.safe.programIncrement');
    const capability = programIncrement.getIncomingPages('cf.cplace.solution.safe.capability', 'cf.cplace.solution.safe.programIncrement');
    const confidenceVote = programIncrement.getIncomingPages('cf.cplace.solution.safe.confidenceVote', 'cf.cplace.solution.safe.confidenceVote.PI');
}


function readFromIteration(iteration) {
    const title = iteration.get('cf.cplace.solution.safe.title');
    const programIncrement = iteration.get('cf.cplace.solution.safe.programIncrement');
    const startDate = iteration.get('cf.cplace.solution.safe.startDate');
    const endDate = iteration.get('cf.cplace.solution.safe.endDate');
    const predecessor = iteration.get('cf.cplace.solution.safe.predecessor');
    const iteration = iteration.getIncomingPages('cf.cplace.solution.safe.iteration', 'cf.cplace.solution.safe.predecessor');
    const capability = iteration.getIncomingPages('cf.cplace.solution.safe.capability', 'cf.cplace.solution.safe.iteration');
}


function readFromCapability(capability) {
    const title = capability.get('cf.cplace.solution.safe.title');
    const reference = capability.get('cf.cplace.solution.safe.solution.reference');
    const description = capability.get('cf.cplace.solution.safe.description');
    const capabilityType = capability.get('cf.cplace.solution.safe.capabilityType');
    const state = capability.get('cf.cplace.solution.safe.state');
    const wsjf = capability.get('cf.cplace.solution.safe.wsjf');
    const businessValue = capability.get('cf.cplace.solution.safe.businessValue');
    const timeCriticality = capability.get('cf.cplace.solution.safe.timeCriticality');
    const riskReduction = capability.get('cf.cplace.solution.safe.riskReduction');
    const jobSize = capability.get('cf.cplace.solution.safe.jobSize');
    const programIncrement = capability.get('cf.cplace.solution.safe.programIncrement');
    const actualStartDate = capability.get('cf.cplace.solution.safe.actualStartDate');
    const actualEndDate = capability.get('cf.cplace.solution.safe.actualEndDate');
    const flowTime = capability.get('cf.cplace.solution.safe.flowTime');
    const program = capability.get('cf.cplace.solution.safe.program');
    const capabilityowner = capability.get('cf.cplace.solution.safe.capabilityowner');
    const portfolioEpic = capability.get('cf.cplace.solution.safe.portfolioEpic');
    const solutionShortName = capability.get('cf.cplace.solution.safe.solutionShortName');
    const plannedStart = capability.get('cf.cplace.solution.safe.plannedStart');
    const plannedEnd = capability.get('cf.cplace.solution.safe.plannedEnd');
    const iteration = capability.get('cf.cplace.solution.safe.iteration');
    const definitionOfReady = capability.get('cf.cplace.solution.safe.definitionOfReady');
    const definitionOfDone = capability.get('cf.cplace.solution.safe.definitionOfDone');
    const acceptanceCriteria = capability.get('cf.cplace.solution.safe.acceptanceCriteria');
    const benefitHypothesis = capability.get('cf.cplace.solution.safe.benefitHypothesis');
    const conflictState = capability.get('cf.cplace.solution.safe.conflictState');
    const features = capability.get('cf.cplace.solution.safe.features');
}


function readFromDependency(dependency) {
    const title = dependency.get('cf.cplace.solution.safe.title');
    const successor = dependency.get('cf.cplace.solution.safe.successor');
    const type = dependency.get('cf.cplace.solution.safe.type');
    const predecessor = dependency.get('cf.cplace.solution.safe.predecessor');
    const status = dependency.get('cf.cplace.solution.safe.status');
    const description = dependency.get('cf.cplace.solution.safe.description');
    const plannedStartA = dependency.get('cf.cplace.solution.safe.plannedStartA');
    const plannedEndB = dependency.get('cf.cplace.solution.safe.plannedEndB');
}


function readFromSafeMilestone(safeMilestone) {
    const title = safeMilestone.get('cf.cplace.solution.safe.title');
    const date = safeMilestone.get('cf.cplace.solution.safe.date');
    const type = safeMilestone.get('cf.cplace.solution.safe.type');
    const relevantFor = safeMilestone.get('cf.cplace.solution.safe.relevantFor');
    const plannedStart = safeMilestone.get('cf.cplace.solution.safe.plannedStart');
    const plannedEnd = safeMilestone.get('cf.cplace.solution.safe.plannedEnd');
}


function readFromPeriodStatus(periodStatus) {
    const order = periodStatus.get('cf.cplace.solution.safe.order');
}


function readFromFlowMetric(flowMetric) {
    const artifactType = flowMetric.get('cf.cplace.solution.safe.artifactType');
    const snapshotDate = flowMetric.get('cf.cplace.solution.safe.snapshotDate');
    const Reference = flowMetric.get('cf.cplace.solution.safe.SAFeLevel.Reference');
    const timebox = flowMetric.get('cf.cplace.solution.safe.timebox');
    const jsonMetricData = flowMetric.get('cf.cplace.solution.safe.jsonMetricData');
}


function readFromObjective(objective) {
    const objectivetitle = objective.get('cf.cplace.solution.safe.objectivetitle');
    const timebox = objective.get('cf.cplace.solution.safe.timebox');
    const SAFeLevel = objective.get('cf.cplace.solution.safe.SAFeLevel');
    const Reference = objective.get('cf.cplace.solution.safe.SAFeLevel.Reference');
    const businessValue = objective.get('cf.cplace.solution.safe.businessValue');
    const actualValue = objective.get('cf.cplace.solution.safe.actualValue');
    const commitment = objective.get('cf.cplace.solution.safe.commitment');
    const statement = objective.get('cf.cplace.solution.safe.statement');
}


function readFromEvent(event) {
    const title = event.get('cf.cplace.solution.safe.title');
    const startDate = event.get('cf.cplace.solution.safe.startDate');
    const endDate = event.get('cf.cplace.solution.safe.endDate');
    const solution = event.get('cf.cplace.solution.safe.solution');
}


function readFromConfidenceVote(confidenceVote) {
    const PI = confidenceVote.get('cf.cplace.solution.safe.confidenceVote.PI');
    const result = confidenceVote.get('cf.cplace.solution.safe.confidenceVote.result');
    const oneFinger = confidenceVote.get('cf.cplace.solution.safe.confidenceVote.oneFinger');
    const twoFingers = confidenceVote.get('cf.cplace.solution.safe.confidenceVote.twoFingers');
    const threeFingers = confidenceVote.get('cf.cplace.solution.safe.confidenceVote.threeFingers');
    const fourFingers = confidenceVote.get('cf.cplace.solution.safe.confidenceVote.fourFingers');
    const fiveFingers = confidenceVote.get('cf.cplace.solution.safe.confidenceVote.fiveFingers');
    const solution = confidenceVote.get('cf.cplace.solution.safe.confidenceVote.solution');
    const programIncrement = confidenceVote.getIncomingPages('cf.cplace.solution.safe.programIncrement', 'cf.cplace.solution.safe.confidenceVote');
}



```

Generate a javascript function with name `checkAccess`, that has one parameter 'programIncrement'. It should return a boolean value.

It starts by searching for all PIs that have a non-empty period status. For each PI found, it retrieves the order of the period status and stores it in an array. Finally, it checks if the order '0' (which might represent a 'Running' status) is not present in the array, and returns true if so, indicating that the action can be performed, otherwise it returns false.
The following code contains a representation of a data model of an application:

```
{"export":{"workspace":{"name":"OKR","types":[{"name":"cf.cplace.solution.okr.cycle","localizedNameSingular":{"de":"Zyklus","en":"Cycle"},"localizedNamePlural":{"de":"Zyklen","en":"Cycles"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.okr.year","localizedName":{"de":"Jahr","en":"Year"},"multiplicity":"exactlyOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.okr.quarter","localizedName":{"de":"Quartal","en":"Quarter"},"multiplicity":"exactlyOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.okr.status","localizedName":{"de":"Status","en":"Status"},"multiplicity":"exactlyOne","typeConstraint":"TextEnumeration","enumerationValues":["#15 Next","#25 Current","#35 Closed","#45 Draft"],"enumerationValues2localizedLabels":{"#25 Current":{"localizations":{"de":{"language":"de","value":"Aktuell"},"en":{"language":"en","value":"Current"}}},"#35 Closed":{"localizations":{"de":{"language":"de","value":"Geschlossen"},"en":{"language":"en","value":"Closed"}}},"#45 Draft":{"localizations":{"de":{"language":"de","value":"Entwurf"},"en":{"language":"en","value":"Draft"}}},"#15 Next":{"localizations":{"de":{"language":"de","value":"N\u00e4chster"},"en":{"language":"en","value":"Next"}}}}},{"name":"cf.cplace.solution.okr.cyclesDashboard","localizedName":{"de":"Zyklen Dashboard","en":"Cycles Dashboard"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.cyclesDashboard","linkSameWorkspace":"true","linkIsHierarchy":"true"},{"name":"cf.cplace.solution.okr.start","localizedName":{"de":"Start","en":"Start"},"multiplicity":"maximalOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.okr.end","localizedName":{"de":"Ende","en":"End"},"multiplicity":"maximalOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.okr.statusForNameGenerationPattern","localizedName":{"de":"Status f\u00fcr die Namensgenerierung","en":"Status for name generation pattern"},"multiplicity":"maximalOne","typeConstraint":"Text"}]},{"name":"cf.cplace.solution.okr.objective","localizedNameSingular":{"de":"Objective","en":"Objective"},"localizedNamePlural":{"de":"Objectives","en":"Objectives"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.okr.number","localizedName":{"de":"Nummer","en":"Number"},"localizedShortName":{"de":"Nr.","en":"No."},"multiplicity":"exactlyOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.okr.title","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.okr.set","localizedName":{"de":"Set","en":"Set"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.set","linkSameWorkspace":"true","linkIsHierarchy":"true"},{"name":"cf.cplace.solution.okr.accomplished","localizedName":{"de":"Erreicht","en":"Accomplished"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration","enumerationValues":["#15 - yes","#25 - no"],"enumerationValues2localizedLabels":{"#25 - no":{"localizations":{"de":{"language":"de","value":"Nein"},"en":{"language":"en","value":"No"}}},"#15 - yes":{"localizations":{"de":{"language":"de","value":"Ja"},"en":{"language":"en","value":"Yes"}}}}},{"name":"cf.cplace.solution.okr.cycle","localizedName":{"de":"Zyklus","en":"Cycle"},"localizedShortHelp":null,"multiplicity":"maximalOne","typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.set","referencedAttributeName":"cf.cplace.solution.okr.cycle"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.cycle","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.description","localizedName":{"de":"Beschreibung","en":"Description"},"multiplicity":"maximalOne","typeConstraint":"RichString"}]},{"name":"cf.cplace.solution.okr.keyResult","localizedNameSingular":{"de":"Schl\u00fcsselergebnis","en":"Key Result"},"localizedNamePlural":{"de":"Schl\u00fcsselergebnisse","en":"Key Results"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.okr.number","localizedName":{"de":"Nummer","en":"Number"},"localizedShortName":{"de":"Nr.","en":"No."},"multiplicity":"exactlyOne","typeConstraint":"Number"},{"name":"cf.cplace.solution.okr.title","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.okr.progressIndicator","localizedName":{"de":"Fortschrittsindikator","en":"Progress Indicator"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration","enumerationValues":["#15 green","#25 yellow","#35 red","#45 outdated"],"enumerationValues2localizedLabels":{"#35 red":{"localizations":{"de":{"language":"de","value":"Off track"},"en":{"language":"en","value":"Off track"}}},"#15 green":{"localizations":{"de":{"language":"de","value":"On track"},"en":{"language":"en","value":"On track"}}},"#25 yellow":{"localizations":{"de":{"language":"de","value":"Progressing"},"en":{"language":"en","value":"Progressing"}}},"#45 outdated":{"localizations":{"de":{"language":"de","value":"Outdated"},"en":{"language":"en","value":"Outdated"}}}}},{"name":"cf.cplace.solution.okr.confidenceLevel","localizedName":{"de":"Confidence Level","en":"Confidence Level"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration","enumerationValues":["0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"],"enumerationValues2localizedLabels":{"0.6":{"localizations":{"de":{"language":"de","value":"0.6"},"en":{"language":"en","value":"0.6"}}},"0.5":{"localizations":{"de":{"language":"de","value":"0.5"},"en":{"language":"en","value":"0.5"}}},"0.8":{"localizations":{"de":{"language":"de","value":"0.8"},"en":{"language":"en","value":"0.8"}}},"0.7":{"localizations":{"de":{"language":"de","value":"0.7"},"en":{"language":"en","value":"0.7"}}},"0.2":{"localizations":{"de":{"language":"de","value":"0.2"},"en":{"language":"en","value":"0.2"}}},"0.1":{"localizations":{"de":{"language":"de","value":"0.1"},"en":{"language":"en","value":"0.1"}}},"1.0":{"localizations":{"de":{"language":"de","value":"1.0"},"en":{"language":"en","value":"1.0"}}},"0.4":{"localizations":{"de":{"language":"de","value":"0.4"},"en":{"language":"en","value":"0.4"}}},"0.3":{"localizations":{"de":{"language":"de","value":"0.3"},"en":{"language":"en","value":"0.3"}}},"0.9":{"localizations":{"de":{"language":"de","value":"0.9"},"en":{"language":"en","value":"0.9"}}}}},{"name":"cf.cplace.solution.okr.gradingForecast","localizedName":{"de":"Fortschritt Vorhersage","en":"Grading Forecast"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration","enumerationValues":["0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"],"enumerationValues2localizedLabels":null},{"name":"cf.cplace.solution.okr.smallSupport","localizedName":{"de":"Receive Small Support","en":"Receive Small Support"},"multiplicity":null,"typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.organizationalUnit","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.bigSupport","localizedName":{"de":"Big Support","en":"Big Support"},"localizedShortHelp":null,"multiplicity":null,"typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.giveBigSupport","referencedAttributeName":"cf.cplace.solution.okr.organizationalUnit"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.organizationalUnit","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.giveBigSupport","localizedName":{"de":"Give Big Support","en":"Give Big Support"},"multiplicity":null,"typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.keyResult","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.receiveBigSupport","localizedName":{"de":"Receive Big Support","en":"Receive Big Support"},"multiplicity":null,"typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.keyResult","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.objective","localizedName":{"de":"Objective","en":"Objective"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.objective","linkSameWorkspace":"true","linkIsHierarchy":"true"},{"name":"cf.cplace.solution.okr.progress","localizedName":{"de":"Fortschritt","en":"Progress"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.progress","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.set","localizedName":{"de":"Set","en":"Set"},"localizedShortHelp":null,"multiplicity":"maximalOne","typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.objective","referencedAttributeName":"cf.cplace.solution.okr.set"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.set","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.cycle","localizedName":{"de":"Zyklus","en":"Cycle"},"localizedShortHelp":null,"multiplicity":"maximalOne","typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.set","referencedAttributeName":"cf.cplace.solution.okr.cycle"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.cycle","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.organizationalUnit","localizedName":{"de":"Organsationseinheit","en":"Organizational Unit"},"localizedShortHelp":null,"multiplicity":"maximalOne","typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.set","referencedAttributeName":"cf.cplace.solution.okr.organizationalUnit"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.organizationalUnit","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.lastUpdate","localizedName":{"de":"Letztes Update","en":"Last Update"},"localizedShortHelp":null,"multiplicity":"maximalOne","typeConstraint":"Date","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.progress","referencedAttributeName":"cf.cplace.solution.okr.lastUpdate"}}]},{"name":"cf.cplace.solution.okr.progress","localizedNameSingular":{"de":"Fortschritt","en":"Progress"},"localizedNamePlural":{"de":"Fortschritt","en":"Progress"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.okr.result","localizedName":{"de":"Ergebnise","en":"Results"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.okr.problem","localizedName":{"de":"Probleme","en":"Problems"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.okr.lessonsLearned","localizedName":{"de":"Learnings","en":"Learnings"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.okr.nextSteps","localizedName":{"de":"N\u00e4chste Schritte","en":"Next Steps"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.solution.okr.keyResult","localizedName":{"de":"Key Result","en":"Key Result"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.keyResult","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.cycle","localizedName":{"de":"Zyklus","en":"Cycle"},"localizedShortHelp":null,"multiplicity":"maximalOne","typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.keyResult","referencedAttributeName":"cf.cplace.solution.okr.cycle"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.cycle","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.objective","localizedName":{"de":"Objective","en":"Objective"},"localizedShortHelp":null,"multiplicity":"maximalOne","typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.keyResult","referencedAttributeName":"cf.cplace.solution.okr.objective"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.objective","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.smallSupport","localizedName":{"de":"Small Support","en":"Small Support"},"localizedShortHelp":null,"multiplicity":null,"typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.keyResult","referencedAttributeName":"cf.cplace.solution.okr.smallSupport"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.organizationalUnit","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.bigSupport","localizedName":{"de":"Big Support","en":"Big Support"},"localizedShortHelp":null,"multiplicity":null,"typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.keyResult","referencedAttributeName":"cf.cplace.solution.okr.bigSupport"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.organizationalUnit","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.solution.okr.progressIndicator","localizedName":{"de":"Fortschrittsindikator","en":"Progress Indicator"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration","enumerationValues":["#15 green","#25 yellow","#35 red","#45 outdated"],"enumerationValues2localizedLabels":{"#35 red":{"localizations":{"de":{"language":"de","value":"Off track"},"en":{"language":"en","value":"Off track"}}},"#15 green":{"localizations":{"de":{"language":"de","value":"On track"},"en":{"language":"en","value":"On track"}}},"#25 yellow":{"localizations":{"de":{"language":"de","value":"Progressing"},"en":{"language":"en","value":"Progressing"}}},"#45 outdated":{"localizations":{"de":{"language":"de","value":"Outdated"},"en":{"language":"en","value":"Outdated"}}}}},{"name":"cf.cplace.solution.okr.confidenceLevel","localizedName":{"de":"Confidence Level","en":"Confidence Level"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration","enumerationValues":["0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"],"enumerationValues2localizedLabels":null},{"name":"cf.cplace.solution.okr.gradingForecast","localizedName":{"de":"Fortschritt Vorhersage","en":"Grading Forecast"},"multiplicity":"maximalOne","typeConstraint":"TextEnumeration","enumerationValues":["0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"],"enumerationValues2localizedLabels":null},{"name":"cf.cplace.solution.okr.lastUpdate","localizedName":{"de":"Letztes Update","en":"Last Update"},"multiplicity":"maximalOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.okr.set","localizedName":{"de":"Set","en":"Set"},"localizedShortHelp":null,"multiplicity":"maximalOne","typeConstraint":"Link","derivable":{"referencingAttributeName":"cf.cplace.solution.okr.keyResult","referencedAttributeName":"cf.cplace.solution.okr.set"},"linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.set","linkSameWorkspace":"false","linkIsHierarchy":"false"}]},{"name":"cf.cplace.solution.okr.task","localizedNameSingular":{"de":"Aufgabe","en":"Task"},"localizedNamePlural":{"de":"Aufgaben","en":"Tasks"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.digitalBoard.title","localizedName":{"de":"Titel","en":"Title"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.digitalBoard.responsible","localizedName":{"de":"Verantwortliche(r)","en":"Responsible"},"multiplicity":"maximalOne","typeConstraint":"Link","linkEntityKind":"person","linkSameWorkspace":"false","linkIsHierarchy":"false"},{"name":"cf.cplace.digitalBoard.description","localizedName":{"de":"Beschreibung","en":"Description"},"multiplicity":"maximalOne","typeConstraint":"Text"},{"name":"cf.cplace.digitalBoard.status","localizedName":{"de":"Status","en":"Status"},"multiplicity":"exactlyOne","typeConstraint":"TextEnumeration","enumerationValues":["#15 planned","#25 in progress","#35 done","#45 cancelled"],"enumerationValues2localizedLabels":{"#15 planned":{"localizations":{"de":{"language":"de","value":"Geplant"},"en":{"language":"en","value":"Planned"}}},"#25 in progress":{"localizations":{"de":{"language":"de","value":"In Arbeit"},"en":{"language":"en","value":"In progress"}}},"#45 cancelled":{"localizations":{"de":{"language":"de","value":"Abgebrochen"},"en":{"language":"en","value":"Cancelled"}}},"#35 done":{"localizations":{"de":{"language":"de","value":"Fertig"},"en":{"language":"en","value":"Done"}}}}},{"name":"cf.cplace.digitalBoard.dueDate","localizedName":{"de":"F\u00e4lligkeitsdatum","en":"Due Date"},"multiplicity":"maximalOne","typeConstraint":"Date"},{"name":"cf.cplace.solution.okr.keyResult","localizedName":{"de":"Key Result","en":"Key Result"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.keyResult","linkSameWorkspace":"true","linkIsHierarchy":"false"},{"name":"cf.cplace.digitalBoard.escalationLevel","localizedName":{"de":"Eskalationslevel","en":"Escalation Level"},"multiplicity":"exactlyOne","typeConstraint":"TextEnumeration","enumerationValues":["#15 - none","#25 - handRaised"],"enumerationValues2localizedLabels":{"#15 - none":{"localizations":{"de":{"language":"de","value":"Kein"},"en":{"language":"en","value":"None"}}},"#25 - handRaised":{"localizations":{"de":{"language":"de","value":"Hand gehoben"},"en":{"language":"en","value":"Hand Raised"}}}}}]},{"name":"cf.cplace.solution.okr.selectNextCycle","localizedNameSingular":{"de":"Select next Cycle","en":"Select next Cycle"},"description":null,"attributeDefinitions":[{"name":"cf.cplace.solution.okr.nextCycle","localizedName":{"de":"N\u00e4chster Zyklus","en":"Next Cycle"},"multiplicity":"exactlyOne","typeConstraint":"Link","linkEntityKind":"page","linkTypeName":"cf.cplace.solution.okr.cycle","linkSameWorkspace":"true","linkIsHierarchy":"false"}]}]}}}
```

The following code contains a representation of 3 layouts of a page:

```
[{"rows":[{"columns":[{"proportion":12,"widgets":[{"widgetType":"cf.cplace.visualizations.scriptingHighcharts","attributes":[{"name":"cf.cplace.visualization.dataSource","value":"search"},{"name":"cf.cplace.visualization.script","value":{"version":1,"script":"/*\n*Highchart\n*Displays the cycle timeline\n*/\n\n\nconst CYCLE = {\n    TYPE: 'cf.cplace.solution.okr.cycle',\n    ATTR: {\n        START: 'cf.cplace.solution.okr.start',\n        END: 'cf.cplace.solution.okr.end',\n        YEAR: 'cf.cplace.solution.okr.year',\n        STATUS: 'cf.cplace.solution.okr.status'\n    }\n}\n\nconst MEETING = {\n    TYPE: 'cf.cplace.solution.okr.meeting',\n    ATTR: {\n        TITLE: 'cf.cplace.solution.okr.title',\n        MEETING_TYPE: 'cf.cplace.solution.okr.meetingType',\n        DATE: 'cf.cplace.solution.okr.date',\n        CYCLE: 'cf.cplace.solution.okr.cycle'\n    }\n}\n\n/*************INITIALIZATION************* */\nconst dataObj = { cycleNames: [], seriesCyclePhase: [], seriesInputPhase: [], seriesWorkshop: [], seriesStrategy: [] }\nconst counterArray = [];\nconst row = 0;\nconst values = [];\nconst sortedPages = []\n\nlet workshop;\nlet workshopDate;\nlet messages = {\n    inputPhase: {\n        en: 'Input Phase ',\n        de: 'Input-Phase '\n    },\n    cyclePhase: {\n        en: 'Cycle Implementation Phase ',\n        de: 'Cycle Umsetzungs-Phase '\n    },\n    workshop: {\n        en: 'Workshop ',\n        de: 'Workshop '\n    },\n    strategy: {\n        en: 'Strategy Update ',\n        de: 'Strategie Update '\n    }\n};\n\nfunction genearteData(embeddingPage) {\n    const cycle = embeddingPage;\n    const cycleName = cycle.getName();\n    const cycleStart = cycle.get(CYCLE.ATTR.START);\n    const cycleEnd = cycle.get(CYCLE.ATTR.END);\n    const lang = cplace.utils().getCurrentUser().getUserLanguage();\n    const meetings = cycle.getIncomingPages(MEETING.TYPE, MEETING.ATTR.CYCLE);\n    cplace.each(meetings, function (meeting) {\n        if (meeting.get('cf.cplace.solution.okr.meetingType') == \"Workshop\") {\n            workshop = meeting;\n        };\n    })\n\n    if (workshop) {\n        workshopDate = workshop.get(MEETING.ATTR.DATE);\n    }\n\n    if (cycleStart && cycleEnd && workshop) {\n\n        dataObj.cycleNames.push(cycleName);\n        dataObj.seriesCyclePhase.push({\n            x: cycleStart.getMillis(),\n            x2: cycleEnd.getMillis(),\n            y: row,\n            color: '#006ae5',\n            dataLabels: {\n                format: messages.cyclePhase[lang] + cycleName\n            },\n            name: messages.cyclePhase[lang] + cycleName\n        });\n        dataObj.seriesInputPhase.push({\n            x: workshopDate.minusDays(21).getMillis(),\n            x2: workshopDate.getMillis(),\n            color: '#00ffcd',\n            y: row,\n            dataLabels: {\n                format: messages.inputPhase[lang]\n            },\n            name: messages.inputPhase[lang] + cycleName\n        });\n        dataObj.seriesWorkshop.push({\n            x: workshopDate.getMillis(),\n            y: row,\n            date: cycleStart.toString(\"MMM/dd\"),\n            dataLabels: {\n                format: messages.workshop[lang]\n            },\n            color: '#151821',\n            name: messages.inputPhase[lang]\n        })\n        dataObj.seriesStrategy.push({\n            x: cycleEnd.minusDays(28).getMillis(),\n            y: row,\n            date: cycleStart.toString(\"MMM/dd\"),\n            color: '#151821',\n            dataLabels: {\n                format: messages.strategy[lang]\n            },\n            name: messages.strategy[lang]\n        })\n    }\n\n    return dataObj;\n\n}\nfunction main() {\n    const data = genearteData(embeddingPage);\n\n    const chart = {\n        chart: {\n            type: 'xrange',\n            zoomType: 'x',\n            backgroundColor: '#F2F4FA',\n        },\n        legend: {\n            enabled: false\n        },\n        title: {\n            text: ''\n        },\n        xAxis: {\n            type: 'datetime',\n            plotLines: [{\n                value: new Date().setHours(0),\n                dashStyle: 'dash',\n                width: 2,\n                zIndex: 5,\n            }],\n            lineColor: '#F2F4FA',\n            tickLength: 1,\n        },\n        yAxis: {\n            title: '',\n            labels: {\n                enabled: false\n            },\n            gridLineColor: 'rgba(255,255,255,0)',\n            lineColor: '#F2F4FA',\n            categories: data.cycleNames,\n            reversed: true,\n            max: 0\n        },\n        plotOptions: {\n            series: {\n                borderRadius: 5,\n                dataLabels: {\n                    enabled: true\n                }\n            }\n        },\n        series: [{\n            name: '',\n            data: data.seriesCyclePhase,\n            dataLabels: {\n                enabled: true\n            }\n        }, {\n            name: '',\n            data: data.seriesInputPhase,\n            dataLabels: {\n                enabled: true\n            }\n        }, {\n            type: 'scatter',\n            stickyTracking: false,\n            marker: {\n                enabled: true,\n                symbol: 'diamond',\n                lineColor: 'white',\n                lineWidth: 1,\n                radius: 13\n            },\n            data: data.seriesWorkshop\n        }, {\n            type: 'scatter',\n            stickyTracking: false,\n            marker: {\n                enabled: true,\n                symbol: 'diamond',\n                lineColor: 'white',\n                lineWidth: 1,\n                radius: 13\n            },\n            data: data.seriesStrategy\n        }],\n        tooltip: {\n            enabled: false\n        }\n    };\n    return chart\n}\n\nreturn main();","upgradeAck":true,"description":""}},{"name":"cf.cplace.visualization.search","value":{"filters":[{"relativeUid":"embeddingCustomEntity"}]}},{"name":"cf.cplace.visualization.showFrame","value":false},{"name":"height","value":150.0},{"name":"sortOrder","value":"Aufsteigend"},{"name":"title","value":{"de":"Cycle Timeline","en":"Cycle Timeline"}}]}]}]},{"columns":[{"proportion":8,"widgets":[{"widgetType":"cf.cplace.treeTableWidget","attributes":[{"name":"cf.cplace.platform.attributes","value":["s{\"parentType\":\"cf.cplace.solution.okr.objective\",\"incomingType\":\"cf.cplace.solution.okr.keyResult\",\"name\":\"cf.cplace.solution.okr.objective\"}","s{\"parentType\":\"cf.cplace.solution.okr.set\",\"incomingType\":\"cf.cplace.solution.okr.objective\",\"name\":\"cf.cplace.solution.okr.set\"}","s{\"parentType\":\"cf.cplace.solution.okr.cycle\",\"incomingType\":\"cf.cplace.solution.okr.set\",\"name\":\"cf.cplace.solution.okr.cycle\"}"]},{"name":"cf.cplace.platform.defaultDepth","value":2.0},{"name":"cf.cplace.platform.search","value":{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.okr.cycle","cf.cplace.solution.okr.keyResult","cf.cplace.solution.okr.objective","cf.cplace.solution.okr.set"]}]}},{"name":"columns","value":[{"name":"customType","visible":true},{"name":"'cf.cplace.solution.okr.level'","visible":true},{"name":"'cf.cplace.solution.okr.confidenceLevel'","visible":true},{"name":"'cf.cplace.solution.okr.gradingForecast'","visible":true},{"name":"'cf.cplace.solution.okr.bigSupport'","visible":true},{"name":"'cf.cplace.solution.okr.smallSupport'","visible":true},{"name":"'cf.cplace.solution.okr.cycle'","visible":false},{"name":"'cf.cplace.solution.okr.setLead'","visible":false},{"name":"'cf.cplace.solution.okr.setContributors'","visible":false},{"name":"'cf.cplace.solution.okr.status'","visible":false},{"name":"'cf.cplace.solution.okr.organizationalUnit'","visible":false},{"name":"'cf.cplace.solution.okr.number'","visible":false},{"name":"'cf.cplace.solution.okr.title'","visible":false},{"name":"'cf.cplace.solution.okr.progressIndicator'","visible":false},{"name":"'cf.cplace.solution.okr.objective'","visible":false},{"name":"'cf.cplace.solution.okr.progress'","visible":false},{"name":"'cf.cplace.solution.okr.year'","visible":false},{"name":"'cf.cplace.solution.okr.quarter'","visible":false},{"name":"'cf.cplace.solution.okr.cyclesDashboard'","visible":false},{"name":"'cf.cplace.solution.okr.set'","visible":false},{"name":"'cf.cplace.solution.okr.motivation'","visible":false},{"name":"'cf.cplace.solution.okr.target'","visible":false},{"name":"'cf.cplace.solution.okr.deepInsights'","visible":false},{"name":"'cf.cplace.solution.okr.accomplished'","visible":false},{"name":"'cf.cplace.solution.okr.conclusion'","visible":false}]},{"name":"title","value":{"de":"Objectives & Key Results","en":"Objectives & Key Results"}}]}]},{"proportion":4,"widgets":[{"widgetType":"cf.cplace.visualizations.scriptingHighcharts","attributes":[{"name":"cf.cplace.visualization.dataSource","value":"search"},{"name":"cf.cplace.visualization.script","value":{"version":1,"script":"/// <reference path=\"./typeDefinitions/cplaceJS_type.js\" />\n/**\n * Template for Highchart\n * \n * Instructions:\n * - configure a highchart widget with a search or connected table\n * - look in this script for the following line: !!!! CHANGE FROM HERE !!!! and change your options there\n * - the main options are: BASE_ATTRIBUTE and CHART_TYPE_SELECTED\n * \n * TODO:\n * - Color Attribute\n * - builtin Attributes\n * - more charts\n * - date format for series / data points\n * - multi language\n * - Alias label for internal names\n * - sort of series\n *   \n * \n * \n * @author Bastian Rang <bastian.rang@collaboration-factory.de>\n * @version 2021-08-05\n */\n\n/**\n * ======================\n * LOG AND DEBUG SETTINGS\n * ======================\n */\n const DEBUG = true;\n\n /**\n  * Hint: set a declarative name for all of your logs\n  */\n cplace.setLogName(\"highchart-template\");\n \n /**\n  * ===================\n  * CONFIGURATION STAGE\n  * ===================\n  */\n \n /**\n  * DO NOT CHANGE THESE CONFIGURATIONS WITHOUT STRONG REASON !!!!!\n  */\n const CHART_DEFINITION = {\n     PIE: {\n         chart: {\n             type: 'pie'\n         },\n         isPercentageAvailable: true,\n         isStackable: false,\n         hasFloatingTitle: false\n     },\n     SEMICIRCLE: {\n         chart: {\n             type: 'pie'\n         },\n         plotOptions: {\n             startAngle: -90,\n             endAngle: 90,\n             center: ['50%', '75%'],\n             size: '110%',\n             innerSize: '70%'\n         },\n         isPercentageAvailable: true,\n         isStackable: false,\n         hasFloatingTitle: false\n     },\n     BAR: {\n         chart: {\n             type: 'bar'\n         },\n         plotOptions: {\n             colorByPoint: true\n         },\n         isPercentageAvailable: true,\n         isStackable: true,\n         hasFloatingTitle: true\n     },\n     COLUMN: {\n         chart: {\n             type: 'column'\n         },\n         plotOptions: {\n             colorByPoint: true\n         },\n         isPercentageAvailable: true,\n         isStackable: true,\n         hasFloatingTitle: true\n     },\n }\n \n \n \n /**\n  * ==================================================================================\n  * !!!! CHANGE FROM HERE !!!!\n  */\n \n /**\n  * Optional: Show a title inside of the chart area\n  */\n const CHART_TITLE = ''\n \n /**\n  * Set to null or leave blank to use the Pagename\n  * \n  * TODO builtinFeatureValue starts with underscore: '_creator'\n  */\n const BASE_ATTRIBUTE = 'cf.cplace.solution.okr.progressIndicator';\n \n /**\n  * Optional: Stacking is only possible for bar and column charts\n  * \n  */\n const STACK_ATTRIBUTE = null;\n \n /**\n  * Optional: Define an attribute of the page that acts as weight. If null, each entry has a weight of 1.\n  * The weight is used as sum of each datapoint.\n  */\n const WEIGHT_ATTRIBUTE = null;\n \n /**\n  * Define the base type of the chart: \n  * - CHART_DEFINITION.PIE\n  * - CHART_DEFINITION.SEMICIRCLE\n  * - CHART_DEFINITION.BAR\n  * - CHART_DEFINITION.COLUMN\n  */\n const CHART_TYPE_SELECTED = CHART_DEFINITION.PIE;\n \n /**\n  * Define colors for the chart\n  */\n const CHART_COLORS = {\n     BACKGROUND: '#F2F4FA',\n     TEXT: 'var(--text-color)',\n     SERIES: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a'],\n     CATEGORY: {\n         '#15 green': '#AEDB3C',\n         '#25 yellow': '#FFBA00',\n         '#35 red': '#DB0F35',\n         '#45 outdated': '#bcbcbc'\n     }\n }\n \n /**\n  * @type {Boolean} sort axes ascending (true) or descending (false)\n  */\n const CHART_SORT_ASCENDING = true;\n \n /**\n  * @type {Boolean} show legend under chart\n  */\n const CHART_SHOW_LEGEND = false;\n \n /**\n  * @type {Boolean} show labels on all datapoints\n  */\n const CHART_SHOW_LABELS = false;\n \n /**\n  * @type {Boolean} show values as percentage\n  */\n const CHART_SHOW_PERCENTAGE = false;\n \n /**\n  * @type {null|String} override tooltip text\n  * - use {point.y} as placeholder for absolute values\n  * - use {point.percentage:.1f}% as placeholder for percantage\n  * - use {point.stackTotal} for sum of stack\n  * - use {point.name} for name of data point\n  * - use {series.name} for name of data series\n  */\n const CHART_TOOLTIP_OVERRIDE = null;\n \n \n /**\n  * DO NOT CHANGE AFTER THIS LINE\n  * ==================================================================================\n  */\n \n const CHART_IS_STACKED = !!STACK_ATTRIBUTE && CHART_TYPE_SELECTED.isStackable;\n \n const CHART_POINT_FORMAT = (CHART_TYPE_SELECTED.isPercentageAvailable && CHART_SHOW_PERCENTAGE) ? '{point.percentage:.1f}%' : '{point.y}'\n \n /**\n  * ====================\n  * INITIALIZATION STAGE\n  * ====================\n  */\n \n let config = {\n     title: {\n         text: CHART_TITLE,\n         align: 'center',\n         verticalAlign: 'middle',\n         margin: 0,\n         useHtml: true,\n         style: {\n             color: CHART_COLORS.TEXT,\n             fontSize: \"2em\",\n             fontWeight: \"bold\"\n         }\n     },\n     chart: CHART_TYPE_SELECTED.chart,\n     legend: {\n         enabled: CHART_SHOW_LEGEND,\n         layout: 'horizontal',\n         align: 'center',\n         verticalAlign: 'bottom',\n         itemStyle: {\n             color: CHART_COLORS.TEXT,\n             fontWeight: \"normal\"\n         }\n     },\n     pane: {\n         size: '100%'\n     },\n     tooltip: {\n         pointFormat: '<b>' + CHART_POINT_FORMAT + '</b>'\n     },\n     plotOptions: {\n         pie: {\n            borderWidth: 10,\n            borderColor: 'var(--body-bg)',\n         },\n         series: {\n             showInLegend: CHART_SHOW_LEGEND,\n             dataLabels: {\n                 enabled: CHART_SHOW_LABELS,\n                 format: '<b>{point.name}</b>: ' + CHART_POINT_FORMAT\n             },\n             cursor: 'pointer',\n             stacking: (CHART_IS_STACKED && CHART_SHOW_PERCENTAGE) ? 'percent' : CHART_IS_STACKED\n         }\n     },\n     colors: CHART_COLORS.SERIES,\n     series: [],\n     xAxis: {\n         type: 'category'\n     },\n     yAxis: {\n         allowDecimals: false,\n         title: ''\n     }\n }\n \n config.chart.backgroundColor = CHART_COLORS.BACKGROUND\n config.chart.spacingBottom = 0\n config.chart.spacingTop = 0\n \n if (CHART_TITLE && CHART_SHOW_LEGEND && CHART_TYPE_SELECTED.hasFloatingTitle) {\n     config.title.verticalAlign = 'top'\n }\n \n if (CHART_TYPE_SELECTED.plotOptions) {\n     config.plotOptions[CHART_TYPE_SELECTED.chart.type] = CHART_TYPE_SELECTED.plotOptions;\n }\n \n if (CHART_IS_STACKED) {\n     config.plotOptions[CHART_TYPE_SELECTED.chart.type].colorByPoint = false;\n     config.tooltip.pointFormat = '{series.name}: ' + CHART_POINT_FORMAT + '<br/>Total: {point.stackTotal}'\n     config.plotOptions.series.dataLabels.format = '{series.name}: ' + CHART_POINT_FORMAT\n }\n \n if (CHART_TOOLTIP_OVERRIDE !== null) {\n     config.tooltip.pointFormat = CHART_TOOLTIP_OVERRIDE;\n }\n \n \n /**\n  * ================\n  * PROCESSING STAGE\n  * ================ \n  */\n if (pages.length === 0) {\n     return config\n }\n \n let datasetSize = pages.length;\n let series = [];\n let series_labels = {};\n let categories = {};\n let data = {};\n let pageCounter = 0;\n pages.forEach(function (page) {\n     let value = getValueAndLabelOfAttribute(page, BASE_ATTRIBUTE)\n     let weight = 1;\n     if (value === null) {\n         return\n     }\n \n     let series = getValueAndLabelOfAttribute(page, STACK_ATTRIBUTE);\n \n     if (!CHART_IS_STACKED || series === null) {\n         series = {\n             value: '',\n             label: CHART_TITLE\n         }\n     }\n \n     if (WEIGHT_ATTRIBUTE) {\n         weight = page.get(WEIGHT_ATTRIBUTE) || 1\n     }\n \n     if (value.length) {\n         value.forEach(function (item) {\n             addSeriesData(item, weight, series, data, categories, series_labels)\n         })\n     } else {\n         addSeriesData(value, weight, series, data, categories, series_labels)\n     }\n     pageCounter++;\n });\n\n // This will display the number of pages in the center\n config.title.text += pageCounter;\n \n /**\n  * TODO Sort stacked series, too\n  */\n \n Object.keys(series_labels).sort().forEach(function (series_label) {\n     series_labels[series_label] = series.length\n \n     series.push({\n         name: series_label,\n         type: CHART_TYPE_SELECTED.chart.type,\n         data: [],\n         innerSize: '50%'\n     })\n \n })\n \n Object.keys(data).forEach(function (key) {\n     let currentDataItem = {\n         name: data[key].name,\n         y: data[key].count\n     }\n     let seriesId = series_labels[data[key].series]\n \n     if (CHART_COLORS.CATEGORY.hasOwnProperty(data[key].series_internal)) {\n         series[seriesId].color = CHART_COLORS.CATEGORY[data[key].series_internal]\n     } else if (CHART_COLORS.CATEGORY.hasOwnProperty(data[key].internal)) {\n         currentDataItem.color = CHART_COLORS.CATEGORY[data[key].internal]\n     } else if (CHART_COLORS.CATEGORY.hasOwnProperty(data[key].series)) {\n         series[seriesId].color = CHART_COLORS.CATEGORY[data[key].series]\n     } else if (CHART_COLORS.CATEGORY.hasOwnProperty(data[key].name)) {\n         currentDataItem.color = CHART_COLORS.CATEGORY[data[key].name]\n     }\n \n     series[seriesId].data.push(currentDataItem)\n })\n \n /**\n  * Add empty entries to series and sort them\n  */\n  let allDataKeys = [];\n  Object.keys(data).forEach(function (key) {\n      let label = data[key].name;\n      if (allDataKeys.indexOf(label) !== -1) {\n          return;\n      }\n  \n      series.forEach(function (serie) {\n          if (!serie.data.some(function (data) {\n                  return data.name === label\n              })) {\n              serie.data.push({\n                  name: label,\n                  y: 0\n              })\n          }\n      })\n      allDataKeys.push(label)\n  })\n \n /**\n  * sort series.data by name\n  */\n series.forEach(function (serie) {\n     serie.data.sort(function (a, b) {\n         if (!a.hasOwnProperty('name') || a.name == b.name) {\n             return 0\n         }\n         /**\n          * sort depending on CHART_SORT_ASCENDING\n          */\n         return ((CHART_SORT_ASCENDING && a.name > b.name) || (!CHART_SORT_ASCENDING && a.name < b.name)) ? 1 : -1\n     })\n })\n \n /**\n  * ============\n  * OUTPUT STAGE\n  * ============ \n  */\n \n config.series = series;\n return config;\n \n /**\n  * ==================\n  * BUSINESS FUNCTIONS\n  * ==================\n  */\n \n /**\n  * ================\n  * HELPER FUNCTIONS\n  * ================\n  */\n \n /**\n  * \n  * @param {object} value \n  * @param {Number} weight \n  * @param {object} series \n  * @param {object[]} data \n  * @param {object[]} categories \n  * @param {String[]} series_labels \n  */\n function addSeriesData(value, weight, series, data, categories, series_labels) {\n     let key = value.value + series.value;\n \n     if (data[key] === undefined) {\n         data[key] = {\n             count: 0,\n             name: value.label,\n             internal: value.value,\n             series: series.label,\n             series_internal: series.value\n         }\n     }\n \n     data[key].count += weight || 1;\n \n     if (!categories.hasOwnProperty(data[key].name)) {\n         categories[data[key].name] = 0\n     }\n \n     if (!series_labels.hasOwnProperty(data[key].series)) {\n         series_labels[data[key].series] = 0\n     }\n }\n \n \n /**\n  * \n  * @param {Page} page \n  * @param {object} attribute \n  * @returns \n  */\n function getValueAndLabelOfAttribute(page, attribute) {\n     let result = null;\n     if (!page) {\n         return result;\n     }\n     if (!attribute) {\n         return {\n             value: page.getRealUid(),\n             label: page.getName()\n         };\n     }\n \n     let value = page.get(attribute, false);\n     if (value === null) {\n         return result;\n     }\n     let value_label = page.get(attribute, true) || value;\n \n     let className = typeof value === 'object' ? String(value.getClass()) : 'String'\n \n     switch (className) {\n         case 'String':\n         case 'class java.lang.String':\n             result = {\n                 value: value,\n                 label: value_label\n             }\n             break;\n         case 'class cf.cplace.platform.scripting.api.wrapper.entity.WrappedGroup':\n         case 'class cf.cplace.platform.scripting.api.wrapper.entity.WrappedPerson':\n         case 'class cf.cplace.platform.scripting.api.wrapper.entity.WrappedPage':\n             result = {\n                 value: value.getRealUid(),\n                 label: value.getName()\n             }\n             break;\n         case 'class java.util.ArrayList':\n         case 'class com.google.common.collect.SingletonImmutableList':\n         case 'class com.google.common.collect.RegularImmutableList':\n             /**\n              * TODO Multi-Value\n              */\n             result = [];\n             cplace.each(value, function (item) {\n                 if (typeof item !== 'object' || String(item.getClass()) === 'class java.lang.String') {\n                     /**\n                      * FIXME enum label / enum internal name\n                      */\n                     result.push({\n                         value: item,\n                         label: item\n                     })\n                 } else {\n                     result.push({\n                         value: item.getRealUid(),\n                         label: item.getName()\n                     })\n                 }\n             })\n             break;\n         default:\n             /**\n              * TODO Reference\n              */\n             log('Class of ' + value + ' is \"' + value.class + '\"')\n             log(typeof value.class)\n             log(typeof value)\n     }\n \n     return result\n }\n \n \n /**\n  * Log to cplace\n  * @param {any} text \n  */\n function log(text) {\n     if (!DEBUG) {\n         return\n     }\n     let logOutput = (typeof text !== 'string') ? JSON.stringify(text) : text;\n \n     cplace.log(logOutput);\n }","upgradeAck":true,"description":""}},{"name":"cf.cplace.visualization.search","value":{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.okr.keyResult"]},{"relativeCustomReference":"cf.cplace.solution.okr.cycle","referenceOperator":"embeddingCustomEntity"}]}},{"name":"cf.cplace.visualization.showFrame","value":false},{"name":"height","value":180.0},{"name":"sortOrder","value":"Aufsteigend"},{"name":"title","value":{"de":"Key Results Donut Chart","en":"Key Results Donut Chart"}}]},{"widgetType":"cf.cplace.demoWidgets.demoRichString","attributes":[{"name":"content","value":"<p style=\"text-align: center\"><strong><img alt=\"On track\" src=\"https://solution-templates.cplace.de/okr/__bjyw0htwau60j0x3936bdi52f/icons/enumeration/circle-003-green.svg\" />&nbsp;On track&nbsp;<img alt=\"Progressing\" src=\"https://solution-templates.cplace.de/okr/__bjyw0htwau60j0x3936bdi52f/icons/enumeration/circle-002-yellow.svg\" />&nbsp;Progressing<br />\n<img alt=\"Off track\" src=\"https://solution-templates.cplace.de/okr/__bjyw0htwau60j0x3936bdi52f/icons/enumeration/circle-001-red.svg\" />&nbsp;Off track&nbsp;</strong><img alt=\"Outdated\" src=\"https://solution-templates.cplace.de/okr/__bjyw0htwau60j0x3936bdi52f/icons/enumeration/circle-000-gray.svg\" />&nbsp;<strong>Outdated</strong></p>"},{"name":"localizedWidgetTitle","value":{"de":"Legende","en":"Legend"}}]},{"widgetType":"cf.cplace.demoWidgets.demoRichString","attributes":[{"name":"content","value":"<div class=\"custom-set-leads\">\n<div class=\"custom-set-leads-company\">\n<p>Company</p>\n\n<p><embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2c2aWZoZmVrbzI4dGIycjg4d28xaGQ1aGkiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0uZW1iZWRkZWRTZWFyY2hBc0xpc3QiLCJwcm9wZXJ0aWVzIjpbeyJuYW1lIjoic2VhcmNoIiwidmFsdWVzIjpbeyJzdHJpbmciOiJ7XCJmaWx0ZXJzXCI6W3tcInVpZFwiOlwicGVyc29uXC9tajFobzNka3o2dDB5dWQ3MGFiN3hkN2RoXCJ9XX0ifV19LHsibmFtZSI6InNvcnRPcmRlciIsInZhbHVlcyI6W3sic3RyaW5nIjoiQXVmc3RlaWdlbmQifV19XX0</embeddedwidget></p>\n</div>\n\n<div class=\"custom-set-leads-sales\">\n<p>Sales</p>\n<embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2c2aWZoZmVrbzI4dGIycjg4d28xaGQ1aGkiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0uZW1iZWRkZWRTZWFyY2hBc0xpc3QiLCJwcm9wZXJ0aWVzIjpbeyJuYW1lIjoic2VhcmNoIiwidmFsdWVzIjpbeyJzdHJpbmciOiJ7XCJmaWx0ZXJzXCI6W3tcInVpZFwiOlwicGVyc29uXC85Z2xsYnI1cnF5MjV1bzg5bG85dGlubHJuXCJ9XX0ifV19LHsibmFtZSI6InNvcnRPcmRlciIsInZhbHVlcyI6W3sic3RyaW5nIjoiQXVmc3RlaWdlbmQifV19XX0</embeddedwidget></div>\n\n<div class=\"custom-set-leads-product\">\n<p>Product</p>\n<embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2c2aWZoZmVrbzI4dGIycjg4d28xaGQ1aGkiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0uZW1iZWRkZWRTZWFyY2hBc0xpc3QiLCJwcm9wZXJ0aWVzIjpbeyJuYW1lIjoic2VhcmNoIiwidmFsdWVzIjpbeyJzdHJpbmciOiJ7XCJmaWx0ZXJzXCI6W3tcInVpZFwiOlwicGVyc29uXC9hcTNqbWFvbHFmMTlvbXgyc3c1Y2d5MWhrXCJ9XX0ifV19LHsibmFtZSI6InNvcnRPcmRlciIsInZhbHVlcyI6W3sic3RyaW5nIjoiQXVmc3RlaWdlbmQifV19XX0</embeddedwidget></div>\n\n<div class=\"custom-set-leads-marketing\">\n<p>Marketing</p>\n<embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2c2aWZoZmVrbzI4dGIycjg4d28xaGQ1aGkiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0uZW1iZWRkZWRTZWFyY2hBc0xpc3QiLCJwcm9wZXJ0aWVzIjpbeyJuYW1lIjoic2VhcmNoIiwidmFsdWVzIjpbeyJzdHJpbmciOiJ7XCJmaWx0ZXJzXCI6W3tcInVpZFwiOlwicGVyc29uXC83eWkwczMzMXByZHhucHV2cGNlbmV4NzUyXCJ9XX0ifV19LHsibmFtZSI6InNvcnRPcmRlciIsInZhbHVlcyI6W3sic3RyaW5nIjoiQXVmc3RlaWdlbmQifV19XX0</embeddedwidget></div>\n\n<div class=\"custom-set-leads-engineering\">\n<p>Engineering</p>\n<embeddedwidget>eyJ3aWRnZXRJZCI6ImlkX2c2aWZoZmVrbzI4dGIycjg4d28xaGQ1aGkiLCJ3aWRnZXRUeXBlIjoiY2YucGxhdGZvcm0uZW1iZWRkZWRTZWFyY2hBc0xpc3QiLCJwcm9wZXJ0aWVzIjpbeyJuYW1lIjoic2VhcmNoIiwidmFsdWVzIjpbeyJzdHJpbmciOiJ7XCJmaWx0ZXJzXCI6W3tcInVpZFwiOlwicGVyc29uXC85cGRsZDlxeDJlaXhub3U3dnAzYjNhb2FyXCJ9XX0ifV19LHsibmFtZSI6InNvcnRPcmRlciIsInZhbHVlcyI6W3sic3RyaW5nIjoiQXVmc3RlaWdlbmQifV19XX0</embeddedwidget></div>\n</div>"},{"name":"localizedWidgetTitle","value":{"de":"Demo Set Leads","en":"Demo Set Leads"}}]}]}]}]},{"rows":[{"columns":[{"proportion":12,"widgets":[{"widgetType":"cf.cplace.visualizations.scriptingHighcharts","attributes":[{"name":"cf.cplace.visualization.dataSource","value":"search"},{"name":"cf.cplace.visualization.script","value":{"version":1,"script":"var cycle = embeddingPage;\nvar meetings = cycle.getIncomingPages('cf.cplace.solution.okr.meeting', 'cf.cplace.solution.okr.cycle');\nvar workshop;\ncplace.each(meetings, function(meeting) {\n  if (meeting.get('cf.cplace.solution.okr.meetingType') == \"Workshop\") {\n    workshop = meeting;\n  };\n})\n\nvar cycleNames = [];\nvar counterArray = [];\nvar row = 0;\nvar values = [];\nvar sortedPages = []\nvar seriesCyclePhase = [];\nvar seriesInputPhase = [];\nvar seriesWorkshop = [];\nvar seriesStrategy = [];\nvar lang = cplace.utils().getCurrentUser().getUserLanguage();\n\nvar messages = {\n  inputPhase: {\n    en: 'Input Phase ',\n    de: 'Input-Phase '\n  },\n  cyclePhase: {\n    en: 'Cycle Implementation Phase ',\n    de: 'Cycle Umsetzungs-Phase '\n  },\n  workshop: {\n    en: 'Workshop ',\n    de: 'Workshop '\n  },\n  strategy: {\n    en: 'Strategy Update ',\n    de: 'Strategie Update '\n  }\n};\n\n\nvar cycleName = cycle.getName();\nvar cycleStart = cycle.get('cf.cplace.solution.okr.start');\nvar cycleEnd = cycle.get('cf.cplace.solution.okr.end');\nvar workshopDate;\nif (workshop) {\n  workshopDate = workshop.get('cf.cplace.solution.okr.date');  \n}\n\nif (cycleStart && cycleEnd && workshop) {\n\n  cycleNames.push(cycleName);\n  seriesCyclePhase.push({\n    x: cycleStart.getMillis(),\n    x2: cycleEnd.getMillis(),\n    y: row,\n    color: '#006ae5',\n    dataLabels: {\n      format: messages.cyclePhase[lang] + cycleName\n    },\n    name: messages.cyclePhase[lang] + cycleName\n  });\n  seriesInputPhase.push({\n    x: workshopDate.minusDays(21).getMillis(),\n    x2: workshopDate.getMillis(),\n    color: '#151821',\n    y: row,\n    dataLabels: {\n      format: messages.inputPhase[lang]\n    },\n    name: messages.inputPhase[lang] + cycleName\n  });\n  seriesWorkshop.push({\n    x: workshopDate.getMillis(),\n    y: row,\n    date: cycleStart.toString(\"MMM/dd\"),\n    dataLabels: {\n      format: messages.workshop[lang]\n    },\n    color: '#a5ffd6',\n    name: messages.inputPhase[lang]\n  })\n  seriesStrategy.push({\n    x: cycleEnd.minusDays(28).getMillis(),\n    y: row,\n    date: cycleStart.toString(\"MMM/dd\"),\n    color: '#a5ffd6',\n    dataLabels: {\n      format: messages.strategy[lang]\n    },\n    name: messages.strategy[lang]\n  })\n\n\n}\n\nvar chart = {\n  chart: {\n    type: 'xrange',\n    zoomType: 'x',\n\tbackgroundColor: '#F2F4FA',\n  },\n  legend: {\n    enabled: false\n  },\n  title: {\n    text: ''\n  },\n  xAxis: {\n    type: 'datetime',\n    plotLines: [{\n      value: new Date().setHours(0),\n      dashStyle: 'dash',\n      width: 2,\n      zIndex: 5,\n    }],\n    lineColor: '#F2F4FA',\n    tickLength: 1,\n  },\n  yAxis: {\n    title: '',\n    labels: {\n      enabled: false\n    },\n    gridLineColor: 'rgba(255,255,255,0)',\n    lineColor: '#F2F4FA',\n    categories: cycleNames,\n    reversed: true,\n    max: 0\n  },\n  plotOptions: {\n    series: {\n      borderRadius: 5,\n      dataLabels: {\n        enabled: true\n      }\n    }\n  },\n  series: [{\n    name: '',\n    data: seriesCyclePhase,\n    dataLabels: {\n      enabled: true\n    }\n  }, {\n    name: '',\n    data: seriesInputPhase,\n    dataLabels: {\n      enabled: true\n    }\n  }, {\n    type: 'scatter',\n    stickyTracking: false,\n    marker: {\n      enabled: true,\n      symbol: 'diamond',\n      lineColor: 'white',\n      lineWidth: 1,\n      radius: 13\n    },\n    data: seriesWorkshop\n  }, {\n    type: 'scatter',\n    stickyTracking: false,\n    marker: {\n      enabled: true,\n      symbol: 'diamond',\n      lineColor: 'white',\n      lineWidth: 1,\n      radius: 13\n    },\n    data: seriesStrategy\n  }],\n  tooltip: {\n    enabled: false\n  }\n};\nreturn chart","upgradeAck":true,"description":""}},{"name":"cf.cplace.visualization.search","value":{"filters":[{"relativeUid":"embeddingCustomEntity"}]}},{"name":"cf.cplace.visualization.showFrame","value":false},{"name":"height","value":150.0},{"name":"sortOrder","value":"Aufsteigend"},{"name":"title","value":{"de":"Cycle Timeline","en":"Cycle Timeline"}}]}]}]},{"columns":[{"proportion":8,"widgets":[{"widgetType":"cf.cplace.treeTableWidget","attributes":[{"name":"cf.cplace.platform.attributes","value":["s{\"parentType\":\"cf.cplace.solution.okr.objective\",\"incomingType\":\"cf.cplace.solution.okr.keyResult\",\"name\":\"cf.cplace.solution.okr.objective\"}","s{\"parentType\":\"cf.cplace.solution.okr.set\",\"incomingType\":\"cf.cplace.solution.okr.objective\",\"name\":\"cf.cplace.solution.okr.set\"}","s{\"parentType\":\"cf.cplace.solution.okr.cycle\",\"incomingType\":\"cf.cplace.solution.okr.set\",\"name\":\"cf.cplace.solution.okr.cycle\"}"]},{"name":"cf.cplace.platform.defaultDepth","value":2.0},{"name":"cf.cplace.platform.search","value":{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.okr.cycle","cf.cplace.solution.okr.keyResult","cf.cplace.solution.okr.objective","cf.cplace.solution.okr.set"]}]}},{"name":"columns","value":[{"name":"customType","visible":true},{"name":"'cf.cplace.solution.okr.level'","visible":true},{"name":"'cf.cplace.solution.okr.confidenceLevel'","visible":true},{"name":"'cf.cplace.solution.okr.gradingForecast'","visible":true},{"name":"'cf.cplace.solution.okr.bigSupport'","visible":true},{"name":"'cf.cplace.solution.okr.smallSupport'","visible":true},{"name":"'cf.cplace.solution.okr.cycle'","visible":false},{"name":"'cf.cplace.solution.okr.setLead'","visible":false},{"name":"'cf.cplace.solution.okr.setContributors'","visible":false},{"name":"'cf.cplace.solution.okr.status'","visible":false},{"name":"'cf.cplace.solution.okr.organizationalUnit'","visible":false},{"name":"'cf.cplace.solution.okr.number'","visible":false},{"name":"'cf.cplace.solution.okr.title'","visible":false},{"name":"'cf.cplace.solution.okr.progressIndicator'","visible":false},{"name":"'cf.cplace.solution.okr.objective'","visible":false},{"name":"'cf.cplace.solution.okr.progress'","visible":false},{"name":"'cf.cplace.solution.okr.year'","visible":false},{"name":"'cf.cplace.solution.okr.quarter'","visible":false},{"name":"'cf.cplace.solution.okr.cyclesDashboard'","visible":false},{"name":"'cf.cplace.solution.okr.set'","visible":false},{"name":"'cf.cplace.solution.okr.motivation'","visible":false},{"name":"'cf.cplace.solution.okr.target'","visible":false},{"name":"'cf.cplace.solution.okr.deepInsights'","visible":false},{"name":"'cf.cplace.solution.okr.accomplished'","visible":false},{"name":"'cf.cplace.solution.okr.conclusion'","visible":false}]},{"name":"title","value":{"de":"Objectives & Key Results","en":"Objectives & Key Results"}}]}]},{"proportion":4,"widgets":[{"widgetType":"cf.cplace.visualizations.scriptingHighcharts","attributes":[{"name":"cf.cplace.visualization.dataSource","value":"search"},{"name":"cf.cplace.visualization.script","value":{"version":1,"script":"/// <reference path=\"./typeDefinitions/cplaceJS_type.js\" />\n/**\n * Template for Highchart\n * \n * Instructions:\n * - configure a highchart widget with a search or connected table\n * - look in this script for the following line: !!!! CHANGE FROM HERE !!!! and change your options there\n * - the main options are: BASE_ATTRIBUTE and CHART_TYPE_SELECTED\n * \n * TODO:\n * - Color Attribute\n * - builtin Attributes\n * - more charts\n * - date format for series / data points\n * - multi language\n * - Alias label for internal names\n * - sort of series\n *   \n * \n * \n * @author Bastian Rang <bastian.rang@collaboration-factory.de>\n * @version 2021-08-05\n */\n\n/**\n * ======================\n * LOG AND DEBUG SETTINGS\n * ======================\n */\n const DEBUG = true;\n\n /**\n  * Hint: set a declarative name for all of your logs\n  */\n cplace.setLogName(\"highchart-template\");\n \n /**\n  * ===================\n  * CONFIGURATION STAGE\n  * ===================\n  */\n \n /**\n  * DO NOT CHANGE THESE CONFIGURATIONS WITHOUT STRONG REASON !!!!!\n  */\n const CHART_DEFINITION = {\n     PIE: {\n         chart: {\n             type: 'pie'\n         },\n         isPercentageAvailable: true,\n         isStackable: false,\n         hasFloatingTitle: false\n     },\n     SEMICIRCLE: {\n         chart: {\n             type: 'pie'\n         },\n         plotOptions: {\n             startAngle: -90,\n             endAngle: 90,\n             center: ['50%', '75%'],\n             size: '110%',\n             innerSize: '50%'\n         },\n         isPercentageAvailable: true,\n         isStackable: false,\n         hasFloatingTitle: false\n     },\n     BAR: {\n         chart: {\n             type: 'bar'\n         },\n         plotOptions: {\n             colorByPoint: true\n         },\n         isPercentageAvailable: true,\n         isStackable: true,\n         hasFloatingTitle: true\n     },\n     COLUMN: {\n         chart: {\n             type: 'column'\n         },\n         plotOptions: {\n             colorByPoint: true\n         },\n         isPercentageAvailable: true,\n         isStackable: true,\n         hasFloatingTitle: true\n     },\n }\n \n \n \n /**\n  * ==================================================================================\n  * !!!! CHANGE FROM HERE !!!!\n  */\n \n /**\n  * Optional: Show a title inside of the chart area\n  */\n const CHART_TITLE = ''\n \n /**\n  * Set to null or leave blank to use the Pagename\n  * \n  * TODO builtinFeatureValue starts with underscore: '_creator'\n  */\n const BASE_ATTRIBUTE = 'cf.cplace.solution.okr.progressIndicator';\n \n /**\n  * Optional: Stacking is only possible for bar and column charts\n  * \n  */\n const STACK_ATTRIBUTE = null;\n \n /**\n  * Optional: Define an attribute of the page that acts as weight. If null, each entry has a weight of 1.\n  * The weight is used as sum of each datapoint.\n  */\n const WEIGHT_ATTRIBUTE = null;\n \n /**\n  * Define the base type of the chart: \n  * - CHART_DEFINITION.PIE\n  * - CHART_DEFINITION.SEMICIRCLE\n  * - CHART_DEFINITION.BAR\n  * - CHART_DEFINITION.COLUMN\n  */\n const CHART_TYPE_SELECTED = CHART_DEFINITION.PIE;\n \n /**\n  * Define colors for the chart\n  */\n const CHART_COLORS = {\n     BACKGROUND: '#F2F4FA',\n     TEXT: 'var(--text-color)',\n     SERIES: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a'],\n     CATEGORY: {\n         '#15 green': '#AEDB3C',\n         '#25 yellow': '#FFBA00',\n         '#35 red': '#DB0F35',\n         '#45 outdated': '#bcbcbc'\n     }\n }\n \n /**\n  * @type {Boolean} sort axes ascending (true) or descending (false)\n  */\n const CHART_SORT_ASCENDING = true;\n \n /**\n  * @type {Boolean} show legend under chart\n  */\n const CHART_SHOW_LEGEND = false;\n \n /**\n  * @type {Boolean} show labels on all datapoints\n  */\n const CHART_SHOW_LABELS = false;\n \n /**\n  * @type {Boolean} show values as percentage\n  */\n const CHART_SHOW_PERCENTAGE = false;\n \n /**\n  * @type {null|String} override tooltip text\n  * - use {point.y} as placeholder for absolute values\n  * - use {point.percentage:.1f}% as placeholder for percantage\n  * - use {point.stackTotal} for sum of stack\n  * - use {point.name} for name of data point\n  * - use {series.name} for name of data series\n  */\n const CHART_TOOLTIP_OVERRIDE = null;\n \n \n /**\n  * DO NOT CHANGE AFTER THIS LINE\n  * ==================================================================================\n  */\n \n const CHART_IS_STACKED = !!STACK_ATTRIBUTE && CHART_TYPE_SELECTED.isStackable;\n \n const CHART_POINT_FORMAT = (CHART_TYPE_SELECTED.isPercentageAvailable && CHART_SHOW_PERCENTAGE) ? '{point.percentage:.1f}%' : '{point.y}'\n \n /**\n  * ====================\n  * INITIALIZATION STAGE\n  * ====================\n  */\n \n let config = {\n     title: {\n         text: CHART_TITLE,\n         align: 'center',\n         verticalAlign: 'middle',\n         margin: 0,\n         y: 10,\n         useHtml: true,\n         style: {\n             color: CHART_COLORS.TEXT,\n             fontSize: \"2em\",\n             fontWeight: \"bold\"\n         }\n     },\n     chart: CHART_TYPE_SELECTED.chart,\n     legend: {\n         enabled: CHART_SHOW_LEGEND,\n         layout: 'horizontal',\n         align: 'center',\n         verticalAlign: 'bottom',\n         itemStyle: {\n             color: CHART_COLORS.TEXT,\n             fontWeight: \"normal\"\n         }\n     },\n     pane: {\n         size: '100%'\n     },\n     tooltip: {\n         pointFormat: '<b>' + CHART_POINT_FORMAT + '</b>'\n     },\n     plotOptions: {\n         pie: {\n            borderWidth: 10,\n            borderColor: 'var(--body-bg)',\n         },\n         series: {\n             showInLegend: CHART_SHOW_LEGEND,\n             dataLabels: {\n                 enabled: CHART_SHOW_LABELS,\n                 format: '<b>{point.name}</b>: ' + CHART_POINT_FORMAT\n             },\n             cursor: 'pointer',\n             stacking: (CHART_IS_STACKED && CHART_SHOW_PERCENTAGE) ? 'percent' : CHART_IS_STACKED\n         }\n     },\n     colors: CHART_COLORS.SERIES,\n     series: [],\n     xAxis: {\n         type: 'category'\n     },\n     yAxis: {\n         allowDecimals: false,\n         title: ''\n     }\n }\n \n config.chart.backgroundColor = CHART_COLORS.BACKGROUND\n config.chart.spacingBottom = 0\n config.chart.spacingTop = 0\n \n if (CHART_TITLE && CHART_SHOW_LEGEND && CHART_TYPE_SELECTED.hasFloatingTitle) {\n     config.title.verticalAlign = 'top'\n }\n \n if (CHART_TYPE_SELECTED.plotOptions) {\n     config.plotOptions[CHART_TYPE_SELECTED.chart.type] = CHART_TYPE_SELECTED.plotOptions;\n }\n \n if (CHART_IS_STACKED) {\n     config.plotOptions[CHART_TYPE_SELECTED.chart.type].colorByPoint = false;\n     config.tooltip.pointFormat = '{series.name}: ' + CHART_POINT_FORMAT + '<br/>Total: {point.stackTotal}'\n     config.plotOptions.series.dataLabels.format = '{series.name}: ' + CHART_POINT_FORMAT\n }\n \n if (CHART_TOOLTIP_OVERRIDE !== null) {\n     config.tooltip.pointFormat = CHART_TOOLTIP_OVERRIDE;\n }\n \n \n /**\n  * ================\n  * PROCESSING STAGE\n  * ================ \n  */\n if (pages.length === 0) {\n     return config\n }\n \n let datasetSize = pages.length;\n let series = [];\n let series_labels = {};\n let categories = {};\n let data = {};\n let pageCounter = 0;\n pages.forEach(function (page) {\n     let value = getValueAndLabelOfAttribute(page, BASE_ATTRIBUTE)\n     let weight = 1;\n     if (value === null) {\n         return\n     }\n \n     let series = getValueAndLabelOfAttribute(page, STACK_ATTRIBUTE);\n \n     if (!CHART_IS_STACKED || series === null) {\n         series = {\n             value: '',\n             label: CHART_TITLE\n         }\n     }\n \n     if (WEIGHT_ATTRIBUTE) {\n         weight = page.get(WEIGHT_ATTRIBUTE) || 1\n     }\n \n     if (value.length) {\n         value.forEach(function (item) {\n             addSeriesData(item, weight, series, data, categories, series_labels)\n         })\n     } else {\n         addSeriesData(value, weight, series, data, categories, series_labels)\n     }\n     pageCounter++;\n });\n\n // This will display the number of pages in the center\n config.title.text += pageCounter;\n \n /**\n  * TODO Sort stacked series, too\n  */\n \n Object.keys(series_labels).sort().forEach(function (series_label) {\n     series_labels[series_label] = series.length\n \n     series.push({\n         name: series_label,\n         type: CHART_TYPE_SELECTED.chart.type,\n         data: [],\n         innerSize: '50%'\n     })\n \n })\n \n Object.keys(data).forEach(function (key) {\n     let currentDataItem = {\n         name: data[key].name,\n         y: data[key].count\n     }\n     let seriesId = series_labels[data[key].series]\n \n     if (CHART_COLORS.CATEGORY.hasOwnProperty(data[key].series_internal)) {\n         series[seriesId].color = CHART_COLORS.CATEGORY[data[key].series_internal]\n     } else if (CHART_COLORS.CATEGORY.hasOwnProperty(data[key].internal)) {\n         currentDataItem.color = CHART_COLORS.CATEGORY[data[key].internal]\n     } else if (CHART_COLORS.CATEGORY.hasOwnProperty(data[key].series)) {\n         series[seriesId].color = CHART_COLORS.CATEGORY[data[key].series]\n     } else if (CHART_COLORS.CATEGORY.hasOwnProperty(data[key].name)) {\n         currentDataItem.color = CHART_COLORS.CATEGORY[data[key].name]\n     }\n \n     series[seriesId].data.push(currentDataItem)\n })\n \n /**\n  * Add empty entries to series and sort them\n  */\n  let allDataKeys = [];\n  Object.keys(data).forEach(function (key) {\n      let label = data[key].name;\n      if (allDataKeys.indexOf(label) !== -1) {\n          return;\n      }\n  \n      series.forEach(function (serie) {\n          if (!serie.data.some(function (data) {\n                  return data.name === label\n              })) {\n              serie.data.push({\n                  name: label,\n                  y: 0\n              })\n          }\n      })\n      allDataKeys.push(label)\n  })\n \n /**\n  * sort series.data by name\n  */\n series.forEach(function (serie) {\n     serie.data.sort(function (a, b) {\n         if (!a.hasOwnProperty('name') || a.name == b.name) {\n             return 0\n         }\n         /**\n          * sort depending on CHART_SORT_ASCENDING\n          */\n         return ((CHART_SORT_ASCENDING && a.name > b.name) || (!CHART_SORT_ASCENDING && a.name < b.name)) ? 1 : -1\n     })\n })\n \n /**\n  * ============\n  * OUTPUT STAGE\n  * ============ \n  */\n \n config.series = series;\n return config;\n \n /**\n  * ==================\n  * BUSINESS FUNCTIONS\n  * ==================\n  */\n \n /**\n  * ================\n  * HELPER FUNCTIONS\n  * ================\n  */\n \n /**\n  * \n  * @param {object} value \n  * @param {Number} weight \n  * @param {object} series \n  * @param {object[]} data \n  * @param {object[]} categories \n  * @param {String[]} series_labels \n  */\n function addSeriesData(value, weight, series, data, categories, series_labels) {\n     let key = value.value + series.value;\n \n     if (data[key] === undefined) {\n         data[key] = {\n             count: 0,\n             name: value.label,\n             internal: value.value,\n             series: series.label,\n             series_internal: series.value\n         }\n     }\n \n     data[key].count += weight || 1;\n \n     if (!categories.hasOwnProperty(data[key].name)) {\n         categories[data[key].name] = 0\n     }\n \n     if (!series_labels.hasOwnProperty(data[key].series)) {\n         series_labels[data[key].series] = 0\n     }\n }\n \n \n /**\n  * \n  * @param {Page} page \n  * @param {object} attribute \n  * @returns \n  */\n function getValueAndLabelOfAttribute(page, attribute) {\n     let result = null;\n     if (!page) {\n         return result;\n     }\n     if (!attribute) {\n         return {\n             value: page.getRealUid(),\n             label: page.getName()\n         };\n     }\n \n     let value = page.get(attribute, false);\n     if (value === null) {\n         return result;\n     }\n     let value_label = page.get(attribute, true) || value;\n \n     let className = typeof value === 'object' ? String(value.getClass()) : 'String'\n \n     switch (className) {\n         case 'String':\n         case 'class java.lang.String':\n             result = {\n                 value: value,\n                 label: value_label\n             }\n             break;\n         case 'class cf.cplace.platform.scripting.api.wrapper.entity.WrappedGroup':\n         case 'class cf.cplace.platform.scripting.api.wrapper.entity.WrappedPerson':\n         case 'class cf.cplace.platform.scripting.api.wrapper.entity.WrappedPage':\n             result = {\n                 value: value.getRealUid(),\n                 label: value.getName()\n             }\n             break;\n         case 'class java.util.ArrayList':\n         case 'class com.google.common.collect.SingletonImmutableList':\n         case 'class com.google.common.collect.RegularImmutableList':\n             /**\n              * TODO Multi-Value\n              */\n             result = [];\n             cplace.each(value, function (item) {\n                 if (typeof item !== 'object' || String(item.getClass()) === 'class java.lang.String') {\n                     /**\n                      * FIXME enum label / enum internal name\n                      */\n                     result.push({\n                         value: item,\n                         label: item\n                     })\n                 } else {\n                     result.push({\n                         value: item.getRealUid(),\n                         label: item.getName()\n                     })\n                 }\n             })\n             break;\n         default:\n             /**\n              * TODO Reference\n              */\n             log('Class of ' + value + ' is \"' + value.class + '\"')\n             log(typeof value.class)\n             log(typeof value)\n     }\n \n     return result\n }\n \n \n /**\n  * Log to cplace\n  * @param {any} text \n  */\n function log(text) {\n     if (!DEBUG) {\n         return\n     }\n     let logOutput = (typeof text !== 'string') ? JSON.stringify(text) : text;\n \n     cplace.log(logOutput);\n }","upgradeAck":true,"description":""}},{"name":"cf.cplace.visualization.search","value":{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.okr.keyResult"]},{"relativeCustomReference":"cf.cplace.solution.okr.cycle","referenceOperator":"embeddingCustomEntity"}]}},{"name":"cf.cplace.visualization.showFrame","value":false},{"name":"height","value":180.0},{"name":"sortOrder","value":"Aufsteigend"},{"name":"title","value":{"de":"Key Results Donut Chart","en":"Key Results Donut Chart"}}]},{"widgetType":"cf.cplace.demoWidgets.demoRichString","attributes":[{"name":"content","value":"<p style=\"text-align: center\"><strong><img alt=\"On track\" src=\"https://solution-templates.cplace.de/okr/__bjyw0htwau60j0x3936bdi52f/icons/enumeration/circle-003-green.svg\" />&nbsp;On track&nbsp;<img alt=\"Progressing\" src=\"https://solution-templates.cplace.de/okr/__bjyw0htwau60j0x3936bdi52f/icons/enumeration/circle-002-yellow.svg\" />&nbsp;Progressing<br />\n<img alt=\"Off track\" src=\"https://solution-templates.cplace.de/okr/__bjyw0htwau60j0x3936bdi52f/icons/enumeration/circle-001-red.svg\" />&nbsp;Off track&nbsp;</strong><img alt=\"Outdated\" src=\"https://solution-templates.cplace.de/okr/__bjyw0htwau60j0x3936bdi52f/icons/enumeration/circle-000-gray.svg\" />&nbsp;<strong>Outdated</strong></p>"},{"name":"localizedWidgetTitle","value":{"de":"Legende","en":"Legend"}}]}]}]}]},{"rows":[{"columns":[{"proportion":12,"widgets":[{"widgetType":"cf.platform.embeddedSearchAsTable","attributes":[{"name":"columns","value":[{"name":"'cf.cplace.solution.okr.progressIndicator'","visible":true},{"name":"'cf.cplace.solution.okr.confidenceLevel'","visible":true},{"name":"'cf.cplace.solution.okr.gradingForecast'","visible":true},{"name":"'cf.cplace.solution.okr.smallSupport'","visible":true},{"name":"'cf.cplace.solution.okr.bigSupport'","visible":true},{"name":"'cf.cplace.solution.okr.number'","visible":false},{"name":"'cf.cplace.solution.okr.title'","visible":false},{"name":"'cf.cplace.solution.okr.giveBigSupport'","visible":false},{"name":"'cf.cplace.solution.okr.receiveBigSupport'","visible":false},{"name":"'cf.cplace.solution.okr.objective'","visible":false},{"name":"'cf.cplace.solution.okr.progress'","visible":false},{"name":"'cf.cplace.solution.okr.set'","visible":false},{"name":"'cf.cplace.solution.okr.cycle'","visible":false},{"name":"'cf.cplace.solution.okr.organizationalUnit'","visible":false},{"name":"'cf.cplace.solution.okr.lastUpdate'","visible":false},{"name":"readers","visible":false},{"name":"content","visible":false},{"name":"createdAt","visible":false},{"name":"creator","visible":false},{"name":"customType","visible":false},{"name":"deputies","visible":false},{"name":"deputiesAreDefault","visible":false},{"name":"entityMirrorStatus","visible":false},{"name":"hasSource","visible":false},{"name":"isShared","visible":false},{"name":"layoutName","visible":false},{"name":"localizedName","visible":false},{"name":"modifiedAt","visible":false},{"name":"modifier","visible":false},{"name":"name","visible":false},{"name":"owner","visible":false},{"name":"ownerIsDefault","visible":false},{"name":"pageInPackageInclusion","visible":false},{"name":"readersAreDefault","visible":false},{"name":"writers","visible":false},{"name":"writersAreDefault","visible":false}]},{"name":"groupColumn","value":"'cf.cplace.solution.okr.objective'"},{"name":"groupOrder","value":"asc"},{"name":"height","value":450.0},{"name":"hideNames","value":false},{"name":"hideTableLinks","value":false},{"name":"search","value":{"filters":[{"relativeSpace":"true"},{"types":["cf.cplace.solution.okr.keyResult"]},{"relativeCustomReference":"cf.cplace.solution.okr.set","referenceOperator":"embeddingCustomEntity"}]}},{"name":"showNewButton","value":"Yes"},{"name":"showTableActions","value":true},{"name":"showTableHeader","value":true},{"name":"singleSpaced","value":true},{"name":"title","value":{"de":"Alle Key Results","en":"All Key Results"}}]}]}]}]}]
```

Explain these layouts to me.

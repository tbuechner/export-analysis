{
    "type": "cf.cplace.platform.ChangeListener",
    "code": "/**\n * Erstelle Progress Seite beim anlegen eines Key Results\n * Watched Attributes: 'cf.cplace.solution.okr.title'\n * @LukasScheiring\n */\n\n/**\n * ======================\n * LOG AND DEBUG SETTINGS\n * ======================\n */\n const DEBUG = true;\n\n /**\n  * Hint: set a declarative name for all of your logs\n  */\n cplace.setLogName(\"Create Progress Page\");\n \n /**\n  * ===================\n  * CONFIGURATION STAGE\n  * ===================\n  *\n  */\n \n const ATTRIBUTES = {\n     KEY_RESULT: {\n         TYPE: 'cf.cplace.solution.okr.keyResult',\n         ATTR: {\n             TITLE: 'cf.cplace.solution.okr.title',\n             PROGRESS: 'cf.cplace.solution.okr.progress',\n         },\n     },\n     PROGRESS: {\n         TYPE: 'cf.cplace.solution.okr.progress',\n         ATTR: {\n            KEY_RESULT: 'cf.cplace.solution.okr.keyResult'\n         }\n     }\n\n }\n \n /**\n  * ====================\n  * INITIALIZATION STAGE\n  * ====================\n  */\n const page = changeEvent.getEntity();\n \n const keyResultProgress = page.get(ATTRIBUTES.KEY_RESULT.ATTR.PROGRESS);\n const currentUser = cplace.utils().getCurrentUser();\n \n\n // Lege Progress Objekt an\n if (pageIsNew() || keyResultProgress === null) {\n    let ca = {\n      'cf.cplace.solution.okr.keyResult' : page\n    };\n   \n   // ca['cf.cplace.solution.okr.keyResult'] = page;\n   cplace.log('page'+page);\n   cplace.log('ca'+JSON.stringify(ca));\n    let newProgress = cplace.actions().createPage( {\n        customType: ATTRIBUTES.PROGRESS.TYPE,\n        space: page.getSpaceId(),\n        customAttributes: ca,\n        }, {\n        setGeneratedName: true\n    });\n    \n    //\u00c4ndere Progress von Key Result auf neues Objekt\n    let ca2 = {};\n    ca2[ATTRIBUTES.KEY_RESULT.ATTR.PROGRESS] = newProgress;\n    cplace.actions().updatePage(page, {\n        customAttributes: ca2\n    });\n    page.registerAttributeForRefresh(ATTRIBUTES.KEY_RESULT.ATTR.PROGRESS);\n}\n return;\n \n \n /**\n  * ==================\n  * BUSINESS FUNCTIONS\n  * ==================\n  */\n \n  //Checke ob Seite neu angelegt wurde\n function pageIsNew () {\n     let bool = changeEvent.isNew();\n     return bool;\n };\n \n \n \n /**\n  * ================\n  * HELPER FUNCTIONS\n  * ================\n  */\n \n /**\n  * Log to cplace\n  * @param {any} text \n  */\n function log(text) {\n     if (!DEBUG) {\n         return\n     }    \n     let logOutput = (typeof text !== 'string') ? JSON.stringify(text) : text;\n \n     cplace.log(logOutput);\n }",
    "attributes": [
        "cf.cplace.solution.okr.title"
    ],
    "type_name": "cf.cplace.solution.okr.keyResult",
    "counter": 2
}
{
    "type": "custom_attribute",
    "code": "/// <reference path=\"../../typeDefinitions/cplaceJS_type.js\" />\n\n //--------------------------------------------------------------------------------------//\n //                                       CONFIGURATION                                  //\n //--------------------------------------------------------------------------------------//\n const DEBUG = true;\n\n const preventChange = false;\n\n //--------------------------------------------------------------------------------------//\n //                                       HELPER FUNCTIONS                               //\n //--------------------------------------------------------------------------------------//\n\n\n /**\n  * Log to cplace\n  * @param {any} text\n  */\n  function log(text) {\n    if (!DEBUG) {\n        return\n    }\n    let logOutput = (typeof text !== 'string') ? JSON.stringify(text) : text;\n\n    cplace.log(logOutput);\n}\n\n //--------------------------------------------------------------------------------------//\n //                                       BUSINESS FUNCTIONS                               //\n //--------------------------------------------------------------------------------------//\n\n function updateCurrentCycle(page, settingsPage) {\n   let editorGroups = settingsPage.get('cf.cplace.solution.okr.editors');\n\n   if (preventChange) {\n     return;\n   }\n    cplace.actions().updatePage(page, {\n        writers:  {\n            'additiveInheritance': false,\n            '-': editorGroups // remove these editors\n        },\n        customAttributes: {\n            'cf.cplace.solution.okr.status': '#35 Closed'\n        }\n    });\n }\n\n function updateNextCycle(page) {\n\n  if (preventChange) {\n    return;\n  }\n    setInitialDateOnKRs(page);\n    cplace.actions().updatePage(page, {\n        customAttributes: {\n            'cf.cplace.solution.okr.status': '#25 Current'\n        }\n    });\n }\n\n function setInitialDateOnKRs(cycle) {\n    let results = cycle.getIncomingPages('cf.cplace.solution.okr.progress', 'cf.cplace.solution.okr.cycle');\n\n    let now = new DateTime();\n    results.forEach(function(page) {\n      if (preventChange) {\n        return;\n      }\n        cplace.actions().updatePage(page, {\n            customAttributes: {\n                'cf.cplace.solution.okr.lastUpdate': now\n            }\n        });\n    });\n }\n\n\nreturn {\n    // \"checkAccess\" function will check if the button should be enabled given the current context\n    checkAccess: function() {\n        return true; // Allowed for all users\n    },\n    // \"call\" function contains the actual business logic and can optionally return an object\n    // containing a success message\n    call: function() {\n        log('Starting switch-to-next-cycle-script');\n\n        let settingsPage = embeddingPage.get('cf.cplace.solution.okr.settings');\n        log('Settings:' + settingsPage.getName());\n\n        let currentCycle = settingsPage.get('cf.cplace.solution.okr.currentCycle');\n        let nextCycle = additionalData.get('cf.cplace.solution.okr.nextCycle');\n\n        if (!currentCycle) {\n            return {\n                message: {\n                    de: 'Fehler in den Einstellungen, der aktuelle Zyklus ist nicht bekannt.',\n                    en: 'Error found in settings - the current cycle is not set.'\n                }\n            }\n        }\n\n        log('Current: ' + currentCycle.getName());\n        log('Next: ' + nextCycle.getName());\n\n        updateCurrentCycle(currentCycle, settingsPage);\n        updateNextCycle(nextCycle);\n\n\n        // Everything done, update internal reference\n        log('Update reference to next cycle');\n\n        if (!preventChange) {\n          cplace.actions().updatePage(settingsPage, {\n            customAttributes: {\n              'cf.cplace.solution.okr.currentCycle': nextCycle\n            }\n          });\n        }\n\n        return {\n           message: {\n             de: 'Erfolgreich beendet',\n             en: 'Finished successfully'\n           }\n        }\n    }\n}",
    "attributes": null,
    "type_name": null,
    "counter": 44
}
{
    "type": "cf.cplace.platform.ChangeListener",
    "code": "/*\n*Changelistener\n*Type:Keyresult\n*Description: whenever the progressIndicator of the keyResult is changed this changelistener updates the confidencelvel\n*Author: Laxmi udapudi\n*/\nconst KEY_RESULT = {\n  TYPE: 'cf.cplace.solution.okr.keyResult',\n  ATTR: {\n    TITLE: 'cf.cplace.solution.okr.title',\n    PROGRESS: 'cf.cplace.solution.okr.progress',\n    CONFIDENCELEVEL: 'cf.cplace.solution.okr.confidenceLevel',\n    GRADING_FORECAST: 'cf.cplace.solution.okr.gradingForecast',\n    PROGRESS_INDICATOR: 'cf.cplace.solution.okr.progressIndicator'\n  }\n}\nconst PROGRESS = {\n  TYPE: 'cf.cplace.solution.okr.progress',\n  ATTR: {\n    KEY_RESULT: 'cf.cplace.solution.okr.keyResult',\n    CONFIDENCELEVEL: 'cf.cplace.solution.okr.confidenceLevel',\n    GRADING_FORECAST: 'cf.cplace.solution.okr.gradingForecast',\n    PROGRESS_INDICATOR: 'cf.cplace.solution.okr.progressIndicator'\n  }\n}\ncplace.setLogName('sync_ProgressIndicator_on_progress');\n\nfunction main() {\n  let keyResult = changeEvent.getEntity();\n  let progressIndicator = keyResult.get(KEY_RESULT.ATTR.PROGRESS_INDICATOR);\n  let confidenceLevel = keyResult.get(KEY_RESULT.ATTR.CONFIDENCELEVEL);\n\n  switch (progressIndicator) {\n    case '#45 outdated':\n      // Do nothing\n      break;\n    case '#15 green':\n      if (parseFloat(confidenceLevel) < 0.7) {\n        updatePage(keyResult, {\n          'cf.cplace.solution.okr.confidenceLevel': '0.7'\n        })\n      }\n      break;\n    case '#25 yellow':\n      if (parseFloat(confidenceLevel) < 0.4 || parseFloat(confidenceLevel) > 0.6) {\n        updatePage(keyResult, {\n          'cf.cplace.solution.okr.confidenceLevel': '0.5'\n        })\n      }\n      break;\n    case '#35 red':\n      if (parseFloat(confidenceLevel) > 0.3) {\n        updatePage(keyResult, {\n          'cf.cplace.solution.okr.confidenceLevel': '0.3'\n        })\n      }\n      break;\n    default:\n      updatePage(keyResult, {\n        'cf.cplace.solution.okr.confidenceLevel': '1'\n      })\n      break;\n  }\n}\n\nmain();\n/*\n*Update the cplace page whenever there is change in attributes\n* @param {Page<T>} page\n* @param {(keyof CplaceTypes[T])[]} attributes\n*/\nfunction updatePage(page, customAttributes) {\n  let key = null;\n  for (key in customAttributes) {\n    if (customAttributes.hasOwnProperty(key)) {\n      page.registerAttributeForRefresh(key)\n    }\n  }\n  return cplace.actions().updatePage(page, {\n    customAttributes: customAttributes,\n  }\n    , {\n      setGeneratedName: true\n    }\n  );\n}",
    "attributes": [
        "cf.cplace.solution.okr.progressIndicator"
    ],
    "type_name": "cf.cplace.solution.okr.keyResult",
    "counter": 6
}

######### start - content of file "old-send-link/SendLinkHandler.java" #########

package cf.cplace.platform.handler.page;

@CplaceApi
public class SendLinkHandler extends Handler {

    public static final Message targetLabel = new Message() {
    };

    private CustomSessionEntity data;
    private CustomEntity entity;

    @Override
    public void checkAccess() {
        checkLoggedIn();

        String id = Parameters.getString("id");
        if (id != null) {
            data = CustomSessionEntity.SCHEMA.getEntityAndCheckMayEdit(id);
            entity = data.getCustomReference(SEND_LINK_DATA.ENTITY.name);
        } else {
            String linkId = Parameters.getString("linkId");
            entity = CustomEntity.getCustomEntityByUidNotNull(linkId);
        }
    }

    @Override
    public Station doBusinessLogic() {
        if (data == null) {
            data = CustomSessionEntity.SCHEMA.create(SEND_LINK_DATA.TYPE);
            String messageBodyPart = Template.getString(new SendLinkMailBody(entity, SessionLocal.getUser().getValueOfNameProperty(), Parameters.getString("activeTabsInfo")));
            data.set(SEND_LINK_DATA.MESSAGE, messageBodyPart);
            data.setCustomReference(SEND_LINK_DATA.ENTITY.name, entity);
            data.set(SEND_LINK_DATA.SENDER, SessionLocal.getUser());
        }
        return SHOW;
    }

    final Station SHOW = new JsonPage() {
        @Override
        public void putSubstitutions(Template template) {
            template.put("submitUrl", PrintSubstitution.printing(Escaping.htmlAttribute, () -> Forwarder.getFullUrl(SubmitSendLinkHandler.class, data)));
        }

        @Override
        public CustomSessionEntity getScopeObject() {
            return data;
        }

    };

    @Nonnull
    @Override
    public Modality getModality() {
        return Modality.LARGE;
    }

    @Override
    public String getActionIconName() {
        return "fa-paper-plane";
    }

    @Override
    public Message getTargetLabel() {
        return targetLabel;
    }
}

######### end - content of file "old-send-link/SendLinkHandler.java" #########

######### start - content of file "old-send-link/SubmitSendLinkHandler.java" #########

package cf.cplace.platform.handler.page;

public class SubmitSendLinkHandler extends Handler implements PostOnlyHandler {

    private static final Message successfulSentMessage = new Message() {
    };

    private static final Message noRecipientsMessage = new Message() {
    };

    final Station VALID = new JsonSuccessStation() {
        @Override
        protected String getTargetUrl() {
            return null;
        }

        @Override
        protected Message getConfirmationMessage() {
            return successfulSentMessage;
        }
    };

    final Station NO_RECIPIENTS = new Line() {
        @Override
        public void next(Forwarder f) {
            f.goWithId(SendLinkHandler.class, sendLinkData, JsonPage.ERROR_PARAMETER);
        }

        @Override
        public Message getErrorMessage() {
            return noRecipientsMessage;
        }
    };

    final Station INVALID = new Line() {
        @Override
        public void next(Forwarder f) {
            f.goWithId(SendLinkHandler.class, sendLinkData, JsonPage.ERROR_PARAMETER);
        }

    };

    private CustomSessionEntity sendLinkData;

    @Override
    public void checkAccess() {
        this.sendLinkData = CustomSessionEntity.SCHEMA.getEntityAndCheckMayEdit(Parameters.getString("id"));
    }

    @Override
    public Station doBusinessLogic() {
        sendLinkData.applyParameters();

        if (sendLinkData.isUiSubmitValidAndNotModifiedAndGenerateErrorMessagesIfNot()) {
            // Even when the list of recipients is non-empty, it may contain no eligible mail recipients.
            Set<Person> recipients = SendLinkJob.getAllPeople(sendLinkData.get(SEND_LINK_DATA.RECIPIENTS), sendLinkData.get(SEND_LINK_DATA.SENDER));
            if (recipients.isEmpty()) {
                return NO_RECIPIENTS;
            }

            String jsonString = new SendLinkData(
                    sendLinkData.get(SEND_LINK_DATA.RECIPIENTS),
                    sendLinkData.optCustomReference(SEND_LINK_DATA.ENTITY.name).orElseThrow(() -> new IllegalArgumentException("entity")),
                    sendLinkData.getNotNull(SEND_LINK_DATA.SENDER),
                    sendLinkData.getNotEmpty(SEND_LINK_DATA.MESSAGE))
                    .toJson();
            PersistentJob.createJobAndStartInSeparateThread(SendLinkJob.class, jsonString);
            return VALID;
        } else {
            return INVALID;
        }
    }

}

######### end - content of file "old-send-link/SubmitSendLinkHandler.java" #########

######### start - content of file "old-send-link/sendLink.htm" #########
<form method="post" action="$submitUrl$" class="modal-form form-horizontal" cplace-form-provider>
    $[defaultDialogHeader()$
        <h1>$(title)$</h1>
    $defaultDialogHeader]$
    <div class="modal-body">
        $messages()$

        $this.'cf.cplace.sendLinkData.recipients'.edit()$

        <div class="alert alert-info alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            $(recipient_help_message)$
        </div>

        $this.'cf.cplace.sendLinkData.message'.edit(noLabel,cols="5000",rows="10")$
    </div>
    <div class="modal-footer">
        <a href="#" class="btn btn-primary" cplace-modal-form-submit data-ua-name="send-link-modal-button">$(send_link)$</a>
        <a href="#" class="btn btn-default" data-dismiss="modal" data-ua-name="send-link-cancel-modal-button">$(cancel)$</a>
    </div>
</form>

######### end - content of file "old-send-link/sendLink.htm" #########

